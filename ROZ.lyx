#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{Style_book}

\usepackage{color}
\usepackage{graphicx}
\graphicspath{{Images/}}

\expandafter\def\expandafter\normalsize\expandafter{%
    \normalsize
    \setlength\abovedisplayskip{4pt}
    \setlength\belowdisplayskip{4pt}
    \setlength\abovedisplayshortskip{4pt}
    \setlength\belowdisplayshortskip{4pt}
}

\renewcommand*\arraystretch{1.5}
\end_preamble
\use_default_options false
\begin_modules
theorems-ams
theorems-chap
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Provides natbib 1
\end_local_layout
\language czech
\language_package none
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 4cm
\rightmargin 2cm
\bottommargin 3cm
\headheight 0.8cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20line%"
special "none"
height "20theight%"
height_special "none"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Logos/Logo_cvut_col.svg
	width 3cm

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "60line%"
special "none"
height "20theight%"
height_special "none"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{doc_col}
\end_layout

\end_inset


\series bold
\shape smallcaps
\size larger
České vysoké učení technické v Praze
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{doc_col}
\end_layout

\end_inset


\size larger
Fakulta jaderná a fyzikálně inženýrská
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{doc_col}
\end_layout

\end_inset


\size larger
Katedra matematiky
\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20line%"
special "none"
height "20theight%"
height_special "none"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Logos/Logo_fjfi_col.svg
	width 3cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 5cm
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
Rozpoznávání a zpracování obrazu
\end_layout

\begin_layout Standard
\align center

\size huge
\begin_inset VSpace 3cm
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
\emph on
Poznámky k přednáškám (vytvořeno: 2.
 1.
 2018)
\size default
\emph default

\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Chapter*
Úvodní slovo
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Úvodní slovo}
\end_layout

\begin_layout Plain Layout


\backslash
markboth{Úvodní slovo}{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tyto poznámky vznikly jako materiál ke státní závěrečné zkoušce z předmětů
 ROZ1, ROZ2 a SFTO v roce 2017.
 Vzhledem k tomu, že se jedná o studenty vytvořené poznámky, tak není možné
 zaručit jejich bezchybnost.
 Berte proto tyto poznámky pouze jako pomocný materiál a nespoléhejte při
 učení pouze na ně.
 
\end_layout

\begin_layout Subsubsection*
Oprava chyb a další vylepšování textu
\end_layout

\begin_layout Standard
Jak již bylo zmíněno výše, poznámky jsou studentské a tedy obsahují chyby.
 Například část 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor{doc_col}{
\end_layout

\end_inset


\series bold
\emph on
Příznakové metody (signálově nezávislé)
\series default
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 je velmi nepřesná a potřebovala by předělat.
 Z tohoto důvodu Vás prosíme o spolupráci s jejich vylepšením.
 Možnosti oprav jsou v tuto chvíli dvě:
\end_layout

\begin_layout Enumerate

\emph on
hledání chyb,
\end_layout

\begin_layout Enumerate

\emph on
doplnění / přepracování částí textu (ideálně napsané v latexu nebo lyxu).
\end_layout

\begin_layout Standard
Pokud se rozhodnete, že chcete pomoci dalším studentům, hledejte chyby nebo
 něco sepište a pošlete na email 
\series bold
\emph on
machava2@fjfi.cvut.cz
\series default
\emph default
.
 
\end_layout

\begin_layout Subsubsection*
\noindent
Verze dokumentu: 
\end_layout

\begin_layout Itemize
Martin Petřek (původní verze),
\end_layout

\begin_layout Itemize
Ondřej Ticháček (první přepracování),
\end_layout

\begin_layout Itemize
Václav Mácha, Jana Vacková (současná verze).
\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Matematické základy
\end_layout

\begin_layout Section
Konvoluce a korelace
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Konvoluce a korelace v 1D
\end_layout

\end_inset

 Konvolucí rozumíme zobrazení 
\begin_inset Formula $\ast:L_{1}\times L_{1}\rightarrow L_{1}$
\end_inset

 definované pro funkce 
\begin_inset Formula $f,g$
\end_inset

 vztahem 
\begin_inset Formula 
\begin{align*}
(f\ast g)(x) & =\int\limits _{\mathbb{R}}f(t)g(x-t)\textrm{d}t, &  & \textrm{pro spojitý případ,}\\
(f\ast g)(n) & =\stackrel[m=-\infty]{\infty}{\sum}f\left(m\right)g\left(n-m\right), &  & \textrm{pro diskrétní případ.}
\end{align*}

\end_inset

 Korelací rozumíme zobrazení 
\begin_inset Formula $\circledast:L_{1}\times L_{1}\rightarrow L_{1}$
\end_inset

 definované pro funkce 
\begin_inset Formula $f,g$
\end_inset

 vztahem 
\begin_inset Formula 
\begin{align*}
\left(f\circledast g\right)\left(x\right) & =\int\limits _{\mathbb{R}}f(t)g\left(t-x\right)\textrm{d}t, &  & \textrm{pro spojitý případ,}\\
\left(f\circledast g\right)\left(n\right) & =\stackrel[m=-\infty]{\infty}{\sum}f\left(m\right)g\left(m-n\right), &  & \textrm{pro diskrétní případ.}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Princip konvoluce je znázorněn na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Konvoluce_1D"

\end_inset

.
 V podstatě se jedná o průměrování funkce 
\begin_inset Formula $f$
\end_inset

 jinou funkcí 
\begin_inset Formula $g$
\end_inset

, protože 
\begin_inset Formula $g$
\end_inset

 je většinou symetrická funkce s malým nosičem.
 Je-li např.
 
\begin_inset Formula $g$
\end_inset

 obdélníkový puls, pak se jedná o klasické průměrování.
 Dost často se požaduje, aby výsledná funkce 
\begin_inset Formula $f\ast g$
\end_inset

 měla stejně omezený obor hodnot jako původní funkce 
\begin_inset Formula $f$
\end_inset

, z tohoto důvodu se volí 
\begin_inset Formula $g$
\end_inset

 splňující vlastnost 
\begin_inset Formula $\int_{\mathbb{R}}g=1$
\end_inset

.
 Rozdíl korelace oproti konvoluci je, že funkce 
\begin_inset Formula $g$
\end_inset

 se v korelaci 
\begin_inset Quotes gld
\end_inset

neotáčí
\begin_inset Quotes grd
\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Konvoluce_1D.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění principu konvoluce v 1D.
\begin_inset CommandInset label
LatexCommand label
name "fig:Konvoluce_1D"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diracova 
\begin_inset Formula $\delta$
\end_inset

 funkce
\end_layout

\end_inset

 Diracovou 
\begin_inset Formula $\delta$
\end_inset

 funkcí rozumíme funkci 
\begin_inset Formula $\text{\delta}\left(x\right)$
\end_inset

 splňující
\begin_inset Formula 
\[
\text{\delta}\left(x\right)=\left\{ \begin{array}{ccc}
"+\infty" & \ldots & x=0\\
0 & \ldots & x\neq0
\end{array}\right.,\quad\wedge\quad\int\limits _{\mathbb{R}}\delta\left(x\right)\textrm{d}x=1.
\]

\end_inset


\end_layout

\begin_layout Lemma
Základní vlastnosti konvoluce:
\begin_inset Formula 
\begin{align*}
\textnormal{1.}\; & f\left(x\right)\ast g\left(x\right)=g\left(x\right)\ast f\left(x\right), & \textnormal{4.}\; & a\left(f\left(x\right)\ast g\left(x\right)\right)=\left(af\left(x\right)\right)\ast g\left(x\right)=f\left(x\right)\ast\left(ag\left(x\right)\right),\\
\textnormal{2.}\; & f\left(x\right)\ast\left(g\left(x\right)+h\left(x\right)\right)=f\left(x\right)\ast g\left(x\right)+f\left(x\right)\ast h\left(x\right), & \textnormal{5.}\; & f\left(x\right)\ast\delta\left(x\right)=\delta\left(x\right)\ast f\left(x\right)=f\left(x\right).\\
\textnormal{3.}\; & f\left(x\right)\ast\left(g\left(x\right)\ast h\left(x\right)\right)=\left(f\left(x\right)\ast g\left(x\right)\right)\ast h\left(x\right),
\end{align*}

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Konvoluce a korelace v 2D
\end_layout

\end_inset

 Konvoluce a korelace ve 2D jsou pro matice 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $G$
\end_inset

 definovány po prvcích následovně
\begin_inset Formula 
\begin{align*}
H\left[i,j\right] & =\stackrel[u=-k]{k}{\sum}\:\stackrel[v=-k]{k}{\sum}G\left[u,v\right]F\left[i-u,j-v\right],\\
H\left[i,j\right] & =\stackrel[u=-k]{k}{\sum}\:\stackrel[v=-k]{k}{\sum}G\left[u,v\right]F\left[i+u,j+v\right].
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
V případě konvoluce se jedná o posouvání matice 
\begin_inset Formula $G$
\end_inset

, kterou nazýváme maska, po matici 
\begin_inset Formula $F$
\end_inset

 a do každého bodu výsledné matice napíšeme součet součinů překrývajících
 se prvků.
 V případě korelace se maska aplikuje obráceně.
 Koeficienty v masce udávají váhu jednotlivým pixelům.
 Aby při aplikaci masky na obrázek nedocházelo ke zvyšování jasu, je třeba,
 aby celková energie masky byla 1.
\end_layout

\begin_layout Standard
Při aplikaci masky na obrázek dochází na okrajích k tzv.
 okrajovému efektu.
 Na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Okrajovy_efekt"

\end_inset

 jsou znázorněny možnosti aplikace masky.
 Ve většině případů chceme, aby výsledný obrázek byl stejně velký jako původní
 obrázek 
\begin_inset Formula $F$
\end_inset

, proto volíme typ 
\emph on
same
\emph default
.
 V takovém případě je ovšem nutné původní obrázek rozšířit.
 Toto rozšíření lze dělat několika způsoby:
\end_layout

\begin_layout Itemize

\series bold
přidání nul (
\emph on
zero padding
\emph default
):
\series default
 po aplikaci masky dojde k rozmazání a ztmavnutí okrajů a vzniká hrana,
\end_layout

\begin_layout Itemize

\series bold
zrcadlení (
\emph on
mirror extension
\emph default
): 
\series default
nedochází ke ztmavnutí ani rozmazání a nevzniká hrana,
\end_layout

\begin_layout Itemize

\series bold
periodické prodloužení (
\emph on
periodic extension
\emph default
): 
\series default
toto vyžadují některé matematické věty (např.
 konvoluce).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Okrajovy_efekt.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka okrajového efektu při diskrétní konvoluci ve 2D.
 Typy: 
\series bold
A)
\series default
 
\emph on
valid
\emph default
, 
\series bold
B)
\series default
 
\emph on
same
\emph default
 a 
\series bold
C)
\series default
 
\emph on
full
\emph default
.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Okrajovy_efekt"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Fourierova transformace
\end_layout

\begin_layout Standard
Fourierova řada slouží k zápisu periodického průběhu pomocí funkcí 
\begin_inset Formula $\sin$
\end_inset

 a 
\begin_inset Formula $\cos$
\end_inset

.
 Základní myšlenka zápisu funkce ve formě řady z těchto funkcí je rozklad
 vektoru do ortogonální báze.
 Mějme ortogonální bázi 
\begin_inset Formula $\mathcal{B}=\left\{ \phi_{n}\left(x\right)\right\} =\{1,\sin mx,\cos nx\}$
\end_inset

 v diskrétním prostoru 
\begin_inset Formula $L_{2}\left(\left\langle 0,2\pi\right\rangle \right)$
\end_inset

 se skalárním součinem definovaným následovně
\begin_inset Formula 
\[
\left\langle f,g\right\rangle =\int\limits _{0}^{2\pi}f\left(x\right)g\left(x\right)\textrm{d}x.
\]

\end_inset

Funkci 
\begin_inset Formula $f\in L_{2}\left(\left\langle 0,2\pi\right\rangle \right)$
\end_inset

 jsme pak schopni vyjádřit pomocí Fourierovy řady
\begin_inset Formula 
\[
f=\frac{a_{0}}{2}+\stackrel[k=1]{+\infty}{\sum}\left[a_{k}\cos\left(kx\right)+b_{k}\sin\left(kx\right)\right],
\]

\end_inset


\begin_inset Formula 
\begin{align*}
a_{0} & =\frac{1}{\pi}\int\limits _{0}^{2\pi}f\left(x\right)\textrm{d}x, & a_{k} & =\frac{1}{\pi}\int\limits _{0}^{2\pi}f\left(x\right)\cos\left(kx\right)\textrm{d}x\quad k\geq1, & b_{k} & =\frac{1}{\pi}\int\limits _{0}^{2\pi}f\left(x\right)\sin\left(kx\right)\textrm{d}x,\quad k\geq1,
\end{align*}

\end_inset

kde 
\begin_inset Formula $a_{k}$
\end_inset

 a 
\begin_inset Formula $b_{k}$
\end_inset

 jsou tzv.
 Fourierovy koeficienty.
 To, že jsme se omezili pouze na celočíselné násobky frekvencí, má za následek
 fakt, že jsme schopni v celém oboru popsat jen periodické funkce.
 V obecném pojetí lze libovolnou funkci složit z bazických 
\begin_inset Formula $\sin$
\end_inset

 a 
\begin_inset Formula $\cos$
\end_inset

 funkcí, ovšem jejich frekvence musí být spojitě se měnící.
 
\end_layout

\begin_layout Standard
Fourierova transformace je integrální transformace převádějící signál mezi
 časově a frekvenčně závislým vyjádřením pomocí harmonických signálů.
 V podstatě se jedná o vyjádření původní funkce jako lineární kombinace
 
\begin_inset Formula $\sin$
\end_inset

 a 
\begin_inset Formula $\cos$
\end_inset

 funkcí.
 Slouží pro převod signálů z časové oblasti do oblasti frekvenční.
 V jednodimenzionálním případě jsou bázové funkce ve tvaru 
\begin_inset Formula 
\[
\left\{ \phi_{u}\left(x\right)\right\} =\left\{ e^{-2\pi iux}\right\} 
\]

\end_inset

 a ve dvoudimenzionálním případě jsou bázové funkce ve tvaru 
\begin_inset Formula 
\[
\left\{ \phi_{uv}\left(x,y\right)\right\} =\left\{ e^{-2\pi i\left(ux+vy\right)}\right\} 
\]

\end_inset

 a jejich reálná a imaginární část je tvořena 
\begin_inset Quotes gld
\end_inset

vlnitými plechy
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Spojitá Fourierova transformace (CFT) a inverzní spojitá Fourierova transformace
 (IFT)
\end_layout

\end_inset

 Nechť 
\begin_inset Formula $f\in L_{1}$
\end_inset

, pak spojitá Fourierova transformace je definována vztahem
\begin_inset Formula 
\begin{align*}
F\left(u\right) & =\mathcal{F}\left[f(x)\right]\left(u\right)=\int\limits _{\mathbb{R}}f\left(x\right)e^{-2\pi iux}\textrm{d}x & \textrm{v 1D},\\
F\left(u,v\right) & =\mathcal{F}\left[f\left(x,y\right)\right]\left(u,v\right)=\int\limits _{\mathbb{R}^{2}}f\left(x,y\right)e^{-2\pi i\left(ux+vy\right)}\textrm{d}x\textrm{d}y & \textrm{ve 2D}.
\end{align*}

\end_inset

Inverzní Fourierovu transformaci definujeme následovně
\begin_inset Formula 
\begin{align*}
f\left(x\right) & =\mathcal{F}^{-1}\left[F\left(u\right)\right]\left(x\right)=\int\limits _{\mathbb{R}}F\left(u\right)e^{2\pi iux}\textrm{d}u & \textrm{v 1D},\\
f\left(x,y\right) & =\mathcal{F}^{-1}\left[F\left(u,v\right)\right]\left(x,y\right)=\int\limits _{\mathbb{R}^{2}}F\left(u,v\right)e^{2\pi i\left(ux+vy\right)}\textrm{d}u\textrm{d}v & \textrm{ve 2D}.
\end{align*}

\end_inset


\end_layout

\begin_layout Note
Fourierova transformace a spojitá Fourierova transformace se nepatrně liší
\begin_inset Formula 
\begin{align*}
\mathcal{F}\left[f\left(x\right)\right] & =\int\limits _{\mathbb{R}}f\left(x\right)e^{-iux}\textrm{d}x, & \mathcal{F}^{-1}\left[F\left(u\right)\right] & =\frac{1}{2\pi}\int\limits _{\mathbb{R}}F\left(u\right)e^{iux}\textrm{d}u.
\end{align*}

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diskrétní Fourierova transformace
\end_layout

\end_inset

 Diskrétní Fourierova transformace a inverzní diskrétní Fourierova jsou
 definovány vztahy
\begin_inset Formula 
\begin{align*}
F\left(k\right) & =\mathcal{F}\left[f(n)\right]\left(k\right)=\stackrel[n=0]{N-1}{\sum}f\left(n\right)e^{-\frac{1}{N}2\pi ink}, & \forall k & \in\left\{ 0,1,\ldots,N-1\right\} ,\\
f\left(n\right) & =\mathcal{F}^{-1}\left[F\left(k\right)\right]\left(n\right)=\frac{1}{N}\cdot\stackrel[k=0]{N-1}{\sum}F\left(k\right)e^{\frac{1}{N}2\pi ink}, & \forall n & \in\left\{ 0,1,\ldots,N-1\right\} .
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Existence komplexní funkce 
\begin_inset Formula $F$
\end_inset

 plyne z předpokladu, není ovšem zaručeno, že i 
\begin_inset Formula $F\left(u\right)$
\end_inset

 bude z 
\begin_inset Formula $L_{1}$
\end_inset

.
 Díky tomu, že 
\begin_inset Formula $F\left(u\right)$
\end_inset

 je komplexní funkce (spektrum), lze jí rozložit do tvaru
\begin_inset Formula 
\[
F\left(u\right)=\left|F\left(u\right)\right|e^{i\arg F\left(u\right)},
\]

\end_inset

kde 
\begin_inset Formula $\left|F\left(u\right)\right|$
\end_inset

 je tzv.
 amplitudové spektrum a 
\begin_inset Formula $\arg F\left(u\right)$
\end_inset

 fázové spektrum.
\end_layout

\begin_layout Lemma
Vlastnosti Fourierovy transformace:
\begin_inset Formula 
\begin{align*}
\textnormal{1.}\; & \mathcal{F}\left[af\left(x\right)+g\left(x\right)\right]\left(u\right)=a\mathcal{F}\left[f\left(x\right)\right]\left(u\right)+\mathcal{F}\left[g\left(x\right)\right]\left(u\right), & \textnormal{4.}\; & \mathcal{F}\left[1\right]\left(u\right)=\delta\left(u\right),\\
\textnormal{2.}\; & \mathcal{F}\left[a\cdot f\left(x\right)\right]\left(u\right)=\left|a\right|^{-1}\mathcal{F}\left[f\left(x\right)\right]\left(\frac{u}{a}\right), & \textnormal{5.}\; & \mathcal{F}\left[R\left(f\left(x\right)\right)\right]\left(u\right)=R\left(\mathcal{F}\left[f\left(x\right)\right]\left(u\right)\right),\\
\textnormal{3.}\; & \mathcal{F}\left[\delta\left(x\right)\right]=1,
\end{align*}

\end_inset

kde 
\begin_inset Formula $R\left(.\right)$
\end_inset

 značí rotaci.
\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Fourier Shift teorém 
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "thm:Fourier_Shift_Theorem"

\end_inset

Posuneme-li funkci 
\begin_inset Formula $f$
\end_inset

 o konstantu 
\begin_inset Formula $a$
\end_inset

, dává Fourierova transformace vztah:
\begin_inset Formula 
\[
\mathcal{F}\left[f(x-a)\right]\left(u\right)=e^{-2\pi iau}F(u).
\]

\end_inset


\end_layout

\begin_layout Proof
Upravujme
\begin_inset Formula 
\begin{align*}
\mathcal{F}\left[f\left(x-a\right)\right]\left(u\right) & =\int\limits _{\mathbb{R}}f\left(x-a\right)e^{-2\pi iu(x\pm a)}\textrm{d}x=e^{-2\pi iua}\int\limits _{\mathbb{R}}f\left(x-a\right)e^{-2\pi iu(x-a)}\textrm{d}x=\left|\begin{array}{c}
y=x-a\\
\textrm{d}y=\textrm{d}x
\end{array}\right|=\\
 & =e^{-2\pi iua}\int\limits _{\mathbb{R}}f\left(y\right)e^{-2\pi iuy}\textrm{d}y=e^{-2\pi iua}F\left(u\right).
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Tedy obraz je akorát násobený komplexní jednotkou 
\begin_inset Formula $e^{-2\pi iau}$
\end_inset

, tj.
 jeho amplituda má stejnou velikost jako originál.
 Toho lze využít pro rozpoznávání, fázi lze zjistit dodatečně.
 Lze také ukázat, že nejpodstatnější část obrazové informace je obsažena
 ve fázi, amplituda nemá tak zásadní vliv na vzhled obrazu.
\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Konvoluční teorém
\end_layout

\end_inset

Pro Fourierovu transformaci platí následující vztahy
\begin_inset Formula 
\begin{align*}
\mathcal{F}\left[f\left(x\right)\ast g\left(x\right)\right]\left(u\right) & =F\left(u\right)\cdot G\left(u\right),\\
\mathcal{F}\left[f\left(x\right)\cdot g\left(x\right)\right]\left(u\right) & =F\left(u\right)\ast G\left(u\right),
\end{align*}

\end_inset

kde symbol 
\begin_inset Formula $\cdot$
\end_inset

 značí násobení stejně rozměrných matic po prvcích.
\end_layout

\begin_layout Proof
Upravujme
\begin_inset Formula 
\begin{align*}
\mathcal{F}\left[f\left(x\right)\ast g\left(x\right)\right]\left(u\right) & =\int\limits _{\mathbb{R}}\left[\int\limits _{\mathbb{R}}f(t)g(x-t)\textrm{d}t\right]e^{-2\pi iux}\textrm{d}x\overset{a)}{=}\int\limits _{\mathbb{R}}f(t)\left[\int\limits _{\mathbb{R}}g(x-t)e^{-2\pi iux}\textrm{d}x\right]\textrm{d}t=\\
 & \overset{b)}{=}\int\limits _{\mathbb{R}}f(t)\left[e^{-2\pi itu}G(u)\right]\textrm{d}t=\int\limits _{\mathbb{R}}f(t)e^{-2\pi itu}\textrm{d}t\cdot G(u)=F(u)\cdot G(u),
\end{align*}

\end_inset

kde jsme v rovnosti 
\begin_inset Formula $a)$
\end_inset

 použili Fubiniho větu a v rovnosti 
\begin_inset Formula $b)$
\end_inset

 větu 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Fourier_Shift_Theorem"

\end_inset

.
 Druhou rovnost dokážeme obdobně
\begin_inset Formula 
\begin{align*}
\mathcal{F}\left[f\left(x\right)\cdot g\left(x\right)\right]\left(u\right) & =\int\limits _{\mathbb{R}}f\left(x\right)g\left(x\right)e^{-2\pi iux}\textrm{d}x\overset{a)}{=}\int\limits _{\mathbb{R}}\left[\int\limits _{\mathbb{R}}F\left(t\right)e^{2\pi itx}\textrm{d}t\right]g\left(x\right)e^{-2\pi iux}\textrm{d}x=\\
 & \overset{c)}{=}\int\limits _{\mathbb{R}}F\left(t\right)\left[\int\limits _{\mathbb{R}}g\left(x\right)e^{-2\pi i\left(u-t\right)x}\textrm{d}x\right]\textrm{d}t=\int\limits _{\mathbb{R}}F\left(t\right)G\left(u-t\right)\textrm{d}t=F(u)\ast G(u),
\end{align*}

\end_inset

kde jsme v rovnosti 
\begin_inset Formula $a)$
\end_inset

 použili inverzní Fourierovu transformaci a v rovnosti 
\begin_inset Formula $b)$
\end_inset

 Fubiniho větu.
\end_layout

\begin_layout Standard
Pokud chceme ověřit konvoluční teorém v praxi, je potřeba diskrétní data
 periodicky prodlužovat! Co se týká náročnosti, má výpočet diskrétní Fourierovy
 transformace v základním tvaru složitost 
\begin_inset Formula $O\left(N^{2}\right)$
\end_inset

.
 V roce 1942 pánové Danielson a Lanczos zjistili, že posloupnosti délky
 
\begin_inset Formula $N=2^{k}$
\end_inset

 lze vyjádřit jako součet dvou diskrétních Fourierových transformací délky
 
\begin_inset Formula $\frac{N}{2},$
\end_inset

 kde v jedné jsou liché a ve druhé sudé vzorky.
 V roce 1965 Cooley a Turkey zobecnili tuto metodu i pro posloupnosti délky
 
\begin_inset Formula $N\neq2^{k}$
\end_inset

.
 Tato rychlá Fourierova transformace (FFT) se používá dodnes.
 Lze ji sestrojit pro obecné obdélníkové matice a její složitost je 
\begin_inset Formula $O\left(N\cdot\log_{2}N\right)$
\end_inset

.
 Naproti tomu konvoluce má složitost 
\begin_inset Formula $O\left(N^{2}\right)$
\end_inset

 pro každý bod masky, tedy je jasné, že při počítání konvoluce s rozměrnějšími
 maticemi je výhodnější použít konvolučního teorému a ve frekvenční oblasti
 pouze vynásobit matice.
\end_layout

\begin_layout Example
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Funkce 
\begin_inset Formula $\textrm{sinc\left(x\right)}$
\end_inset


\end_layout

\end_inset

Nyní ukažme jak vypadá Fourierův obraz 
\emph on
obdélníkového pulsu
\emph default
.
 Nechť 
\begin_inset Formula $f$
\end_inset

 je funkce definovaná pro 
\begin_inset Formula $c\in\mathbb{R}$
\end_inset

 a 
\begin_inset Formula $\lambda\in\mathbb{R}^{+}$
\end_inset

 jako 
\begin_inset Formula 
\begin{align*}
f(x) & =\left\{ \begin{array}{ccc}
c & \ldots & x\in\langle-\lambda,\lambda\rangle,\\
0 & \ldots & \text{jinde},
\end{array}\right.
\end{align*}

\end_inset

pak
\begin_inset Formula 
\[
F(u)=\int\limits _{\mathbb{R}}f(x)e^{-2\pi iux}\textrm{d}x=c\int\limits _{-\lambda}^{\lambda}e^{-2\pi iux}\textrm{d}x=\frac{c}{-2\pi iu}\left[e^{-2\pi uix}\right]_{-\lambda}^{\lambda}=c\frac{e^{-2\pi iu\lambda}-e^{2\pi iu\lambda}}{-2\pi iu}=\frac{c}{\pi u}\sin(2\pi\lambda u).
\]

\end_inset

Pro 
\begin_inset Formula $c=1$
\end_inset

 a 
\begin_inset Formula $\lambda=\frac{1}{2}$
\end_inset

 dostaneme funkci 
\begin_inset Formula $\textnormal{sinc}$
\end_inset


\begin_inset Formula 
\begin{align*}
F(u) & =\frac{\sin(\pi u)}{\pi u}=\textnormal{sinc}(u).
\end{align*}

\end_inset

Ve 2D vzniká funkce 
\begin_inset Formula $\mathrm{sinc}\left(x,y\right)$
\end_inset

, která je ve tvaru
\begin_inset Formula 
\[
\textnormal{sinc}\left(x,y\right)=\textnormal{sinc}(x)\textnormal{sinc}(y)=\frac{\sin\left(\pi x\right)\sin\left(\pi y\right)}{\pi^{2}xy}.
\]

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Funkce_sinc.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Fourierova transformace obdélníkového pulsu a vzniklá funkce 
\begin_inset Formula $\textnormal{sinc}(x)$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset

Tato funkce není středově symetrická, jak by se mohlo zdát.
 Další velice zajímavou vlastnost obdélníkového pulsu získáme, pokud budeme
 provádět konvoluci těchto pulsů.
 Opakováním konvoluce obdélníkových pulsů totiž vznikají tzv.
 B-spline křivky, které stále lépe aproximují Gaussovu funkci, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:B_spline"

\end_inset

.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/B-spline.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka opakované konvoluce obdélníkových pulsů a vznik B-spline křivek.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:B_spline"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Další důležitý signál je ve 2D obdélníkový signál, kruhový signál a gaussovký
 signál.
 Amplitudové spektrum obdélníkového signálu je tvořeno 
\begin_inset Quotes gld
\end_inset

protáhlou
\begin_inset Quotes grd
\end_inset

 funkcí 
\begin_inset Formula $\textnormal{sinc}$
\end_inset

.
 Amplitudové spektrum kruhového signálu je tvořeno Besselovou funkcí a spektrum
 gaussovského signálu je opět Gaussova funkce.
 Tyto signály a jejich amplitudová spektra jsou na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly"

\end_inset

 a na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly_ve_3D"

\end_inset

 jsou jejich 3D znázornění.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor7.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor8.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor9.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz7.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz8.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz9.png
	width 15line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka dalších důležitých signálů a jejich amplitudové spektrum.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:FT_2D_signaly"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement p
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor_3D1.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor_3D2.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor_3D3.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz_3D1.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz_3D2.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz_3D3.png
	lyxscale 10
	width 30line%
	height 13theight%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Reprezentace signálu z obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly"

\end_inset

 ve 3D, kde třetí rozměr reprezentuje intenzitu v daném pixelu.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:FT_2D_signaly_ve_3D"

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor1.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor2.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor3.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor4.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor5.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_vzor6.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Downarrow\mathcal{F}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz1.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz2.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz3.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz4.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz5.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/FT_obraz6.png
	width 13line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka amplitudového spektra vybraných pravidelných obrazů.
\begin_inset CommandInset label
LatexCommand label
name "fig:FT_pravidelnosti"

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset CommandInset include
LatexCommand include
filename "Images/Frekvencni_filtry.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Filtry ve frekvenční oblasti: 
\series bold
A)
\series default
 
\emph on
high-pass filtr
\emph default
, 
\series bold
B)
\series default
 
\emph on
low-pass filtr
\emph default
, 
\series bold
C)
\series default
 
\emph on
band-pass filtr
\emph default
, 
\series bold
D)
\series default
 
\emph on
Gaussovký high-pass filtr
\emph default
, 
\series bold
E)
\series default
 
\emph on
Gaussovký low-pass filtr
\emph default
 a 
\series bold
F)
\series default
 
\emph on
směrový filtr
\emph default
.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Filtry_frekvencni"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Filtrace ve frekvenční oblasti
\end_layout

\begin_layout Standard
Pokud provedeme Fourierovu transformaci 2D obrazu, získáme její projekci
 do prostoru bazických funkcí a dozvíme se, jak jsou v obrazu zastoupeny
 jednotlivé frekvence.
 Protože jsme ovšem původně měli reálný signál, bude Fourierův obraz symetrický
 podle středu.
 V bodě 
\begin_inset Formula $\left(0,0\right)$
\end_inset

 se nachází celková energie (součet intenzit jednotlivých pixelů) Fourierova
 obrazu, protože 
\begin_inset Formula 
\[
F\left(0,0\right)=\stackrel[n=0]{N-1}{\sum}\stackrel[m=0]{M-1}{\sum}f\left(n,m\right)e^{-2\pi i\left(\frac{1}{N}n0+\frac{1}{M}m0\right)}=\stackrel[n=0]{N-1}{\sum}\stackrel[m=0]{M-1}{\sum}f\left(n,m\right).
\]

\end_inset

Naopak u obvodu jsou vyobrazeny vysoké frekvence.
 Protože Fourierova transformace detekuje pravidelnosti, tak pravidelné
 obrazce se Fourierovou transformací promítnou na jednotlivé body.
 Navíc lze z Fourierova obrazu odvodit hlavní směry ve Fourierově vzoru.
 Ve Fourierově obrazu budou totiž linie kolmé na skutečný směr, tedy na
 směr v původním obrazu, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_pravidelnosti"

\end_inset

.
\end_layout

\begin_layout Standard
Uvedených vlastností Fourierovy transformace lze dobře využít pro filtrování
 nechtěných frekvencí.
 Na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Filtry_frekvencni"

\end_inset

 jsou zobrazeny základní filtry pro filtraci ve frekvenční oblasti.
 
\emph on
High-pass
\emph default
 filtry propouštějí vysoké frekvence a tak zachovávají hrany a detaily.
 Naopak 
\emph on
low-pass
\emph default
 filtry vysoké frekvence nepropouští a výsledný obraz rozmazávají.
\end_layout

\begin_layout Section
Otázky
\end_layout

\begin_layout Itemize

\emph on
Zdvojnásobují se data při FT?
\end_layout

\begin_deeper
\begin_layout Standard
Ne, FT je symetrická středově (
\begin_inset Formula $n$
\end_inset

 je reálné) 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Nejvyšší frekvence u DFT?
\end_layout

\begin_deeper
\begin_layout Standard
Pro 
\begin_inset Formula $n=0$
\end_inset

 to je konstanta, 
\begin_inset Formula $n=1$
\end_inset

 je to pul sinu, 
\begin_inset Formula $n=2$
\end_inset

 je to sin.
 Takže nejvyšší vlnová délka jde přes 2 body a tím, že je to symetrické
 tak je to v 
\begin_inset Formula $n=N/2$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Co nese více informací – amplituda nebo fáze?
\end_layout

\begin_deeper
\begin_layout Standard
Fáze (tu vizuální).
 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Co se stane, když amplitudu nahradím jedničkami a fázi nechám?
\end_layout

\begin_deeper
\begin_layout Standard
Po inverzní FT dostanu černý obrázek a obrysy budou bílé.
 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Porovnání rychlosti výpočtu s konvolucí
\emph default
 
\end_layout

\begin_deeper
\begin_layout Standard
Při malém filtru je rychlejší počítat v obrazové oblasti, ale při velkém
 je lépe přejít do frekvenční.
 
\end_layout

\end_deeper
\begin_layout Chapter
Digitalizace
\end_layout

\begin_layout Standard
Digitalizaci rozlišujeme podle toho, zda diskretizaci provedeme v prostoru
 souřadnic či v oboru hodnot.
 Pak hovoříme o 
\emph on
vzorkování (prostor souřadnic)
\emph default
 nebo
\emph on
 kvantování (obor hodnot).
\emph default

\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Vzorkovani_vs_kvantovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění principu 
\series bold
A)
\series default
 vzorkování a 
\series bold
B)
\series default
 kvantování.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Vzorkování
\end_layout

\begin_layout Standard
Vzorkování lze považovat za násobení původního spojitého signálu nekonečným
 polem 
\begin_inset Formula $\delta$
\end_inset

-funkcí, tj.
 použijeme vzorkovací funkci 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "eq:Vzorkovani"

\end_inset


\begin_inset Formula 
\begin{equation}
s\left(x,y\right)=\sum\limits _{i=-\infty}^{\infty}\sum\limits _{j=-\infty}^{\infty}\delta\left(x-i\Delta x,y-j\Delta y\right),\label{eq:Vzorkovani_1}
\end{equation}

\end_inset

pomocí níž získáme výsledný digitální obraz
\begin_inset Formula 
\begin{equation}
d\left(x,y\right)=f\left(x,y\right)\cdot s\left(x,y\right),\label{eq:Vzorkovani_2}
\end{equation}

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset

kde funkci 
\begin_inset Formula $s\left(x,y\right)$
\end_inset

 nazýváme vzorkovací funkce a 
\begin_inset Formula $d\left(x,y\right)$
\end_inset

 je výsledný digitální obraz.
 Lze ukázat, že Fourierův obraz nekonečného pole 
\begin_inset Formula $\delta$
\end_inset

-funkcí bude opět nekonečné pole 
\begin_inset Formula $\delta$
\end_inset

-funkcí s krokem 
\begin_inset Formula $\frac{1}{\Delta x},\frac{1}{\Delta y}$
\end_inset

.
 Pokud použijeme Fourierovu transformaci na rovnice 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Vzorkovani"

\end_inset

, dostáváme
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "eq:Vzorkovani_fourier"

\end_inset


\begin_inset Formula 
\begin{align}
S\left(u,v\right) & =\sum\limits _{i=-\infty}^{\infty}\sum\limits _{j=-\infty}^{\infty}\delta\left(u-\frac{i}{\Delta x},u-\frac{j}{\Delta y}\right),\label{eq:Vzorkovani_fourier_1}\\
D\left(u,v\right) & =F\left(u,v\right)\ast S\left(u,v\right).\label{eq:Vzorkovani_fourier_2}
\end{align}

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset

Tedy zvyšováním vzorkovací frekvence (tj.
 zmenšováním 
\begin_inset Formula $\Delta x$
\end_inset

 a 
\begin_inset Formula $\Delta y$
\end_inset

) současně zvyšujeme vzdálenost mezi Fourierovými obrazy dvou vzorků, protože
 funkce 
\begin_inset Formula $D\left(u,v\right)$
\end_inset

 ve vztahu 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Vzorkovani_fourier"

\end_inset

 není nic jiného než opakování funkce 
\begin_inset Formula $F\left(u,v\right)$
\end_inset

 ve vzdálenosti Fourierových pulsů vzorkovací funkce, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Vzorkovani"

\end_inset

.
 Pokud budeme chtít funkci zrekonstruovat z jejích Fourierových vzorků,
 je nezbytně nutné, aby tyto vzorky nebyly poškozeny vzájemným překrytím.
 Shannonův teorém dává odpověď, jak hustě vzorkovat, abychom neztratili
 obrazové informace.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Vzorkovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění vzorkování ve frekvenční oblasti.
\begin_inset CommandInset label
LatexCommand label
name "fig:Vzorkovani"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Shannonův vzorkovací teorém
\end_layout

\end_inset

 Aby bylo možné zrekonstruovat funkci 
\begin_inset Formula $d\left(x,y\right)$
\end_inset

 z jejího Fourierova obrazu 
\begin_inset Formula $D\left(u,v\right)$
\end_inset

, je třeba, aby splňovala následující podmínky.
\end_layout

\begin_deeper
\begin_layout Enumerate
Musí být frekvenčně omezená (frekvenčně neomezené funkce, tj.
 neexistuje 
\begin_inset Formula $f_{\max}<\infty$
\end_inset

, mají totiž neomezené frekvenční spektrum, a proto se vzorky budou vždy
 překrývat).
\end_layout

\begin_layout Enumerate
Vzorkovací frekvence musí být větší nebo rovna dvojnásobku maximální frekvence
 
\begin_inset Formula $f_{\max}$
\end_inset

 (tzv.
 Nyquistův limit), tzn.
\begin_inset Formula 
\begin{align*}
\Delta x & \leq\frac{1}{2W_{u}}, & \Delta y & \leq\frac{1}{2W_{v}}.
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Note
Uvažujme, že existuje maximální frekvence 
\begin_inset Formula $f_{\max}$
\end_inset

 a předpokládejme, že se v obrazu nevyskytuje.
 Potom je ideálním vzorkováním 
\emph on
Nyquistův limit
\emph default
, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Vzorkovani_prekryvani"

\end_inset

.
 V případě, že se maximální frekvence v obrazu vyskytuje, tak při použití
 tohoto vzorkování dojde k překryvu maximální frekvence, a tedy ke ztrátě
 informace.
\end_layout

\begin_layout Standard
V závislosti na volbě vzorkovací frekvence může dojít ke třem situacím,
 viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Vzorkovani_prekryvani"

\end_inset

.
 Ideální rekonstrukční filtr má tedy ve frekvenční oblasti tvar obyčejné
 schodovité funkce (konkrétně je to obdélníkový puls) a její spojitý vzor
 v časové oblasti má tvar již zmíněné funkce 
\begin_inset Formula $\mathrm{\textrm{sinc}}$
\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Vzorkovani_prekryvani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Překrývání obrazů frekvenčně omezené funkce: 
\series bold
A)
\series default
 převzorkování, 
\series bold
B)
\series default
 ideální vzorkování a 
\series bold
C)
\series default
 podvzorkování.
\begin_inset CommandInset label
LatexCommand label
name "fig:Vzorkovani_prekryvani"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aliasing
\end_layout

\begin_layout Standard
Pro frekvenčně neomezené funkce by byl teoreticky potřeba nekonečně malý
 krok.
 Vzorkováním tedy může vznikat velmi nepříjemný jev zvaný 
\emph on
aliasing
\emph default
, který nastává ve dvou případech.
 
\end_layout

\begin_layout Enumerate
Pokud je původní funkce frekvenčně neomezená, tj.
 neexistuje žádná maximální frekvence, a funkci tudíž nelze v diskrétním
 rastru reprezentovat přesně.
 
\end_layout

\begin_layout Enumerate
Funkce je sice frekvenčně omezená, tj.
 existuje 
\begin_inset Formula $f_{\max}<\infty$
\end_inset

, ale funkci vzorkujeme s frekvencí menší než 
\begin_inset Formula $2f_{\max}$
\end_inset

, tedy pod Nyquistovým limitem.
 
\end_layout

\begin_layout Standard
V těchto případech dochází k překrytí spekter ve frekvenční oblasti, čímž
 ztrácíme vysokofrekvenční informaci.
 Pokud například budeme snímat hodiny a nezvolíme dostatečné vzorkování
 (v časové oblasti), budou ručičky vypadat, jako by se pohybovaly pozpátku,
 viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Aliasing"

\end_inset

.
 Ve fotografii je tento jev znám jako 
\emph on
Moiré efekt
\emph default
, a je to tedy jev, kdy na snímku vznikají falešné nízké frekvence.
 Pro odstranění se používají následující techniky.
\end_layout

\begin_layout Itemize
Zvýšení vzorkovací frekvence (to ale nejde vždy).
\end_layout

\begin_layout Itemize
Odstranění vysokých frekvencí ještě před vzorkováním, čímž zabráníme překrytím
 spekter ve frekvenční oblasti a vzniku falešných frekvencí.
 Je tedy třeba použít nějaký filtr, např.
 optiku (mírné rozostření).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Aliasing.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka 
\series bold
A)
\series default
 dostatečného a 
\series bold
B)
\series default
 nedostatečného vzorkování v časové oblasti.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Aliasing"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Kvantování
\end_layout

\begin_layout Standard
Kvantování je zobrazení z 
\begin_inset Formula $\mathbb{R}$
\end_inset

 do množiny 
\begin_inset Formula $K=\{0,1,\dots,L-1\}$
\end_inset

.
 Počet intenzit 
\begin_inset Formula $L$
\end_inset

 se většinou volí 256.
 Z povahy množin 
\begin_inset Formula $\mathbb{R}$
\end_inset

 a 
\begin_inset Formula $K$
\end_inset

 je jasné, že se jedná o ztrátovou operaci a není jednoznačný inverzní proces.
 Hodnoty intenzit 
\begin_inset Formula $i\in K$
\end_inset

 označujeme při kvantování jako tzv.
 
\emph on
kvantovací prahy
\emph default
.
 Kvantovací prahy můžeme volit několika způsoby.
 První a poslední práh je většinou určen snímacím zařízením.
 Dále se používají následující.
\end_layout

\begin_layout Itemize

\emph on
Ekvidistantní
\emph default
 – prahy jsou od sebe stejně vzdáleny, velmi často se používá.
\end_layout

\begin_layout Itemize

\emph on
Logaritmické (exponenciální)
\emph default
 – využívá se u ztmavených obrázků.
\end_layout

\begin_layout Itemize
Další volba je třeba taková, aby každá barva byla zastoupena přibližně stejným
 počtem pixelů.
\end_layout

\begin_layout Standard
Nedostatečným počtem úrovní intenzit vznikají falešné kvantizační hrany
 (
\emph on
false contour effect
\emph default
).
 Lidské oko se ovšem podle hran orientuje, proto se přidává aditivní šum,
 který tento nepříjemný efekt rozmaže (samozřejmě pouze tehdy, pokud nelze
 zvýšit počet prahů).
 Máme-li omezenou paměť, je třeba volit vhodně počet úrovní a prostorové
 rozlišení.
 Má-li obraz málo detailů, je lepší volit více hodnot pro kvantování s menším
 rozlišením.
 Pro hodně detailů a hran upřednostnit vetší rozlišení a méně úrovní pro
 kvantování.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Kvantovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka kvantování pomocí ekvidistantního kvantizéru a vzniku falešných kvantizač
ních hran.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Charakteristiky lidského oka
\end_layout

\begin_layout Standard
Experimentálně byly zjištěny tyto charakteristiky zdravého lidského oka:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\bullet$
\end_inset

 prostorová rozlišovací schopnost
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0,1
\begin_inset space ~
\end_inset

mm ze vzdálenosti 25
\begin_inset space ~
\end_inset

cm,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\bullet$
\end_inset

 rozlišení šedi (odděleně) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40 úrovní ,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\bullet$
\end_inset

 rozlišení šedi (porovnání vedle sebe) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100 úrovní .
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
Dále podle průzkumu bylo vypozorováno, že standardní obrázek velikosti 
\begin_inset Formula $512\times512$
\end_inset

 se 128 stupni šedi zobrazený na plochu 
\begin_inset Formula $5\times5$
\end_inset

 cm pozorovaný ze vzdálenosti 25
\begin_inset space ~
\end_inset

cm se jeví jako 
\series bold
spojitý
\series default
.
\end_layout

\begin_layout Section
Barevné prostory
\end_layout

\begin_layout Standard
Barevný prostor je předem definovaná množina barev, kterou je schopno určité
 zařízení snímat, zobrazit nebo reprodukovat.
 Ve většině případů je založen na barevném modelu, ale na rozdíl od barevného
 modelu má barevný prostor standardizované odstíny základních barev.
\end_layout

\begin_layout Subsection
RGB prostory
\end_layout

\begin_layout Standard
Tyto barevné prostory jsou založeny na barevném modelu RGB, který se skládá
 ze tří základních barev: červené (
\emph on
Red
\emph default
), zelené (
\emph on
Green
\emph default
) a modré (
\emph on
Blue
\emph default
).
 Model RGB využívá aditivního míchání barev a používá se pro zobrazení barev
 v monitorech, projektorech, televizích atd.
 Na rozdíl od modelu CMYK nepotřebuje vnější světlo.
\end_layout

\begin_layout Subsection
CMYK prostory
\end_layout

\begin_layout Standard
Tyto barevné prostory jsou založeny na barevném modelu CMYK, který tvoří
 čtyři základní barvy: azurová (
\emph on
Cyan
\emph default
), purpurová (
\emph on
Magenta
\emph default
), žlutá (
\emph on
Yellow
\emph default
) a černá (
\emph on
blacK
\emph default
).
 Barevný model CMYK využívá subtraktivní míchání barev a používá se výhradně
 pro tisk.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Barevny_model_RGB_HSV.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka barevných prostorů: 
\series bold
A)
\series default
 základní barvy a jejich kombinace,
\series bold
 B)
\series default
 RGB prostor, 
\series bold
C)
\series default
 CMYK prostor.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
HSV prostory
\end_layout

\begin_layout Standard
HSV (
\emph on
Hue
\emph default
, 
\emph on
Saturation
\emph default
, 
\emph on
Value
\emph default
), také známý jako HSB (
\emph on
Hue
\emph default
, 
\emph on
Saturation
\emph default
, 
\emph on
Brightness
\emph default
), je barevný model, který nejvíce odpovídá lidskému vnímání barev.
 Skládá se ze tří složek (nejsou to základní barvy), u nichž je nutno hlídat
 hodnoty, protože může docházet k nesmyslným kombinacím.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Hue
\emph default
:
\series default
 převládající barevný tón (odstín).
 Měří se jako poloha na standardním barevném kole (
\begin_inset Formula $0°$
\end_inset

 až 
\begin_inset Formula $360°$
\end_inset

).
 Obecně se odstín označuje názvem barvy.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Saturation
\emph default
:
\series default
 sytost barvy, příměs jiné barvy.
 Někdy též chroma, síla nebo čistota barvy, představuje množství šedi v
 poměru k odstínu.
 Měří se v procentech od 
\begin_inset Formula $0\%$
\end_inset

 (šedá) do 
\begin_inset Formula $100\%$
\end_inset

 (plně sytá barva).
 Na barevném kole vzrůstá sytost od středu k okrajům.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Value
\emph default
:
\series default
 hodnota jasu, množství bílého světla.
 Relativní světlost nebo tmavost barvy.
 Jas vyjadřuje, kolik světla barva odráží, dalo by se také říct přidávání
 černé do základní barvy.
 Měří se opět v procentech.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/PNG/HSV.png
	lyxscale 10
	width 35line%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
HSV barevný prostor.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Otázky
\end_layout

\begin_layout Itemize

\emph on
Je dobré mít pravoúhlé vzorkování?
\end_layout

\begin_deeper
\begin_layout Standard
Efektivnější by bylo jiné, třeba hexagonální, aby spektra pokrývali největší
 plochu a zároveň se nepřekrývala.
 Ale většina scannerů a dalších přístrojů má pravoúhlé vzorkování, a to
 kvůli jednodušší konstrukci.
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Když mám hodně členitou scénu, co je více potřeba, jemnější vzorkování nebo
 kvantování?
\end_layout

\begin_deeper
\begin_layout Standard
Vzorkování.
 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Když mám v obraze hodně velké plochy, scéna není tak členitá, co je více
 potřeba, jemnější vzorkování nebo kvantování?
\emph default
 
\end_layout

\begin_deeper
\begin_layout Standard
Kvantování.
\end_layout

\end_deeper
\begin_layout Part
Předzpracování
\end_layout

\begin_layout Chapter
Metody pro vylepšení vzhledu
\end_layout

\begin_layout Section
Jas a kontrast
\end_layout

\begin_layout Standard
Změna kontrastu a jasu se provádí změnou hodnot v histogramu.
 Realizuje se transformační funkcí 
\begin_inset Formula $\psi:K\rightarrow K$
\end_inset

.
 Hodnota výsledků závisí pouze na hodnotě v jednom bodě, jedná se tedy o
 
\emph on
bodové operace
\emph default
.
 
\end_layout

\begin_layout Itemize

\series bold
Pixel:
\series default
 nejmenší (bezrozměrná) jednotka digitální rastrové grafiky, 1 bod obrazu
 charakterizovaný jasem a barvou.
\end_layout

\begin_layout Itemize

\series bold
Histogram:
\series default
 funkce četností jednotlivých intenzit.
 Lze jej přirovnat k hustotě pravděpodobnosti.
 Předpokládejme 
\begin_inset Formula $L$
\end_inset

 úrovní jasu a označme 
\begin_inset Formula $n_{i}$
\end_inset

, 
\begin_inset Formula $i\in K\coloneqq\left\{ 0,1,\ldots,L-1\right\} $
\end_inset

 počet pixelů s intenzitou 
\begin_inset Formula $i$
\end_inset

, tzn.
 absolutní četnost intenzity 
\begin_inset Formula $i$
\end_inset

 v obraze.
 Dále označme 
\begin_inset Formula $N$
\end_inset

 celkový počet pixelů.
 Histogram je pak vektor absolutních četností 
\begin_inset Formula 
\[
H=\left(n_{0,}n_{1},\ldots,n_{L-1}\right).
\]

\end_inset

Hustotu pravděpodobnosti intenzity můžeme odhadnout jako
\begin_inset Formula 
\[
f_{i}=\frac{n_{i}}{N}.
\]

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Kumulativní
\begin_inset space ~
\end_inset

histogram:
\series default
 funkce intenzit, kde pro každou intenzitu je funkční hodnota rovna počtu
 pixelů, které mají svou intenzitu menší nebo rovnu dané intenzitě, tj.
 
\begin_inset Formula 
\[
H_{cum}=\left(n_{0,}\;n_{0}+n_{1},\;\ldots,\;\underset{k\leq i}{\sum}n_{k},\;\ldots,\;\underset{k\leq L-1}{\sum}n_{k}\right).
\]

\end_inset

S použitím odhadu hustoty pravděpodobnosti intenzity z histogramu lze odhadnout
 distribuční funkci vztahem
\begin_inset Formula 
\begin{equation}
F_{I}\left(i\right)=\underset{k\leq i}{\sum}f_{k}=\frac{1}{N}\underset{k\leq i}{\sum}n_{k}.\label{eq:CumHist_distr_fce}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Kontrast:
\series default
 rozptyl histogramu.
 Malý kontrast tedy znamená, že rozptyl histogramu je úzký.
 Pokud chceme změnit kontrast obrázku vynásobíme nebo vydělíme hodnoty intenzit
 pixelů, tzn.
 
\begin_inset Quotes gld
\end_inset

roztahujeme
\begin_inset Quotes grd
\end_inset

 histogram.
 
\end_layout

\begin_layout Itemize

\series bold
\emph off
Jas:
\series default
\emph default
 střední hodnota histogramu.
 Pokud chceme změnit jas, tak musíme přičíst nebo odečíst hodnotu k intenzitě
 pixelů obrázku, tzn 
\begin_inset Quotes gld
\end_inset

posunujeme
\begin_inset Quotes grd
\end_inset

 histogram.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Histogram.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka 
\series bold
A)
\series default
 histogramu a 
\series bold
B)
\series default
 kumulativního histogramu.
 Písmeno 
\begin_inset Formula $I$
\end_inset

 značí intenzitu pixelu, 
\begin_inset Formula $p$
\end_inset

 počet pixelů s danou intenzitou a 
\begin_inset Formula $p_{cum}$
\end_inset

 počet pixelů s danou nebo menší intenzitou.
 Dále 
\begin_inset Formula $S_{x}$
\end_inset

 značí šířku obrázku v pixelech a 
\begin_inset Formula $S_{y}$
\end_inset

 výšku obrázku v pixelech.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement ph
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Histogram_transformace.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka přechodníkových funkcí: 
\series bold
A)
\series default
 identita, 
\series bold
B)
\series default
 negativ, 
\series bold
C)
\series default
 roztažení intenzit na maximální rozsah, tedy zvýšení kontrastu, 
\series bold
D)
\series default
 binarizace obrazu, 
\series bold
E)
\series default
 neprostá přechodníková funkce, 
\series bold
F)
\series default
 gama korekce proti zkreslení zobrazení monitorem ve tvaru 
\begin_inset Formula $\textnormal{output}=c\left(\textnormal{input}\right)^{\gamma}$
\end_inset

, 
\begin_inset Formula $\gamma\in\mathbb{R}^{+}$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement ph
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_obr10.png
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_obr11.png
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_obr12.png
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist10.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist11.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist12.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist_cum10.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist_cum11.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/SVG/Lena_hist_cum12.svg
	lyxscale 50
	width 25line%
	height 8theight%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka roztažení a ekvalizace histogramu: 
\series bold
A)
\series default
 originální obraz a jeho histogram, 
\series bold
B)
\series default
 obraz s roztaženým histogramem a 
\series bold
C)
\series default
 obraz s ekvalizovaným histogramem.
 V prvním řádku je obraz, ve druhém jeho odhad hustoty pravděpodobnosti
 intenzity z histogramu a ve třetím je odhad distribuční funkce intenzity
 z kumulativního histogramu.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Ekvalizace"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Ekvalizace histogramu
\end_layout

\begin_layout Standard
Jde o tzv.
 vyrovnání histogramu, resp.
 jako zploštění.
 Jasy se transformují tak, aby každý z nich 
\begin_inset Quotes gld
\end_inset

měl pro sebe
\begin_inset Quotes grd
\end_inset

 takovou část jasové osy, jaké je jeho zastoupení v obrázku.
 Jako přechodníková funkce se používá normovaný kumulativní histogram, tedy
 odhad distribuční funkce 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:CumHist_distr_fce"

\end_inset

.
 Dojde-li k tomu, že následující hodnota v histogramu pro danou intenzitu
 převyšuje požadovanou hodnotu, nebo naopak požadované hodnoty nedosahuje,
 je potřeba provést štěpení sloupců do více intenzit, případně sloučení
 sloupců do jedné intenzity.
 Spojení sloupců problém není, ale jak vysoké sloupce dělit? Používá se
 následující algoritmus (pro obrazy s intenzitou v rozmezí 
\begin_inset Formula $\left\langle 0,255\right\rangle $
\end_inset

): Označme počet pixelů obrazu 
\begin_inset Formula $I$
\end_inset

 písmenem 
\begin_inset Formula $S$
\end_inset

.
 Budeme procházet všechny intenzity postupně od nejmenší po největší, tzn.
 od černé barvy po bílou.
 Pro 
\begin_inset Formula $k$
\end_inset

-tou intenzitu najdeme všechny pixely v původním obrazu s danou intenzitou,
 označme je 
\begin_inset Formula $n_{k}$
\end_inset

, a nastavíme jim novou intenzitu ve tvaru 
\begin_inset Formula 
\[
I_{new}=\textrm{round}\left[255\cdot\frac{n_{k}+2S_{k}}{2S}\right],
\]

\end_inset

kde 
\begin_inset Formula $S_{k}$
\end_inset

 je počet zpracovaných pixelů z předchozích kroků a 
\begin_inset Formula $255$
\end_inset

 značí intenzitu bílé barvy.
 Někdy se ekvalizuje i lokálně (změna jasu, kontrastu), postup probíhá v
 okně podobně jako při konvoluci.
 Ukázka ekvalizace histogramu a porovnání s obyčejným roztažením na všechny
 možné intenzity je na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ekvalizace"

\end_inset

.
\end_layout

\begin_layout Section
Šum
\end_layout

\begin_layout Standard
Šum v obrázku je přidaná falešná informace nahodilého původu.
 Může vznikat například při zpracování na senzoru fotoaparátu (prachové
 částice), nebo při zpracování ve fotoaparátu (kvantizační šum).
 Abychom si zjednodušili situaci, předpokládejme aditivní model šumu, neboli
 na signálu nezávislý šum.
 Modelujeme jej pomocí funkce 
\begin_inset Formula $n$
\end_inset


\begin_inset Formula 
\[
f=f_{\mathrm{org}}+n.
\]

\end_inset

V našem diskrétním pojetí budeme uvažovat funkci 
\begin_inset Formula $n$
\end_inset

 jako náhodnou veličinu, která měla 
\begin_inset Formula $h\cdot w$
\end_inset

 realizací (
\begin_inset Formula $h$
\end_inset

 …výška obrazu, 
\begin_inset Formula $w$
\end_inset

 …šířka obrazu) nebo jako 
\begin_inset Formula $h\cdot w$
\end_inset

 náhodných veličin.
\end_layout

\begin_layout Note
Existuje i multiplikativní model šumu, tj.
 
\begin_inset Formula $f=f_{\mathrm{org}}\cdot n$
\end_inset

.
\end_layout

\begin_layout Subsection
Bílý šum (AGWN)
\end_layout

\begin_layout Standard
Situaci si zjednodušíme předpokladem bílého šumu (AGWN z anglického 
\emph on
Additive Gaussian White Noise
\emph default
), což jsou nezávislé, stejně rozdělené (iid) náhodné veličiny 
\begin_inset Formula $X$
\end_inset

, s normálním rozdělením (gaussovským) a nulovou střední hodnotou, tj.
 
\begin_inset Formula $X\sim\text{\mathcal{N}}\left(0,\sigma^{2}\right)$
\end_inset

.
 Analogie s bílým světlem (bílé světlo obsahuje všechny frekvence) plyne
 z nulové střední hodnoty a z toho, že míra šumu je stejná na všech pixelech
 a pixel od pixelu nezávislá, tzn.
 šum jakožto náhodná veličina na jednotlivých pixelech je nekorelovaný s
 šumem na ostatních pixelech.
 Protože kovarianční matice jednoznačně zadává normální rozdělení, tak je
 pro normální veličiny nekorelovanost to samé jako nezávislost.
\end_layout

\begin_layout Standard
Spočítejme 
\emph on
power spektrum
\emph default
 naší šumové funkce.
 Power spektrum odpovídá dle definice druhé mocnině amplitudového spektra
 Fourierovy transformace šumové funkce 
\begin_inset Formula $n$
\end_inset

, tj.
 
\begin_inset Formula $PS=\left|N\right|^{2}$
\end_inset

.
 Pokud provedeme korelaci bílého šumu, dostáváme 
\begin_inset Formula 
\begin{equation}
n\circledast n=\sigma_{n}^{2}\cdot\delta\quad\Longrightarrow\quad\mathcal{F}\left[n\circledast n\right]=\sigma_{n}^{2}.\label{eq:AGWN_corelation}
\end{equation}

\end_inset

Tento vztah plyne z vlastností šumu, tj.
 z nezávislosti.
 Z vlastností Fourierovy transformace ovšem víme, že platí
\begin_inset Formula 
\[
\mathcal{F}\left[n\circledast n\right]=N\cdot N^{\star}=\left|N\right|^{2}\quad\Longrightarrow\quad\left|N\right|^{2}=\sigma_{n}^{2},
\]

\end_inset

kde výslednou rovnost dostáváme díky vztahu (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:AGWN_corelation"

\end_inset

).
 Vidíme, že power spektrum je rovno rozptylu, a je to tudíž konstantní veličina,
 což je opět pro bílý šum charakteristické.
 V praxi by měla při korelaci vzniknout matice, která je všude nulová, jen
 uprostřed je hodnota rozptylu.
\end_layout

\begin_layout Subsection
Odstranění šumu
\end_layout

\begin_layout Standard
Cílem je snížit rozptyl šumové funkce.
 Protože lidskému oku nejvíce 
\begin_inset Quotes gld
\end_inset

vadí
\begin_inset Quotes grd
\end_inset

 vysoké frekvence šumu, provádí se tzv.
 
\emph on
nízkofrekvenční filtr
\emph default
ace, která tyto frekvence potlačuje.
 To s sebou nese nepříjemnou vlastnost, že na vysokých frekvencích jsou
 zaznamenány i informace o hranách, které se tímto způsobem rozmazávají.
\end_layout

\begin_layout Subsubsection
Lineární filtry (konvoluční filtry)
\end_layout

\begin_layout Enumerate

\series bold
Průměrování v čase:
\series default
 lze použít v případě, že je scéna statická, tzn.
 nehýbe se.
 Uděláme 
\begin_inset Formula $N$
\end_inset

 nezávislých snímků dané scény 
\begin_inset Formula $g_{1},g_{2},\ldots,g_{N}$
\end_inset

, sečteme v jednotlivých pixelech a vydělíme počtem snímků, tzn.
\begin_inset Formula 
\[
g_{k}=f+n_{k}\quad\land\quad n_{k}\thicksim\mathcal{N}\left(0,\sigma_{n}^{2}\right)\quad\Longrightarrow\quad g=\frac{1}{N}\stackrel[k=1]{N}{\sum}g_{k}=f+\tilde{n}\quad\Longrightarrow\quad\tilde{n}\thicksim\mathcal{N}\left(0,\frac{\sigma_{n}^{2}}{N}\right).
\]

\end_inset

Šum klesá s hodnotou 
\begin_inset Formula $\nicefrac{\sigma^{2}}{N}$
\end_inset

 a navíc tato metoda nepřináší žádné degradace.
\end_layout

\begin_layout Enumerate

\series bold
Průměrování:
\series default
 používáme například konvoluční maticí 
\begin_inset Formula $C$
\end_inset

 (průměrování prosté nebo vážené) 
\begin_inset Formula 
\[
C=\frac{1}{9}\left(\begin{array}{ccc}
1 & 1 & 1\\
1 & 1 & 1\\
1 & 1 & 1
\end{array}\right)\qquad\text{nebo}\qquad C=\frac{1}{16}\left(\begin{array}{ccc}
1 & 2 & 1\\
2 & 4 & 2\\
1 & 2 & 1
\end{array}\right).
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Průměrování podél hran:
\series default
 podél hran používáme jiný druh filtru, v ostatních částech obrazu používáme
 obyčejné průměrování.
 Pro použití musíme mít apriorní informaci o hranách a to proto, že detektory
 hran reagují na šum stejně jako na hrany.
\end_layout

\begin_layout Enumerate

\series bold
Metoda rotujícího okna:
\series default
 v okolí daného bodu definujeme 8 oblastí pro všech 8 směrů.
 V každé této oblasti spočítáme rozptyl a vybíráme oblast s nejmenším rozptylem.
 Ve vybrané oblasti spočítáme průměr a nahradíme jím bod uprostřed masky.
 Tato metoda se dost používá a dává dobré výsledky.
 Její výhodou je, že respektuje směr a umístění hran.
 Nevýhodou je, že vytváří malé oblasti se stejnou intenzitou.
 Tato charakteristická vlastnost je způsobena principem metody, protože
 pokud vybereme oblast s nejmenším rozptylem, tak je pravděpodobné , že
 s posunutím o jeden pixel bude vybrána ta samá oblast, a tedy dosadíme
 stejný průměr.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Metoda_rotujiciho_okna.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Metoda rotujícího okna na okolí bodu velikosti 
\begin_inset Formula $5\times5$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Filtry ve frekvenční oblasti:
\series default
 ve frekvenční oblasti odstraníme nebo utlumíme vysoké frekvence pomocí
 hladkých 
\emph on
low-pass
\emph default
 filtrů.
\end_layout

\begin_layout Note
Všechny tyto filtry mohou být kombinovány s prahováním, kdy výsledek měníme
 pouze pokud konvoluce v bodě překročila zadaný práh.
\end_layout

\begin_layout Subsubsection
Nelineární filtry
\end_layout

\begin_layout Enumerate

\series bold
Mediánový filtr:
\series default
 v okně provedeme seřazení dat a prostřední prvek (medián) dáváme do výsledku.
 Tato metoda potlačuje šum, ale 
\begin_inset Quotes gld
\end_inset

okusuje
\begin_inset Quotes grd
\end_inset

 okraje a rohy, např pokud máme čáru širokou jeden pixel, tak jí mediánový
 filtr 
\begin_inset Quotes gld
\end_inset

sežere
\begin_inset Quotes grd
\end_inset

.
 Proto je vhodnější volit za výběrové okno třeba kříž.
 Navíc pokud je zašuměných více než 50 % pixelů, metoda bere šum jako originální
 obrázek a šumu po filtraci ještě přibude.
 Tento filtr je vhodnější na šum typu sůl a pepř.
 Při použití na bílý šum moc dobře nefunguje.
\end_layout

\begin_deeper
\begin_layout Standard
Náročnost algoritmu pro symetrické okno šířky 
\begin_inset Formula $n$
\end_inset

 (tedy obsahující 
\begin_inset Formula $n^{2}$
\end_inset

 prvků) by byla při použití algoritmu 
\emph on
Quicksort
\emph default
 
\begin_inset Formula $O\left(n^{4}\right)$
\end_inset

.
 V případě použití algoritmu 
\emph on
Heapsort
\emph default
 je náročnost 
\begin_inset Formula $O\left(\left(n\log n\right)^{2}\right)$
\end_inset

.
 Pro další zrychlení lze využít vkládání do utříděné posloupnosti.
 Novější algoritmus FMF (
\emph on
fast median filter
\emph default
) pracuje při složitosti 
\begin_inset Formula $O\left(n\right)$
\end_inset

.
 Urychlení je provedeno díky konstrukci a aktualizaci histogramu, hledání
 mediánu je pak velmi rychlé.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Zobecněný mediánový filtr:
\series default
 v okně provedeme seřazení dat a na setříděnou posloupnost aplikujeme váhovou
 funkci 
\begin_inset Formula $w$
\end_inset

 rovnu např.
 
\begin_inset Formula 
\[
w=\frac{1}{4}\left(0,\dots,0,1,2,1,0,\dots,0\right).
\]

\end_inset


\end_layout

\begin_layout Standard
Téměř všechny předchozí filtry lze použít i ve frekvenční oblasti.
 Pokud víme, že má obraz jen jisté druhy hran (např.
 vodorovné), lze použít speciální filtr (např.
 
\begin_inset Formula $\frac{1}{4}\left(1,1,1,1\right)$
\end_inset

).
 Ve frekvenční oblasti má pak tento filtr taktéž speciální tvar.
\end_layout

\begin_layout Subsubsection
Metody zachovávající hrany
\end_layout

\begin_layout Standard
Jedná se např.
 o minimalizaci funkcionálu (funkcionál energie), anizotropní difuzi a splainové
 metody.
\end_layout

\begin_layout Subsection
Šum typu sůl a pepř (
\emph on
salt & pepper
\emph default
)
\end_layout

\begin_layout Standard
Tento speciální druh šumu vzniká při pořizování obrázku na snímacích zařízeních
 a je to tzv.
 impulsní šum.
 Většina bodů je správně načtená, ale občas některý vypadne nebo se maximálně
 zesvětlí.
 Matematický model pro tento šum je ve tvaru
\begin_inset Formula 
\[
f_{i,j}=\left\{ \begin{array}{ccl}
I_{max} & \ldots & \text{s pravděpodobností }p,\\
\textrm{nemění se} & \ldots & \text{s pravděpodobností }1-p-q,\\
I_{min} & \ldots & \text{s pravděpodobností }q,
\end{array}\right.
\]

\end_inset

kde 
\begin_inset Formula $r=p+q\in\mathcal{U}\left(0,1\right)$
\end_inset

 udává míru zašumění, 
\begin_inset Formula $I_{min}$
\end_inset

, 
\begin_inset Formula $I_{max}$
\end_inset

 je minimální a maximální možná intenzita a 
\begin_inset Formula $f_{i,j}$
\end_inset

 je pixel obrazu na pozici 
\begin_inset Formula $\left(i,j\right)$
\end_inset

.
 Filtr, který tyto nesprávně načtené body opravuje, je opět v podobě konvolučníh
o filtru s maticí tvaru 
\begin_inset Formula 
\[
C=\frac{1}{8}\left(\begin{array}{ccc}
1 & 1 & 1\\
1 & 0 & 1\\
1 & 1 & 1
\end{array}\right)
\]

\end_inset

Aplikuje se pouze na tmavé a světlé body obrazu (v ostatních to nemá smysl)
 a dává uspokojivé výsledky.
 Lze také použít mediánový filtr.
 Pokud provádíme opakované snímání (např.
 sledujeme experiment v laboratoři), používá se i triviální odstranění šumu
 pomocí průměrování více kopií.
 Protože na každé kopii je jiná realizace šumu, tak v průměru vymizí.
 Pokud je možnost takového snímání, pak se jedná o ideální způsob jak šum
 odstranit.
\end_layout

\begin_layout Subsection
Periodické poškození obrazu
\end_layout

\begin_layout Standard
Pokud se na obraze vyskytuje jisté periodické poškození (např.
 pohled přes pletivo, mříže, fotka na vroubkovaném papíře), lze tyto 
\begin_inset Quotes gld
\end_inset

funkce
\begin_inset Quotes grd
\end_inset

 z obrazu odstranit.
 Ve frekvenční oblasti totiž obdržíme amplitudové spektrum s nápadnými symetrick
ými píky mimo střed.
 Když je odstraníme, vymizí z obrazu i poškození, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Periodicke_poskozeni"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
A)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
B)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
C)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_original.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_poskozena.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_restaurace.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
D)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
E)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
F)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_original_spektrum.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_poskozena_spektrum.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Lena_restaurace_spektrum.png
	lyxscale 50
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Periodické poškození:
\series bold
 A)
\series default
 originální obraz, 
\series bold
B)
\series default
 obraz s periodickým poškozením a 
\series bold
C)
\series default
 výsledný restaurovaný obraz a frekvenční spektra: 
\series bold
D)
\series default
 originálního obrazu, 
\series bold
E)
\series default
 obrazu s periodickým poškozením a 
\series bold
F)
\series default
 upravené spektrum obrazu s periodickým poškozením.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Periodicke_poskozeni"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kvantifikace šumu
\end_layout

\begin_layout Standard
Pro měření 
\begin_inset Quotes gld
\end_inset

velikosti
\begin_inset Quotes grd
\end_inset

 šumu v obraze se zavádí tzv.
 
\emph on
signal-to-noise ratio 
\emph default
(
\begin_inset Formula $SNR$
\end_inset

), což je funkce definovaná jako 
\begin_inset Formula 
\begin{equation}
SNR=\frac{\left|F\right|^{2}}{\left|N\right|^{2}}\left(u,v\right),\label{eq:SNR}
\end{equation}

\end_inset

kde 
\begin_inset Formula $\left|N\right|^{2}$
\end_inset

 a 
\begin_inset Formula $\left|F\right|^{2}$
\end_inset

 se nazývají výkonová spektra (
\emph on
power spectrum
\emph default
) .Tato funkce zachycuje tu vlastnost, že šum nám vadí hlavně při vysokých
 frekvencích.
 Uvažujme velké zjednodušení a předpokládejme, že obrázek není prostorově
 korelovaný, tj.
 
\begin_inset Formula $\left|F\right|^{2}=\sigma_{f}^{2}$
\end_inset

, a bílý šum, tj.
 
\begin_inset Formula $\left|N\right|^{2}=\sigma_{n}^{2}$
\end_inset

.
 Tímto zjednodušením dostáváme vztah 
\begin_inset Formula 
\begin{equation}
SNR=\frac{\left|F\right|^{2}}{\left|N\right|^{2}}\left(u,v\right)=\frac{\sigma_{f}^{2}}{\sigma_{n}^{2}}\quad\forall u,v.\label{eq:SNR_bily_sum}
\end{equation}

\end_inset

Pro rozumnou práci zavádíme tzv.
 
\emph on
odstup signálu od šumu
\emph default
 (
\begin_inset Formula $snr$
\end_inset

), který měříme v decibelech [dB] a definujeme jej jako 
\begin_inset Formula 
\[
snr=10\log_{10}\frac{\textnormal{Var}\left(f\right)}{\textnormal{Var}\left(n\right)}=10\log_{10}\frac{\sigma_{f}^{2}}{\sigma_{n}^{2}}.
\]

\end_inset

Čím vyšší je hodnota odstupu signálu od šumu, tím lepší (méně zašuměný)
 máme signál.
 Pro oko je hodnota 15
\begin_inset space ~
\end_inset

dB dostačující.
 V praxi 
\begin_inset Formula $\sigma_{n}^{2}$
\end_inset

 a 
\begin_inset Formula $\sigma_{f}^{2}$
\end_inset

 většinou neznáme, takže je odhadujeme jako celek.
\end_layout

\begin_layout Section
Detekce hran
\end_layout

\begin_layout Standard
Nejedná se již o předzpracování, spíše už se snažíme rozpoznat další neobrazové
 informace.
 
\emph on
Hranou
\emph default
 pro nás bude výrazná změna intenzity obrazu.
 Experimenty ukazují, že lidské oko se podle hran silně orientuje.
 Ztráta hranové informace vede ke zmatení a chybám v interpretaci vjemu.
 Detekce hran se realizuje několika způsoby, které jsou založeny na sledování
 1.
 derivace, resp.
 2.
 derivace funkce intenzity.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Hrany_typy.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Typy hran pro rozpoznávání v obraze: 
\series bold
A)
\series default
 ideální hrana (
\emph on
step edge
\emph default
), 
\series bold
B)
\series default
 typická pozvolná hrana (
\emph on
ramp edge
\emph default
), 
\series bold
C)
\series default
 střechovitá hrana (
\emph on
roof edge
\emph default
).
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Detektory používající první derivaci
\end_layout

\begin_layout Standard
Tyto detektory hledají body, kde má první derivace maximum, tedy 
\begin_inset Formula $\underset{x}{\arg\max}\left|\nabla f\left(x,y\right)\right|$
\end_inset

.
 Gradient funkce (obrazu) získáme aproximací
\begin_inset Formula 
\begin{align*}
\nabla f\left(x,y\right) & =\left[\frac{\partial f\left(x,y\right)}{\partial x},\frac{\partial f\left(x,y\right)}{\partial y}\right], & \frac{\partial f\left(x,y\right)}{\partial x} & \sim\frac{f\left(x+\varepsilon,y\right)-f\left(x,y\right)}{\varepsilon}\sim f\left(x+1,y\right)-f\left(x,y\right),
\end{align*}

\end_inset

což odpovídá konvoluci s jádrem 
\begin_inset Formula $C=\left(-1,1\right)$
\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Hrany_derivace.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Funkce 
\begin_inset Formula $f$
\end_inset

 obsahující hranu a její první a druhá derivace.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Robertsův detektor:
\end_layout

\begin_layout Standard
Jedná se o konvoluční filtr s maticemi
\begin_inset Formula 
\begin{align*}
C & =\left(1,-1\right), & C & =\left(\begin{array}{c}
1\\
-1
\end{array}\right), & C & =\left(\begin{array}{cc}
1 & 0\\
0 & -1
\end{array}\right), & C & =\left(\begin{array}{cc}
0 & 1\\
-1 & 0
\end{array}\right),
\end{align*}

\end_inset

 pro všesměrovou detekci hran.
 Nevýhoda tohoto filtru je velikost konvolučních masek, díky níž detekuje
 i šum jako hrany.
 Tato vada je způsobena tím, že detektor používá derivaci jen v jednom bodě.
\end_layout

\begin_layout Note
Všesměrovou detekci realizujeme postupnou aplikací všech 8 konvolučních
 masek, tj.
 získáním 8 hranových obrazů.
 Tyto hranové obrazy poté spojíme dohromady za použití maximového pravidla,
 tzn.
 bereme vždy největší hodnotu v daném pixelu ze všech 8 hranových obrazů.
 Pro zlepšení hranové detekce se dále používá prahování.
 Tento postup všesměrové detekce se používá i pro další konvoluční hranové
 filtry.
\end_layout

\begin_layout Subsubsection
Detektor Prewittové :
\end_layout

\begin_layout Standard
Jistým vylepšením Robertsova detektoru je detektor Prewittové, který pro
 detekci hran používá konvoluční masky ve tvaru
\begin_inset Formula 
\begin{align*}
C & =\left(\begin{array}{ccc}
1 & 0 & -1\\
1 & 0 & -1\\
1 & 0 & -1
\end{array}\right), & C & =\left(\begin{array}{ccc}
1 & 1 & 0\\
1 & 0 & -1\\
0 & -1 & -1
\end{array}\right),
\end{align*}

\end_inset

a jejich obdoby pro další směry.
 
\end_layout

\begin_layout Subsubsection
Sobelův detektor:
\end_layout

\begin_layout Standard
Výhoda Sobelova detektoru proti Robertsovu detektoru je ta, že počítá derivaci
 ze tří bodů (z centrálního bodu a bodů okolo).
 Je tedy robustnější proti šumu.
 Má celkem 8 konvolučních masek ve tvaru
\begin_inset Formula 
\begin{align*}
C & =\left(\begin{array}{ccc}
-1 & -2 & -1\\
0 & 0 & 0\\
1 & 2 & 1
\end{array}\right), & C & =\left(\begin{array}{ccc}
-2 & -1 & 0\\
-1 & 0 & 1\\
0 & 1 & 2
\end{array}\right).
\end{align*}

\end_inset

Konvoluční masky pro zbylých 6 směrů vznikají rotací a vypadají obdobně.
\end_layout

\begin_layout Note
Pokud nejprve obrázek vyhladíme (rozmažeme), a pak na něj aplikujeme Sobelův
 detektor, dostaneme hranový obraz, který by vznikl aplikací Robertsova
 detektoru na větší okolí, tzn.
 žádný lepší výsledek se nedostaví
\begin_inset Formula 
\[
C_{1}=\frac{1}{9}\left(\begin{array}{ccc}
1 & 1 & 1\\
1 & 1 & 1\\
1 & 1 & 1
\end{array}\right),\quad C_{2}=\left(\begin{array}{ccc}
-1 & -2 & -1\\
0 & 0 & 0\\
1 & 2 & 1
\end{array}\right)\quad\Longrightarrow\quad C_{3}=C_{1}\circ C_{2}=\left(\begin{array}{ccc}
- & - & -\\
0 & 0 & 0\\
+ & + & +
\end{array}\right),
\]

\end_inset


\begin_inset Formula 
\[
\left(f\ast C_{1}\right)\ast C_{2}=f\ast C_{3}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Kirschův detektor:
\end_layout

\begin_layout Standard
Podobně jako Sobelův detektor tento detektor pracuje s 8 konvolučními maskami,
 které jsou ve tvaru
\begin_inset Formula 
\begin{align*}
C & =\left(\begin{array}{ccc}
5 & 5 & 5\\
-3 & 0 & -3\\
-3 & -3 & -3
\end{array}\right), & C & =\left(\begin{array}{ccc}
5 & 5 & -3\\
5 & 0 & -3\\
-3 & -3 & -3
\end{array}\right).
\end{align*}

\end_inset

Konvoluční masky pro zbylých 6 směrů vznikají rotací a vypadají obdobně.
 Všesměrová detekce probíhá stejně jako u Sobelova detektoru.
\end_layout

\begin_layout Subsubsection
Cannyho detektor.
\end_layout

\begin_layout Standard
Používá se velmi často.
 Byl vytvořen s požadavky aby detekoval všechny hrany, každou hranu detekoval
 právě jednou a přesně ji lokalizoval (střed hrany) a aby nevytvářel hrany
 navíc.
 Princip Cannyho detektoru je následující:
\end_layout

\begin_layout Enumerate
Odstranění šumu vyhlazením pomocí konvoluce s Gaussovým jádrem.
\end_layout

\begin_layout Enumerate
Výpočet parciálních derivací, stačí i jednoduchý detektor, např.
 
\emph on
Roberts Cross function
\emph default
 
\begin_inset Formula 
\[
\left|\begin{array}{cc}
1 & 0\\
0 & -1
\end{array}\right|.
\]

\end_inset

Dále se provede 
\begin_inset Quotes gld
\end_inset


\emph on
non-maximum suppression
\emph default

\begin_inset Quotes grd
\end_inset

.
 Úkolem této procedury je vybrat z hodnot gradientů (stanovených v předchozím
 kroku) jen lokální maxima.
 Respektive odebrat body, které nejsou maximem (
\begin_inset Quotes gld
\end_inset

detekce hřbetů
\begin_inset Quotes grd
\end_inset

), čímž zajistíme, že hrana bude detekována v místě největšího gradientu.
\end_layout

\begin_layout Enumerate
Prahování s hysterezí (
\emph on
Double threshold
\emph default
).
 V předchozím kroku jsme určili, kde přesně leží hrany, ale doposud jsme
 se nezabývali jejich významem.
 V tuto chvíli jsou označeny i ty nejmenší hrany, protože i ty mají své
 lokální maximum.
 Zvolíme minimální 
\begin_inset Formula $t_{min}$
\end_inset

 a maximální 
\begin_inset Formula $t_{max}$
\end_inset

 práh, mezi kterými může gradient kolísat.
 Pokud hodnota gradientu daného pixelu leží nad větším prahem 
\begin_inset Formula $t_{max}$
\end_inset

 je označen jako 
\emph on
silný
\emph default
.
 Pokud posuzujeme bod, jehož hodnota leží mezi 
\begin_inset Formula $t_{min}$
\end_inset

 a 
\begin_inset Formula $t_{max}$
\end_inset

, je označen jako 
\emph on
slabý.
 
\emph default
Silné pixely zachováváme vždy a slabé zachováváme, pokud sousedí se silným
 pixelem.
\end_layout

\begin_layout Standard
Cannyho detektor je tvořen sadou odvozených filtrů, které závisí na parametrech.
 Nastavením parametrů lze docílit výborných výsledků.
\end_layout

\begin_layout Subsection
Detektory používající druhou derivaci
\begin_inset CommandInset label
LatexCommand label
name "subsec:Detektory_druhou_derivace"

\end_inset


\end_layout

\begin_layout Standard
Tyto detektory hledají body, kde má druhá derivace průchod nulou.
 Pro druhou derivaci platí 
\begin_inset Formula 
\[
\frac{\partial}{\partial x^{2}}=\left(-1,1\right)\ast\left(-1,1\right)=\left(1,-2,1\right)
\]

\end_inset

z čehož lze odvodit tvar Laplaceova operátoru 
\begin_inset Formula 
\[
\Delta=\frac{\partial}{\partial x^{2}}+\frac{\partial}{\partial y^{2}}=\left(\begin{array}{ccc}
0 & 0 & 0\\
1 & -2 & 1\\
0 & 0 & 0
\end{array}\right)+\left(\begin{array}{ccc}
0 & 1 & 0\\
0 & -2 & 0\\
0 & 1 & 0
\end{array}\right)=\left(\begin{array}{ccc}
0 & 1 & 0\\
1 & -4 & 1\\
0 & 1 & 0
\end{array}\right).
\]

\end_inset

 Neřešíme tedy rovnici 
\begin_inset Formula $\Delta f=0$
\end_inset

, ale hledáme, zda se v 
\begin_inset Formula $\Delta f$
\end_inset

 objevují velké přechody mezi kladnou a zápornou hodnotou (tzv.
 
\emph on
zero-crossing points
\emph default
).
 V těchto místech pak zaznamenáme hranu.
 Tento způsob je velmi náchylný na šum (dokonce víc než Robertsův detektor).
\end_layout

\begin_layout Subsubsection
Marr Hildrethův detektor (LoG):
\begin_inset CommandInset label
LatexCommand label
name "subsec:Marr"

\end_inset


\end_layout

\begin_layout Standard
Marr a Hildreth navrhli modifikaci, při které se sleduje funkce 
\begin_inset Formula 
\[
\Delta\left(G\ast f\right)=\Delta G\ast f,
\]

\end_inset

kde 
\begin_inset Formula $G$
\end_inset

 je kruhově symetrická Gaussova funkce.
 Matice 
\begin_inset Formula $\Delta G$
\end_inset

 se předpočítává a bývá široká 
\begin_inset Formula $5\times5$
\end_inset

 až 
\begin_inset Formula $15\times15$
\end_inset

 pixelů.
 Parametrizací Gaussovy funkce lze docílit výborných výsledků.
 Širší funkce detekuje podstatné hrany a je méně náchylná na šum, užší se
 chová jako předchozí detektory.
 Detektor má tendenci vytvářet uzavřené hrany (křivky).
 Tento fakt plyne z teorie Laplaceových operátorů a řešení Laplaceovy rovnice
 
\begin_inset Formula $\Delta f=0$
\end_inset

.
 Pro lokalizaci hrany se často používá místo složitějšího hledání 
\begin_inset Quotes gld
\end_inset

průchodu nulou
\begin_inset Quotes grd
\end_inset

 jednoduché nalezení 
\begin_inset Formula $\max\left|\Delta f\right|$
\end_inset

, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Zero_cross_point"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Hrany_prusecik.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Zero_cross_point"

\end_inset

Hledání 
\emph on
zero-crossing point
\emph default
 pomocí 
\begin_inset Formula $\max\left|\Delta f\right|$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Detektory nepoužívající derivace
\end_layout

\begin_layout Subsubsection
Whitening
\end_layout

\begin_layout Standard
Tato metoda spočívá v tom, že amplitudy Fourierovy transformace nahradíme
 konstantní funkcí.
 Zůstává nám tím harmonická informace.
 Poté provedeme konvoluci s maskou 
\begin_inset Formula $C$
\end_inset

, a tím docílíme, že hrany zůstanou jen v určitém směru.
 Budeme ztrácet informaci o hranách s větší šířkou.
\end_layout

\begin_layout Subsection
Detektory pracující ve frekvenční oblasti
\end_layout

\begin_layout Standard
Chceme-li ve frekvenční oblasti detekovat hrany pod určitým úhlem, musíme
 se ve spektru signálu dívat ve směru kolmém na tento úhel.
 Po převedení do frekvenční oblasti lze využít směrových filtrů, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Filtry_frekvencni"

\end_inset

.
\end_layout

\begin_layout Subsection
Zvýraznění hran
\end_layout

\begin_layout Standard
Abychom při hledání hran dosahovali lepších výsledků, můžeme před samotnou
 detekcí hrany zvýraznit.
\end_layout

\begin_layout Itemize
Jednou z možností je použití konvoluce.
 Celkem potřebujeme masky pro 4 směry, které jsou ve tvaru
\begin_inset Formula 
\begin{align*}
C & =\left(\begin{array}{ccc}
-1 & -1 & -1\\
2 & 2 & 2\\
-1 & -1 & -1
\end{array}\right), & C & =\left(\begin{array}{ccc}
2 & -1 & -1\\
-1 & 2 & -1\\
-1 & -1 & 2
\end{array}\right),
\end{align*}

\end_inset

a pro zbylé 2 směry obdobně.
 Po konvoluci se ještě provádí prahování maximálních hodnot.
\end_layout

\begin_layout Itemize
Další možností je použití Laplaceova operátoru 
\begin_inset Formula $\Delta$
\end_inset

 (odvození tvaru Laplaceova operátoru viz sekce 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Detektory_druhou_derivace"

\end_inset

).
 Hrany zvýrazníme odečtením Laplaceova operátoru od funkce 
\begin_inset Formula $f-\Delta f$
\end_inset

.
 Při použití aproximace to odpovídá konvoluci s maskou 
\begin_inset Formula $C$
\end_inset

, tzn.
\begin_inset Formula 
\[
f-\Delta f\quad\Longrightarrow\quad\left(\begin{array}{ccc}
0 & 0 & 0\\
0 & 1 & 0\\
0 & 0 & 0
\end{array}\right)-\left(\begin{array}{ccc}
0 & 1 & 0\\
1 & -4 & 1\\
0 & 1 & 0
\end{array}\right)\quad\Longrightarrow\quad C=\left(\begin{array}{ccc}
0 & -1 & 0\\
-1 & 5 & -1\\
0 & -1 & 0
\end{array}\right).
\]

\end_inset


\end_layout

\begin_layout Itemize
Poslední metodou jak zvýraznit hrany je tzv.
 neostré maskování (
\emph on
unsharp masking
\emph default
).
 Nejdříve odečteme od originálního signálu vyhlazený signál 
\begin_inset Formula $f_{smooth}$
\end_inset

 pomocí 
\emph on
low-pass
\emph default
 filtru čímž získáme 
\emph on
high-pass
\emph default
 reprezentaci 
\begin_inset Formula $f_{high}$
\end_inset

.
 Pokud 
\emph on
high-pass
\emph default
 reprezentaci přičteme k původnímu signálu, dostáváme 
\begin_inset Quotes gld
\end_inset

zaostřený 
\begin_inset Quotes grd
\end_inset

 signál 
\begin_inset Formula $f_{sharp}$
\end_inset


\begin_inset Formula 
\begin{alignat*}{1}
\ensuremath{f_{high}\left(x,y\right)} & =f\left(x,y\right)-f_{smooth}\left(x,y\right),\\
\ensuremath{f_{sharp}\left(x,y\right)} & =f\left(x,y\right)+k\cdot f_{high}\left(x,y\right),
\end{alignat*}

\end_inset

kde 
\begin_inset Formula $k$
\end_inset

 je škálovací konstanta.
 Na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Neostre_maskovani"

\end_inset

 je zobrazen princip neostrého maskování.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Neostre_maskovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Princip neostrého maskování: 
\series bold
A) 
\series default
originální signál, 
\series bold
B) 
\series default
vyhlazený signál, 
\series bold
C)
\series default
 
\emph on
high-pass
\emph default
 reprezentaci, 
\series bold
D)
\series default
 
\begin_inset Quotes gld
\end_inset

zaostřený 
\begin_inset Quotes grd
\end_inset

 signál.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Neostre_maskovani"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Houghova transformace
\end_layout

\begin_layout Standard
Jedná se o metodu nalezení parametrického popisu objektů v obraze.
 Abychom metodu mohli použít, je třeba znát analytický popis hledaných objektů.
 Je to tedy vhodná metoda na detekci jednoduchých objektů, jako např.
 přímka, kruh, elipsa, případně objektů, jejichž hranici lze popsat jednoduchými
 křivkami.
 
\end_layout

\begin_layout Standard
Každá přímka lze popsat pomocí úhlu 
\begin_inset Formula $\theta$
\end_inset

, který svírá kolmice na přímku procházející středem souřadné soustavy s
 osou souřadné soustavy, a vzdálenosti 
\begin_inset Formula $r$
\end_inset

 přímky od počátku souřadné soustavy.
 Z tohoto popisu lze odvodit vztah
\begin_inset Formula 
\[
r=x\cdot\cos\theta+y\cdot\sin\theta.
\]

\end_inset

Máme tedy vztah, kterým můžeme z klasické souřadné soustavy přejít do soustavy
 tvořené dvojicí proměnných 
\begin_inset Formula $r$
\end_inset

 a 
\begin_inset Formula $\theta$
\end_inset

, která se nazývá Houghův prostor.
 Pokud provedeme tuto transformaci, tak se nám přímka promítne na bod.
 Bod se promítne na křivku, která reprezentuje všechny přímky procházející
 daným bodem v klasické souřadné soustavě.
 Průsečíky křivek v Houghově prostoru reprezentují přímky.
 Fungování Houghovy transformace je znázorněno na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Hough"

\end_inset

.
\end_layout

\begin_layout Standard
Pokud tedy chceme hledat hrany pomocí této transformace, tak provedeme transform
aci pro celý obraz a v Houghově prostoru hledáme průsečíky, které reprezentují
 přímku.
 Většinou nelze kvůli deformací nalézt přímo jednoznačný průsečík, a tak
 hledáme shluky bodů.
 To je také největší problém metody.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
A)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
B)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Hough_org13.png
	height 15theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Hough_tra13.png
	lyxscale 20
	height 15theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 1cm
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Hough_org14.png
	height 15theight%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Hough_tra14.png
	lyxscale 20
	height 15theight%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Houghova transformace působící na body 
\series bold
A)
\series default
, resp.
 přímku 
\series bold
B)
\series default
.
\begin_inset CommandInset label
LatexCommand label
name "fig:Hough"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Restaurace obrazu
\begin_inset CommandInset label
LatexCommand label
name "chap:Restaurace-obrazu"

\end_inset


\end_layout

\begin_layout Standard
Nyní se zabývejme modelováním jiné než šumové degradace vzorového obrazu.
 Zajímat nás bude hlavně konvoluční degradace.
 Nechť 
\begin_inset Formula $g$
\end_inset

 je náš obraz, 
\begin_inset Formula $f$
\end_inset

 bude ideální, nezkreslený obraz (originál).
 Symbol 
\begin_inset Formula $\mathcal{D}$
\end_inset

 bude značit 
\emph on
operátor degradace
\emph default
 a 
\begin_inset Formula $n$
\end_inset

 aditivní šum.
 Obecně případ modelujeme vztahem 
\begin_inset Formula $g=\mathcal{D}(f)$
\end_inset

.
 Předpokládejme speciální volbu operátoru 
\begin_inset Formula $\mathcal{D}$
\end_inset

 ve tvaru 
\begin_inset Formula 
\[
\mathcal{D}=\mathcal{T}_{G}\circ\mathcal{T}_{I},
\]

\end_inset

kde 
\begin_inset Formula $\mathcal{T}_{G}$
\end_inset

 je 
\series bold
\emph on
geometrická degradace
\series default
\emph default
 a 
\begin_inset Formula $\mathcal{T}_{I}$
\end_inset

 je 
\series bold
\emph on
radiometrická degradace
\series default
\emph default
.
 Výsledný model lze zapsat ve tvaru 
\begin_inset Formula 
\[
g=\mathcal{T}_{G}\circ\mathcal{T}_{I}(f)+n.
\]

\end_inset


\end_layout

\begin_layout Section
Radiometrické zkreslení (radiometrický inverzní problém)
\end_layout

\begin_layout Standard
Pokud nepředpokládáme geometrické zkreslení a uvážíme, že ve většině běžně
 dostupných zobrazovacích systémů lze 
\begin_inset Formula $\mathcal{T}_{I}$
\end_inset

 modelovat pomocí konvoluce, můžeme vztah přepsat na tvar
\begin_inset Formula 
\begin{equation}
g=f\ast h+n.\label{eq:RI_problem_model}
\end{equation}

\end_inset

Funkce 
\begin_inset Formula $h$
\end_inset

 se zde označuje jako 
\emph on
impulsní odezva
\emph default
 a jedná se o tzv.
 
\emph on
point spread function
\emph default
 (polohově invariantní) funkci.
\begin_inset Foot
status open

\begin_layout Plain Layout
Lze ji získat třeba vyfocením bodu: 
\begin_inset Formula $\delta*h=h$
\end_inset

 
\begin_inset Formula $\implies$
\end_inset

 výstup je 
\emph on
point spread function
\emph default
.
\end_layout

\end_inset

 Polohová invariance značí skutečnost, že výsledek vztahu ovlivňující dva
 pixely není závislý na jejich poloze, ale pouze na jejich vzájemné vzdálenosti.
\begin_inset Foot
status open

\begin_layout Plain Layout
Toto je příliš velké omezení pro 3D scény, kde se rozmazání mění s hloubkou
 ostrosti.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Inverzní filtr
\end_layout

\begin_layout Standard
Rovnici 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:RI_problem_model"

\end_inset

 můžeme převést do frekvenční oblasti Fourierovou transformací a dostaneme
\begin_inset Formula 
\begin{equation}
G=F\cdot H+N\quad\Longrightarrow\quad F=\frac{G-N}{H}=\frac{G}{H}-\frac{N}{H},\label{eq:RI_problem_FT}
\end{equation}

\end_inset

kde dělení provádíme po složkách.
 Nulové body v 
\begin_inset Formula $H$
\end_inset

 můžou následně vadit při inverzní Fourierově transformaci, proto provádíme
 bilineární interpolaci funkce 
\begin_inset Formula $F$
\end_inset

 z nejbližšího okolí v místech, kde bylo 
\begin_inset Formula $H$
\end_inset

 nulové.
 Funkce 
\begin_inset Formula $H$
\end_inset

 se označuje jako 
\emph on
přenosová funkce
\emph default
.
 Pokud známe 
\begin_inset Formula $h$
\end_inset

, lze navrhnout 
\emph on
inverzní filtr
\emph default
 ve frekvenční oblasti a po inverzní Fourierově transformaci dostáváme odhad
 originálu následovně
\begin_inset Formula 
\[
\hat{f}=\mathcal{F}^{-1}\left[F\right]=\mathcal{F}^{-1}\left[\frac{G}{H}-\frac{N}{H}\right].
\]

\end_inset

V modelu bez šumu zanedbáváme ve vztahu 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:RI_problem_FT"

\end_inset

 člen 
\begin_inset Formula $\nicefrac{-N}{H}$
\end_inset

 a v takovém případě inverzní filtr funguje velmi dobře.
 Pro model se šumem může mít ovšem člen 
\begin_inset Formula $\nicefrac{-N}{H}$
\end_inset

 velmi zásadní vliv na výsledek, a to i pro malá 
\begin_inset Formula $n$
\end_inset

, jak ukazuje graf na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RI_problem"

\end_inset

.
 Z tohoto důvodu je volba inverzního filtru pro model se šumem nepoužitelná.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Inverzni_filtr.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Hodnoty funkcí 
\begin_inset Formula $H(x)$
\end_inset

, 
\begin_inset Formula $N(x)$
\end_inset

 a jejich podílu.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:RI_problem"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Wienerův filtr
\end_layout

\begin_layout Standard
Místo inverzního filtru se pro zašuměný obrázek používá filtr Wienerův.
 Požadavkem na Wienerův filtr 
\begin_inset Formula $W$
\end_inset

 bylo, aby byl lineární, tzn.
 ve tvaru 
\begin_inset Formula 
\begin{equation}
\hat{F}=G\cdot W,\label{eq:Wiener_pozadavek}
\end{equation}

\end_inset

a získaný odhad originálního obrazu byl co nejlepší.
 Předpis pro matici 
\begin_inset Formula $W$
\end_inset

 dostaneme řešením minimalizační úlohy
\begin_inset Formula 
\begin{equation}
W=\underset{\hat{f}}{\arg\min}\mathbb{E}\left[\|f-\hat{f}\|^{2}\right],\label{eq:Wiener_min}
\end{equation}

\end_inset

kde 
\begin_inset Formula $f$
\end_inset

 je originální obraz a 
\begin_inset Formula $\hat{f}$
\end_inset

 je odhad obrazu po rekonstrukci.
 Minimalizaci provádíme přes všechny 
\series bold
lineární filtry
\series default
, a střední hodnota je brána přes všechny možné realizace šumu.
 Matice 
\begin_inset Formula $W$
\end_inset

 není přesně daná, je to funkce obrazu! Po netriviálním odvození dostaneme
 výslednou matici 
\begin_inset Formula $W$
\end_inset

 ve tvaru
\begin_inset Formula 
\[
W=\frac{1}{H}\cdot\frac{\left|H\right|^{2}}{\left|H\right|^{2}+SNR^{-1}\left(u,v\right)},
\]

\end_inset

kde funkce 
\begin_inset Formula $SNR\left(u,v\right)$
\end_inset

 značí 
\emph on
signal-to-noise ratio
\emph default
, viz 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:SNR"

\end_inset

.
 Druhý člen v uvedením součinu je tzv.
 korekční člen, který potlačuje frekvence, kde převládá šum.
 Pokud neznáme 
\begin_inset Formula $\left|F\right|$
\end_inset

 a 
\begin_inset Formula $\left|N\right|$
\end_inset

 (většinou neznámé), můžeme zkusit uvažovat bílý šum a nekorelovanost původního
 obrazu, viz 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:SNR_bily_sum"

\end_inset

 .
 V takovém případě tedy máme 
\begin_inset Formula $SNR$
\end_inset

 konstantní ve tvaru 
\begin_inset Formula 
\[
SNR\left(u,v\right)=\frac{\sigma_{f}^{2}}{\sigma_{n}^{2}}=\text{const}\quad\forall u,v.
\]

\end_inset

Dále z nekorelovanosti původního obrazu platí
\begin_inset Formula 
\[
f\circledast f=\delta\left(x\right)\sigma_{f}^{2}=\left\{ \begin{array}{ccc}
\sigma_{f}^{2}\cdot\delta(0) & \ldots & \text{pokud leží přesně na sobě},\\
0 & \ldots & \text{jinde}.
\end{array}\right.
\]

\end_inset

Při odhadování 
\begin_inset Formula $SNR$
\end_inset

 postupujeme tak, že s hodnotou 
\begin_inset Formula $SNR$
\end_inset

 začínáme na nízké úrovni 
\begin_inset Formula $\sim10^{-3}$
\end_inset

 a postupně ji zvyšujeme třeba do 
\begin_inset Formula $\sim10^{3}$
\end_inset

 a sledujeme, co se děje s obrazem.
 Když Wienerův filtr aplikujeme na nezašuměný obrázek (tedy 
\begin_inset Formula $\left|N\right|^{2}=0$
\end_inset

), pak matice 
\begin_inset Formula $W$
\end_inset

 přechází do tvaru 
\begin_inset Formula $W=\nicefrac{1}{H}$
\end_inset

 a celkem získáváme jednoduchý inverzní filtr.
\end_layout

\begin_layout Standard
Pokud 
\begin_inset Formula $SNR$
\end_inset

 při rekonstrukci nadhodnotíme, tak dojde k zvýraznění šumu.
 V případě podhodnocení 
\begin_inset Formula $SNR$
\end_inset

 dojde k rozostření obrazu, protože potlačíme více vyšších frekvencí.
 
\end_layout

\begin_layout Subsection
Základních typy radiometrických degradací
\end_layout

\begin_layout Standard
Nyní se budeme zabývat odhadem přenosové funkce 
\begin_inset Formula $H$
\end_inset

 pro Wienerův filtr.
 Impulsní odezva 
\begin_inset Formula $h$
\end_inset

 je neznámá a navíc může být ve tvaru 
\begin_inset Formula $h=h_{1}\ast h_{2}\ast h_{3}\ast\dots$
\end_inset

.
 Obecně impulsní odezvu nelze zjistit.
 Můžeme ji pouze předpokládat ve speciálních tvarech.
 Reálně rozlišujeme tři základní druhy degradace: rozmazání pohybem, špatné
 zaostření a turbulence.
 Obvykle jsou zastoupeny všechny základní degradace najednou, ale jedna
 výrazně převládá, a ostatní tedy můžeme zanedbat.
\end_layout

\begin_layout Subsubsection
Rozmazání pohybem
\end_layout

\begin_layout Standard
Je-li pohyb lineární (tj.
 po přímce), má impulsní odezva tvar obdélníka.
 Předpokládejme konstantní rychlost pohybu, jinak je situace obtížná, protože
 se vytrácí polohová invariance.
 V takovém případě je délka obdélníku úměrná délce expozice a šířka je převrácen
á hodnota délky, abychom zachovali 
\begin_inset Formula $\int h=1$
\end_inset

 a nevnášeli tak do obrazu jas.
 Ve směru kolmém na směr pohybu se tento obdélník chová jako 
\begin_inset Formula $\delta$
\end_inset

-funkce, a tedy nic nemění.
 Po Fourierově transformaci obdržíme ve frekvenční oblasti známou funkci
 
\begin_inset Formula $\text{sinc}\left(t\right)=\nicefrac{\sin\left(\pi t\right)}{\pi t}$
\end_inset

, natočenou do směru pohybu.
 Slangově se tato funkce označuje jako 
\emph on
vlnitý plech
\emph default
, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly"

\end_inset

 a obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly_ve_3D"

\end_inset

.
\end_layout

\begin_layout Standard
Nulové hodnoty funkce 
\begin_inset Formula $H$
\end_inset

 budou ležet na přímkách kolmých na směr pohybu, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Degradace_prehled"

\end_inset

.
 Čím blíže budou nulové body k sobě, tím je rozmazání větší.
 Stejné nulové body budou zachovány i ve funkci 
\begin_inset Formula $G$
\end_inset

.
 Můžeme tak najít směr a délku pohybu (během expozice).
 
\end_layout

\begin_layout Standard
Podobně lze odhadovat impulsní odezvy i na jiné druhy pohybu (např.
 dítě na houpačce).
 Některé druhy pohybů lze převést na známé užitím souřadnicové transformace.
 Třeba rotační pohyb gramofonové desky při snímání shora převedeme na pohyb
 lineární s konstantní (úhlovou) rychlostí pomocí radiálních souřadnic.
\end_layout

\begin_layout Subsubsection
Špatné zaostření (defokusace)
\end_layout

\begin_layout Standard
Ideálním rozostřením světelného bodu je kruh.
 Ve skutečnosti ovšem klesá jeho intenzita ke krajům.
 Impulsní odezva je tvaru válce a přenosová funkce je ve tvaru
\begin_inset Formula 
\begin{equation}
H\sim\frac{1}{r}J_{1}\left(r\right),\label{eq:Bessel}
\end{equation}

\end_inset

kde 
\begin_inset Formula $J_{1}(r)$
\end_inset

 je Besselova funkce 1.
 druhu a 
\begin_inset Formula $r$
\end_inset

 je radiální souřadnice, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly"

\end_inset

 a obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly_ve_3D"

\end_inset

.
 Díky výrazu 
\begin_inset Formula $\nicefrac{1}{r}$
\end_inset

 ve vztahu 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Bessel"

\end_inset

 jsou Besselovy kmity tlumené.
 Nulové body přenosové funkce jsou na soustředných kružnicích, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Degradace_prehled"

\end_inset

.
 Stejné nulové body budou zachovány i ve funkci 
\begin_inset Formula $G$
\end_inset

.
 Postup je obdobný jako v případě lineárního posunutí.
 Změříme-li vzdálenost kružnic, můžeme odhadnout impulsní odezvu.
\end_layout

\begin_layout Subsubsection
Turbulence
\end_layout

\begin_layout Standard
Vzniká např.
 při snímání přes tlustou vrstvu atmosféry s delší expoziční dobou, než
 je perioda Brownova pohybu částic v atmosféře.
 Impulsní odezva, a tedy i přenosová funkce, jsou Gaussovy funkce, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly"

\end_inset

 a obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FT_2D_signaly_ve_3D"

\end_inset

.
 Nemají tedy nulové body, a nelze proto použít metodu z předchozích případů.
 K odhadu se používají body, které nemění polohu, např.
 hvězdy ve snímcích oblohy (astronomie).
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Typy_degradace.png
	lyxscale 50
	width 12cm

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Typy_degradace_spektrum.png
	lyxscale 50
	width 8.9cm

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Základní typy degradací.
 Nahoře zleva původní obrázek, obrázek rozmazaný pohybem, defokusací a turbulenc
í.
 Dole FT příslušné impulzní odezvy.
\begin_inset CommandInset label
LatexCommand label
name "fig:Degradace_prehled"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Problém slepé dekonvoluce
\end_layout

\begin_layout Standard
V obecném případě pro neznámé 
\begin_inset Formula $h$
\end_inset

 nemá úloha jednoznačné řešení.
 Zavádíme proto dodatečné omezující podmínky, které nám řešení zjednoduší,
 např.
 nezápornost originálního signálu (snímku), omezenost nosiče 
\begin_inset Formula $h$
\end_inset

 a minimalizace jistého potenciálového funkcionálu výsledného obrazu.
\end_layout

\begin_layout Standard
Jiným problémem je tzv.
 
\emph on
vícekanálová slepá dekonvoluce
\emph default
, kdy máme k dispozici několik stejných snímků s jinými impulsními odezvami,
 tzn.
 
\begin_inset Formula 
\begin{align*}
g_{1} & =f\ast h_{1}+n_{1},\\
 & \vdots\\
g_{k} & =f\ast h_{k}+n_{k}.
\end{align*}

\end_inset

Tato úloha je nepoměrně snazší, protože máme daleko více informací a z každého
 
\begin_inset Formula $g_{i}$
\end_inset

 jsme schopni zrekonstruovat jiné části obrázku.
 Výsledek tedy můžeme 
\begin_inset Quotes gld
\end_inset

poslepovat
\begin_inset Quotes grd
\end_inset

 z několika takových částí.
 Také jsme schopni daleko lépe odstraňovat případné šumy, podobně jako při
 průměrování více kopií.
\end_layout

\begin_layout Section
Geometrické zkreslení (geometrický inverzní problém)
\end_layout

\begin_layout Standard
Model geometrického zkreslení obrazu lze zapsat jako 
\begin_inset Formula 
\[
g=T_{G}\left(f\right).
\]

\end_inset

Máme-li snímek téže scény z různých pohledů (tj.
 s jiným geometrickým zkreslením) a potřebujeme-li zjistit odpovídající
 pixely (tj.
 aby stejné pixely měly stejné souřadnice), mluvíme o 
\emph on
registraci obrazu (image registration)
\emph default
.
 Využití spočívá např.
 v detekci časových změn.
 Nepřesná registrace vede na chybnou detekci, resp.
 zjištění změn tam, kde nejsou.
 Rozlišujeme čtyři základní kategorie registrace obrazu.
\end_layout

\begin_layout Itemize
Vícepohledová (
\emph on
different viewpoints, multi-view
\emph default
).
\end_layout

\begin_layout Itemize
Vícečasová (
\emph on
different times, multi-temporal
\emph default
).
\end_layout

\begin_layout Itemize
Multimodální (
\emph on
different modalities, multi-modal
\emph default
).
\end_layout

\begin_layout Itemize
Napasování scény na model registrace 
\emph on
(scene to model registration).
\end_layout

\begin_layout Standard
\noindent
Registrace se provádí pomocí řídících bodů (
\emph on
control points
\emph default
).
 Pokud jsou správně nalezeny odpovídající řídící body v obou obrazech, je
 možné sestavit geometrické transformace a snímky registrovat.
 Postup registrace lze rozdělit do čtyř kroků, kterým se věnuje další část
 textu.
 
\end_layout

\begin_layout Subsection
Výběr kandidátů na řídící body (
\emph on
Control point selection
\emph default
)
\end_layout

\begin_layout Standard
Na řídící body klademe základní požadavky a to, aby jich byl dostatečný
 počet, byly rozmístěny po celém obraze, aby byly dobře automaticky detekovateln
é v obou obrazech a aby byly invariantní vůči transformaci.
 Jako významné řídící body se volí 
\emph on
rohy
\emph default
, 
\emph on
průsečíky 
\emph default
(citlivé na šum), 
\emph on
těžiště uzavřených oblastí
\emph default
 (na šum více stabilní), nebo 
\emph on
extrémní křivosti křivek
\emph default
.
 V prvním kroku registrace se řídící body vybírají zvlášť na referenčním
 obrazu a na registrovaném obrazu.
 Ve druhém kroku je poté třeba provést vzájemnou korespondenci.
 K tomuto účelu musíme mít dostatečně robustní, spolehlivou metodu, neboť
 některé body mohou chybět, mohlo dojít k nepřesnostem atp.
\end_layout

\begin_layout Subsection
Korespondence řídících bodů (
\emph on
Control point matching
\emph default
)
\end_layout

\begin_layout Standard
Jak už bylo řečeno, druhým krokem výběru řídících bodů, je nalezení vzájemné
 korespondence mezi kandidáty na řídící body v referenčním a registrovaném
 obrazu.
 Na základě korespondence kandidátů poté volíme vhodné řídící body.
 Hledání odpovídajících si bodů se provádí buď topologicky (předpokládaný
 výskyt), nebo se prohledává okolí bodu s ohledem na intenzity (barvy) okolních
 pixelů.
 Rozlišujeme dva základní druhy metod.
\end_layout

\begin_layout Subsubsection
Signálově závislé metody
\end_layout

\begin_layout Standard
Tyto metody pracují s intenzitou obrázku.
 
\end_layout

\begin_layout Enumerate

\series bold
Obrazová korelace:
\series default
 korelaci provádíme se skutečnými obrazovými hodnotami.
 Jeden obraz (okno) posouváme po druhém a počítáme korelaci.
 Pokud existuje větší či menší shoda obrazů, bude na daném bodě ve výsledné
 matici vysoká hodnota.
 Při konstantní korelační matici pak tento postup odpovídá počítání dle
 vztahu 
\begin_inset Formula 
\[
C\left(X,Y\right)=\frac{\mathbb{E}\left[\left(X-\mathbb{E}X\right)\left(Y-\mathbb{E}Y\right)\right]}{\sqrt{\text{Var}\left(X\right)}\cdot\sqrt{\text{Var}\left(Y\right)}}=\frac{\sum\limits _{i=0}^{N-1}\sum\limits _{j=0}^{N-1}\left(X_{ij}-\bar{X}\right)\cdot\sum\limits _{i=0}^{N-1}\sum\limits _{j=0}^{N-1}\left(Y_{ij}-\bar{Y}\right)}{\sqrt{\sum\limits _{i=0}^{N-1}\sum\limits _{j=0}^{N-1}\left(X_{ij}-\bar{X}\right)^{2}}\cdot\sqrt{\sum\limits _{i=0}^{N-1}\sum\limits _{j=0}^{N-1}\left(Y_{ij}-\bar{Y}\right)^{2}}}.
\]

\end_inset

V této podobě se metoda tolik nepoužívá, protože je výpočetně a časově náročná
 a maximum bývá někdy 
\begin_inset Quotes gld
\end_inset

ploché
\begin_inset Quotes grd
\end_inset

.
 Urychlení výpočetní složitosti plyne z 
\emph on
Korelačního teorému
\emph default
 
\begin_inset Formula 
\[
\mathcal{F}\left[f\circledast g\right]=F\cdot G^{\star},
\]

\end_inset

kde symbol 
\begin_inset Formula $(\cdot)^{\star}$
\end_inset

 značí komplexně sdruženou matici.
 Dále lze provádět modifikace: korelace hran, rohů, korelace ve frekvenční
 oblasti (fázová korelace), pyramidální reprezentace (
\emph on
pyramidal representation
\emph default
).
\end_layout

\begin_deeper
\begin_layout Standard
Metoda funguje dobře pro obrazy se stejnou intenzitou nebo pokud došlo ke
 globálním změnám kontrastu a jasu.
 Ostatní změny dost vadí.
 V základním provedení by metoda fungovala jen pro posun.
 Provádí se modifikace, kdy je korelační matice trojrozměrná.
 Časová náročnost je ale příliš veliká, proto se tato modifikace používá
 pouze pro malé rotace.
\end_layout

\begin_layout Standard
U této metody se většinou nedetekují řídící body v druhém obrázku, ale hledají
 se nejvyšší korelace vzhledem k řídícím bodům prvního obrázku.
 Nejčastěji hledáme malý výřez na velkém obrázku.
 Hodnoty intenzit se liší pouze lineárně.
 Metoda dává dobré výsledky po hranové detekci v obou obrazech.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Fázová korelace:
\series default
 Fáze Fourierovy transformace je blízká hranám obrázků.
 Ty jsou výhodnější kvůli nezávislosti na barvách a mají menší prostorovou
 korelaci.
 Nevrací se do obrazové oblasti pro počítání korelace, ale zůstane se ve
 frekvenční oblasti, kde se využívá 
\emph on
Fourier Shift Theorem
\emph default
 (FST), viz věta 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Fourier_Shift_Theorem"

\end_inset

.
 Předpokládáme-li, že první a druhý obrázek jsou stejné, ale jen posunuté,
 máme dány funkce 
\begin_inset Formula $f\left(\vec{x}\right)$
\end_inset

 a 
\begin_inset Formula $g\left(\vec{x}\right)=f\left(\vec{x}-\vec{a}\right)$
\end_inset

, kde 
\begin_inset Formula $\vec{x},\vec{a}\in\mathbb{R}^{2}$
\end_inset

.
 Po Fourierově transformaci získáváme vztahy 
\begin_inset Formula 
\begin{align*}
f\left(\vec{x}\right) & \stackrel{\mathcal{F}}{\longrightarrow}F\left(\vec{u}\right), & g\left(\vec{x}\right) & \stackrel{\mathcal{F}}{\longrightarrow}e^{-2\pi i\vec{u}\cdot\vec{a}}F\left(\vec{u}\right),
\end{align*}

\end_inset

kde 
\begin_inset Formula $\vec{u}\cdot\vec{a}$
\end_inset

 značí standardní skalární součin.
 Amplituda je u obou Fourierových obrazů stejná, ale fáze se změnila známým
 způsobem.
 Definujeme tzv.
 
\emph on
Cross-power
\emph default
 spektrum jako 
\begin_inset Formula 
\[
\frac{F\cdot G^{\star}}{|F||G|}=\frac{\left|F\right|^{2}e^{2\pi i\vec{a}\cdot\vec{u}}}{\left|F\right|^{2}}\quad\stackrel{\mathcal{F}^{-1}}{\longrightarrow}\quad\delta\left(\vec{x}-\vec{a}\right).
\]

\end_inset

Tím vznikne dobře lokalizovatelný pík.
 Metoda funguje dobře, odpovídá vlastně detekci hran a korelaci v obrazové
 oblasti.
\end_layout

\begin_layout Enumerate

\series bold
Nepodobnost (SSDA):
\series default
 označuje se také jako 
\begin_inset Quotes gld
\end_inset

klasická korelace
\begin_inset Quotes grd
\end_inset

.
 Jde o použití jiné míry podobnosti než korelace, tzn.
 ne 
\begin_inset Formula $L_{2}$
\end_inset

 norma, ale 
\begin_inset Formula $L_{1}$
\end_inset

 norma, např.
 
\begin_inset Formula $\sum\left|f_{ij}-g_{ij}\right|$
\end_inset

.
  Hledáme bod, kde norma nabývá minima.
 Výpočet je velmi rychlý, protože suma je neklesající, jakmile tedy jednou
 částečný součet převýší již vypočtené minimum, lze přímo přejít k dalšímu
 bodu.
\end_layout

\begin_layout Note
Pro snadnou hardwarovou implementaci korelace jsou tyto metody (Fázová korelace
 a nepodobnost (SSDA)) dosti používané.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
Lze rozšířit na obecnější transformace, např.
 pro rotaci je okénko kruh.
 V takovém případě se ale stává úloha výpočetně velice náročná.
 Dá se nejdříve projet prostým posunutím tam, kde je nalezeno maximum, tak
 to začneme natáčet.
 Vybereme úhel natočení, kde je korelace maximální, a poté projdeme opět
 celý obrázek s tímto natočením.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Argument item:1
status open

\begin_layout Plain Layout

\series medium
4.
\end_layout

\end_inset

 Pyramidální reprezentace:
\series default
 Snižujeme rozlišení obrázků o dvojnásobek.
 Začínáme na nízkém rozlišení, kde najdeme 
\begin_inset Quotes gld
\end_inset

nadějné body
\begin_inset Quotes grd
\end_inset

 a u vyššího rozlišení počítáme jen v okolí těchto bodů.
\end_layout

\begin_layout Subsubsection
Příznakové metody (signálově nezávislé) (???)
\end_layout

\begin_layout Standard
Jde o napočítávání vlastností 
\emph on
(příznaků)
\emph default
 segmentovaných objektů obrazu.
 Příznaky by měly být invariantní k transformaci, kterou předpokládáme.
 Více o příznacích viz kapitola 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Priznaky"

\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Point-based method
\emph default
:
\series default
 pro zjištění korespondence řídících bodů se vytváří úplný graf a hledají
 se 4 parametry pro geometrickou transformaci (
\begin_inset Formula $2\times$
\end_inset

posun, 
\begin_inset Formula $1\times$
\end_inset

rotace, 
\begin_inset Formula $1\times$
\end_inset

měřítko).
 Porovnáváme po dvojici hrany grafu a zjišťujeme, jak ostatní body padají
 do okolí řídících bodů.
 Další možností je provést matching a zaznamenávat do parametrického prostoru
 provedenou transformaci.
 Pak hledat shluk v tomto prostoru a vybrat tak nejlepší parametr.
 Pro urychlení se nekonstruuje úplný graf, ale třeba konvexní obálka nebo
 kostra grafu.
 Tím ovšem zavádíme do algoritmu vyšší náchylnost k chybám a nestabilitě.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Matching.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Zjištění vzájemné korespondence řídících bodů (
\emph on
matching
\emph default
) pomocí úplného grafu.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\emph on
Region-based method
\emph default
:
\series default
 pro okolí řídících bodů hledáme společné charakteristiky, které by měli
 být invariantní vzhledem k transformaci ( rotace, měřítko, …) a dostatečně
 diskriminabilní.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Region_based.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Určování okolí bodů a jejich charakteristik (
\emph on
Region-based method
\emph default
).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Kombinatorické:
\series default
 Využívá globální informace o kandidátních bodech a jejich vzájemné polohy,
 z níž hledá jejich korespondenci.
 Zkouší všechny možné kombinace a hledá tu nejlepší.
 Jde o minimalizaci funkce.
\end_layout

\begin_layout Enumerate

\series bold
RST (
\emph on
rotation
\emph default
, 
\emph on
scaling
\emph default
, 
\emph on
translation
\emph default
):
\series default
 Libovolnou úsečku můžeme namapovat na libovolnou úsečku.
 V základním případě se každá dvojice bodů namapuje na každou dvojici z
 druhého obrázku.
 Namapujeme úsečku a podle ní transformujeme ostatní body a koukáme se,
 kolik bodů se shoduje se vzory, tzn.
 počítáme 
\begin_inset Quotes gld
\end_inset

zásahy
\begin_inset Quotes grd
\end_inset

.
 Pokud toto uděláme pro všechny dvojice bodů, tak transformace, která má
 nejvíce zásahů, je hledaná transformace.
\end_layout

\begin_layout Subsection
Odhadnutí modelu transformace souřadnic
\end_layout

\begin_layout Standard
Při vlastním mapování hledáme tzv.
 mapovací funkce 
\begin_inset Formula 
\begin{align*}
u & =f\left(x,y\right), & \textrm{s podmínkou \mathcal{P}_{1}: }u_{i} & =f\left(x_{i},y_{i}\right),\\
v & =g\left(x,y\right), & v_{i} & =g\left(x_{i},y_{i}\right),\qquad\forall i\in\hat{m},
\end{align*}

\end_inset

kde 
\begin_inset Formula $m$
\end_inset

 je počet řídících bodů.
 Funkce 
\begin_inset Formula $f$
\end_inset

, 
\begin_inset Formula $g$
\end_inset

 předpokládáme spojité, dost hladké a parametrizovatelné (např.
 afinní transformace).
 Parametry funkcí hledáme řešením následujících úloh:
\end_layout

\begin_layout Itemize

\emph on
interpolační úloha
\emph default
 – s podmínkou 
\begin_inset Formula $\mathcal{P}_{1}$
\end_inset

,
\end_layout

\begin_layout Itemize

\emph on
extrapolační úloha
\emph default
 – bez podmínky 
\begin_inset Formula $\mathcal{P}_{1}$
\end_inset

.
\end_layout

\begin_layout Standard
Po nalezení mapovacích funkcí můžeme obrazy namapovat bod po bodu.
 Pro mapování chceme použít transformaci, která promítne řídící body referenčníh
o obrazu na odpovídající řídící body na obrazu registrovaném.
 Transformační funkce mají obecný tvar 
\begin_inset Formula 
\begin{align*}
\tilde{x} & =T_{x}\left(x\right), & \tilde{y} & =T_{y}\left(y\right),
\end{align*}

\end_inset

a mohou platit pro celý obrázek (globální transformace), ale jednotlivé
 dílčí části můžou mít i odlišné transformace (lokální).
 Většinou se transformace předpokládá jako jedna z následujících.
\end_layout

\begin_layout Enumerate

\series bold
Afinní transformace: 
\series default
afinní model je jeden z nejjednodušších, ale přesto se hojně používá.
 Pro Euklidův prostor zahrnuje posunutí, otáčení, změnu měřítka, zkosení,
 zrcadlení, a jejich skládání.
 Transformační funkce má tvar 
\begin_inset Formula 
\begin{align}
\tilde{x} & =a_{0}+a_{1}x+a_{2}y, & \tilde{y} & =b_{0}+b_{1}x+b_{2}y.\label{eq:Afin_transform}
\end{align}

\end_inset

Tato transformace zobrazuje čtverec na rovnoběžník, převádí přímky na přímky
 (nebo bod) a zachovává jejich rovnoběžnost.
 Obecněji převádí afinní podprostory na afinní podprostory.
 Pro její určení jsou potřeba tři body, ale v praxi se počítá z mnohem více
 bodů pomocí metody nejmenších čtverců.
 Lze zapsat ve tvaru 
\begin_inset Formula 
\[
\left(\begin{array}{c}
\tilde{x}\\
\tilde{y}
\end{array}\right)=\mathbb{T}\left(\begin{array}{c}
x\\
y
\end{array}\right)+\vec{p},
\]

\end_inset

kde 
\begin_inset Formula $\mathbb{T}$
\end_inset

 jsou koeficienty transformace bez posunu a 
\begin_inset Formula $\vec{p}$
\end_inset

 jsou koeficienty posunu.
 Tyto matice vyjádřené pomocí vztahů 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Afin_transform"

\end_inset

 mají tvar
\begin_inset Formula 
\begin{align*}
\mathbb{T} & =\left(\begin{array}{cc}
a_{1} & a_{2}\\
b_{1} & b_{2}
\end{array}\right), & \vec{p} & =\left(\begin{array}{c}
a_{0}\\
b_{0}
\end{array}\right).
\end{align*}

\end_inset

 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Affini_transformace.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka působení afinní transformace na obdélník.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Perspektivní projekce:
\series default
 perspektivní projekce je obecnější transformace.
 Má však tu vlastnost, že při pozorování z větších vzdáleností v afinitu
 přechází, neboť 
\begin_inset Formula $c_{1}$
\end_inset

 a 
\begin_inset Formula $c_{2}$
\end_inset

 v transformačních funkcích
\begin_inset Formula 
\begin{align*}
\tilde{x} & =\frac{a_{0}+a_{1}x+a_{2}y}{1+c_{1}x+c_{2}y}, & \tilde{y} & =\frac{b_{0}+b_{1}x+b_{2}y}{1+c_{1}x+c_{2}y},
\end{align*}

\end_inset

budou malé.
 V praxi se při transformacích nepoužívá, protože nevede na lineární soustavu
 a nejde ji 
\begin_inset Quotes gld
\end_inset

rozumně
\begin_inset Quotes grd
\end_inset

 řešit.
 Tato transformace zobrazuje čtverce na jakýkoli čtyřúhelník a vystihuje
 promítání rovinných předmětů fotoaparátem.
 Pro její určení jsou potřeba čtyři body.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Perspektivni_transformace.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka působení perspektivní projekce na obdélník.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Nelineární transformace: 
\series default
tento model se používá velmi často.
 Je silně nelineární a nezachovává přímky ani rovnoběžnost.
 Transformační funkce má tvar 
\begin_inset Formula 
\begin{align*}
\tilde{x} & =a_{0}+a_{1}x+a_{2}y+a_{3}xy\;\left[+a_{4}x^{2}+a_{5}y^{2}\ \right], & \tilde{y} & =b_{0}+b_{1}x+b_{2}y+b_{3}xy\ \left[+b_{4}x^{2}+b_{5}y^{2}\ \right].
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Vlastní transformace
\end_layout

\begin_layout Standard
Vlastní mapování zabírá nejvíce výpočetního času.
 Musí se převzorkovávat, protože nové pixely mají neceločíselné souřadnice.
 Používají se přímé a nepřímé transformace.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Dopředná (Forward)
\series default
:
\emph default
 procházíme všechny body ze zdrojového obrazu, transformujeme je a zapisujeme
 do výsledku.
 Vznikají situace, kdy se více bodů namapuje na stejné místo (přepisování)
 a výsledný obraz může obsahovat některé prázdné pixely (díry).
 Pro takové body je třeba provést interpolaci z okolních pixelů.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Zpětná (Backward):
\series default
\emph default
 procházíme všechny body výsledného obrazu a pomocí zpětné transformace
 určíme, který zdrojový bod se na ně transformuje.
 
\end_layout

\begin_layout Subsubsection
Lokální transformace
\end_layout

\begin_layout Standard
Obrázek rozdělíme na trojúhelníky pomocí řídících bodů a na každém trojúhelníku
 počítáme afinní transformaci.
 Nemá spojité derivace a řeší se pomocí kubické transformace s 10 parametry,
 kde se předepíší spojitosti derivací.
 Nejčastěji se používá TPS (
\emph on
Thin-Plate-Splines
\emph default
), kdy se hledá minimální křivost plochy ideálně neformovatelného ocelového
 plátu fixovaného v řídících bodech.
\end_layout

\begin_layout Standard
Nelineární transformace se často provádí po trojúhelnících, na kterých se
 transformační funkce linearizuje (obdoba metody konečných prvků).
 Pokud se použijí lineární polynomy, má tento postup za následek nepřirozené
 zalamování hran na přechodových stranách trojúhelníkové sítě.
 Obecněji se proto definují 
\emph on
Radiální bázové funkce
\emph default
, které tyto vlastnosti nemají.
\end_layout

\begin_layout Section
Otázky
\end_layout

\begin_layout Itemize

\emph on
Přes co probíhá minimalizace a přes co střední hodnota v odvození Wienerova
 filtru?
\end_layout

\begin_deeper
\begin_layout Standard
Minimalizace probíhá přes všechny lineární filtry a střední hodnota přes
 šum.
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Co znamená že je obraz 
\begin_inset Formula $f$
\end_inset

 nekorelovaný?
\end_layout

\begin_deeper
\begin_layout Standard
Korelací se myslí korelace prostorová, tedy že hodnoty pixelů na různých
 pozicích jsou nekorelované 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Co se stane, pokud hodnotu 
\begin_inset Formula $SNR$
\end_inset

 ve Wienerově filtru podhodnotíme, a co když nadhodnotíme?
\end_layout

\begin_deeper
\begin_layout Standard
Je nutné si rozmyslet limitní případy, tedy 
\begin_inset Formula $SNR\to0$
\end_inset

 a 
\begin_inset Formula $SNR\to\infty$
\end_inset

.
 Pokud 
\begin_inset Formula $SNR$
\end_inset

 
\series bold
nadhodnotíme
\series default
, objeví se na obrázku artefakty vysokofrekvenčního šumu.
 Vysoké frekvence šumu způsobují výraznější poškození v inverzním filtru,
 a tedy i ve Wienerově filtru s podhodnoceným SNR.
 Pokud naopak SNR 
\series bold
podhodnotíme
\series default
, obrázek ztrácí detaily a bude rozmazaný.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makeatletter
\backslash
@openrightfalse
\end_layout

\end_inset


\end_layout

\begin_layout Part
Rozpoznávání dat (
\emph on
pattern recognition
\emph default
)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Máme 
\begin_inset Formula $n$
\end_inset

 tříd a chceme rozhodnout o objektu 
\begin_inset Formula $\mathcal{O}$
\end_inset

, do jaké třídy patří.
 Existují dva typy metod: strukturální (syntaktické) a příznakové (statistické)
 
\end_layout

\begin_layout Itemize

\series bold
\emph on
Strukturální rozpoznávání
\emph default
:
\series default
 Používá se v případě, kdy je struktura důležitější než měřitelné vlastnosti
 objektu, např.
 dům, střecha, zdi, dveře, okna, atd.
 Není vhodné na jednoduché úlohy (zbytečně složité).
 Používá se třeba při klasifikaci složitých scén, např.
 osoba lze špatně popsat pomocí příznaků (různé výrazy tváře atd.), ale lze
 popsat strukturně.
 Dále se používá při klasifikaci EKG, EEG křivek, kde jde o strukturu výchylek
 a nikoliv o jejich velikost.
 Založeno na teorii jazyků, rozhodování, zda patří slovo do jazyka.
 V této přednášce se strukturálním rozpoznáváním nezabýváme.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Statistické rozpoznávání
\emph default
 (
\emph on
feature based
\emph default
):
\series default
 Objekty jsou popisovány pomocí příznaků (měřitelné veličiny, např.
 žokejové 
\begin_inset Formula $\times$
\end_inset

 basketbalisté 
\begin_inset Formula $\rightarrow$
\end_inset

 příznaky: výška, váha).
 Každý objekt má více příznaků, které dohromady tvoří příznakové vektory.
 Obecně může být každý příznak jiného typu, např.
 může být tvořen čísly, maticemi, vektory, funkcemi, atd.
 Příznak je tedy bod ve vícedimenzionálním prostoru s nějakou metrikou.
 Většinou se jedná o eukleidovský prostor, ale nemusí tomu tak být vždy,
 např.
 pokud by jeden příznak měl rozsah 
\begin_inset Formula $\left(0,1\right)$
\end_inset

 a druhý rozsah 
\begin_inset Formula $\left(0,10^{6}\right)$
\end_inset

, tak by eukleidovská metrika nefungovala.
 Navíc ne vždy musíme mít nutně metriku, občas stačí pseudometrika (hledáme
 pouze nějakou míru shody objektů).
\end_layout

\begin_layout Standard
Dále už se budeme zabývat pouze statistickým rozpoznáváním.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
@openrighttrue
\backslash
makeatother 
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Segmentace
\end_layout

\begin_layout Standard
Segmentace obrazu se používá pro rozdělení obrazu na části a detekci objektů
 v obraze.
 Je tedy třeba nalézt hranice objektů a oddělit objekty od pozadí.
 Navíc je nutné zachovat informaci o poloze objektu v obrazu.
 Jedná se ovšem o nekorektní definici, protože nikdo není schopen pořádně
 definovat, co je to objekt.
 Pokud např.
 dostaneme fotku, tak jak zvolíme, co je na ní objekt a co pozadí? Je to
 subjektivní rozhodnutí.
 Nejprve tedy definujeme, co by měl splňovat 2D objekt.
\end_layout

\begin_layout Itemize

\series bold
\emph on
2D objekt
\emph default
:
\series default
 binární, konečný (souvislý) a jeho hranice je tvořená jednoduchou uzavřenou
 křivkou, která je celá vidět.
 
\end_layout

\begin_layout Standard
V diskrétním rastru vzniká problém jak definovat sousední bod (pixel).
 Nabízejí se dvě možnosti jak k definici přistoupit, a to tzv.
 4-sousednost a 8-sousednost, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sousednost_pixelu"

\end_inset

.
 Vždy je důležité vědět, která definice se uvažuje.
 V podstatě se jedná o pojem ekvivalentní pojmu okolí.
 Pokud tedy máme zaveden pojem okolí bodu, můžeme definovat hranici objektu.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Hraniční bod
\emph default
:
\series default
 bod objektu, v jehož okolí je alespoň jeden pixel náležející do pozadí,
 tzn.
 který není součástí objektu.
\end_layout

\begin_layout Standard
Se zavedeným popisem objektu a jeho hranice ve 2D lze přistoupit k základním
 metodám segmentace.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Okoli_bodu.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Definice 4-sousednosti a 8-sousednosti v diskrétním rastru.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Sousednost_pixelu"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Prahování (
\emph on
Thresholding
\emph default
) 
\end_layout

\begin_layout Standard
Jedná se o nejčastěji používanou metodu segmentace, která je nejstarší a
 také nejjednodušší.
 Její výhodou je snadná realizace a rychlost, díky které ji lze provádět
 v reálném čase.
 Nevýhodou je naopak to, že lze jen velmi obtížně naprogramovat, aby fungovala
 automaticky.
 Navíc lze použít pouze na určitou třídu obrazů, kdy objekty a pozadí jsou
 jasově snadno rozlišitelné.
 Jedná se tedy o třídu obrazů, které mají ideálně bimodální histogram, tzn.
 histogram má dvě lokální maxima, kde jedno odpovídá objektu a druhé pozadí,
 viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Prahovani"

\end_inset

.
 Pokud nalezneme lokální minimum mezi nimi, tedy práh, tak jsme schopni
 oddělit pozadí od objektu.
 Jednoduše pixely s intenzitou, která je menší než nalezený práh, položíme
 rovny 0, a naopak pixely s větší intenzitou položíme rovny 1.
 Tímto získáme binární obraz se separovanými objekty od pozadí.
 Obecně lze volit i více prahů, pokud histogram obsahuje více lokálních
 maxim, ale ukazuje se, že prahování pomocí více prahů funguje pouze lokálně.
\end_layout

\begin_layout Standard
Jednoduché prahování dobře funguje jen u obrázků, které jsou z principu
 binární a jsou jen poškozené, např.
 pokud naskenujeme černobílý text.
 Vylepšením může být lokální prahování, které realizujeme pomocí výběrového
 okna (v praxi celkem dobře funguje).
 Pro volbu hodnoty prahu lze použít Otsuovu metodu, která se snaží rozdělit
 histogram na dva shluky, které budou dobře separovatelné.
 Další možnosti je provedení tzv.
 procentního prahování, pro které je ovšem nutné mít apriorní znalost, kolik
 procent plochy obrazu pokrývají objekty a kolik pozadí.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Prahovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Histogram obrázku a zvolený práh pro segmentaci typu objekt vs.
 pozadí.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Prahovani"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Růst oblastí (
\emph on
Region growing
\emph default
) 
\end_layout

\begin_layout Standard
Prvním krokem této metody je zvolení tzv.
 zárodečných bodů (
\emph on
seed points
\emph default
).
 Tyto body buď určí uživatel do objektů, které chce separovat, nebo se provede
 hrubá hranová detekce s velkým prahem a zárodečné body se umístí mimo hrany.
 Po zvolení zárodečných bodů se prohledává okolí jednotlivých bodů a na
 základě kritéria homogenity hledáme podobné body a rozhodujeme, zda patří
 či nepatří do objektu, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Region growing"

\end_inset

..
 Jako kritérium lze volit například intenzitu jasu.
 Nepoužívá se ovšem pouze segmentace podle barvy, ale také segmentace podle
 textury, např.
 textura dřeva, cihel, atd.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Rust_oblasti.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Růst oblastí (
\emph on
Region growing)
\emph default
 se zárodečnými body (červené body).
\begin_inset CommandInset label
LatexCommand label
name "fig:Region growing"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Spojování hran (
\emph on
Edge linking
\emph default
) 
\end_layout

\begin_layout Standard
Tato metoda nejprve pomocí hranového detektoru nalezne výrazné hrany, ty
 se pak snaží nějakým způsobem spojit a vytvořit uzavřené křivky, které
 by tvořily hranice objektů.
 Určení hranic se většinou provádí následujícím postupem: nalezení hran
 hranovým detektorem 
\begin_inset Formula $\Rightarrow$
\end_inset

 binarizace prahováním s vysokým prahem (zůstane jen vysoký gradient) 
\begin_inset Formula $\Rightarrow$
\end_inset

 zbavení se 
\emph on
izolovaných bodů
\emph default
, např.
 pomocí morfologických operací 
\begin_inset Formula $\Rightarrow$
\end_inset

 zmenšení tloušťky na jeden pixel 
\begin_inset Formula $\Rightarrow$
\end_inset

 napojování hran, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Edge linking"

\end_inset

.
\end_layout

\begin_layout Standard
Při napojování hran hledáme v okolí koncového bodu hrany počáteční bod jiné
 hrany a podle určitého kritéria se rozhodujeme, zda nalezenou hranu připojit
 nebo ne.
 Pokud ovšem použijeme pro nalezení hran např.
 Marr Hildrethův detektor (viz 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Marr"

\end_inset

) nebo obecně detektory hledající 
\emph on
zero crossing points
\emph default
, získáme už z podstaty detektoru uzavřené hrany.
 Získané oblasti ale nemusí být uzavřené správně a mohou vést ke špatné
 segmentaci.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Spojovani_hran.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prohledávání okolí a napojování hranice.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Edge linking"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Matematická morfologie
\end_layout

\begin_layout Standard
Matematická morfologie je nástroj pro extrakci požadovaných částí obrazu
 a používá se při předzpracování obrazu a segmentaci, s důrazem na tvar
 hledaných objektů.
 Jedná se o metody založené na nelineárních operacích v obrazu.
 Rozlišuje se binární a šedotónová morfologie, my budeme ovšem probírat
 pouze binární.
\end_layout

\begin_layout Standard
Binární obraz lze vyjádřit jako 2D bodovou množinu s počátkem v bodě 
\begin_inset Formula $O$
\end_inset

.
 Označme 
\begin_inset Formula $X$
\end_inset

 množinu bodů tvořících objekty v obraze s hodnotou 
\begin_inset Formula $1$
\end_inset

 a 
\begin_inset Formula $X^{c}$
\end_inset

 body doplňku této množiny, které tvoří pozadí obrazu s hodnotou 
\begin_inset Formula $0$
\end_inset

.
 Morfologická transformace 
\begin_inset Formula $\psi$
\end_inset

 je dána relací mezi obrazem a jinou bodovou množinou 
\begin_inset Formula $B$
\end_inset

.
 Tuto množinu nazýváme strukturní element a má svůj lokální počátek 
\begin_inset Formula $O_{b}$
\end_inset

, kterému říkáme aktuální (reprezentativní) bod.
 Pro libovolnou morfologickou transformaci existuje duální transformace
 
\begin_inset Formula $\psi^{*}$
\end_inset

, tzn.
\begin_inset Formula 
\[
\left(\forall\psi\right)\left(\exists\psi^{*}\right):\psi\left(X\right)=\left(\psi^{*}\left(X^{c}\right)\right)^{c}.
\]

\end_inset

Definujme základní morfologické operace: 
\end_layout

\begin_layout Itemize

\series bold
\emph on
Binární dilatace (expanze)
\emph default
:
\series default
 zaplňuje díry a zálivy menší než strukturní element.
 Původní objekt zvětší.
\begin_inset Formula 
\[
X\oplus B=\left\{ p\in\mathbb{E}^{2}\right.\left|p=x+b\textrm{ pro }x\in X\land b\in B\right\} ,
\]

\end_inset

tj.
 jedná se o sjednocení posunutých bodových množin.
 Dilatace je komutativní, asociativní a invariantní vůči posunu.
 Navíc je to rostoucí transformace, tzn.
 je-li 
\begin_inset Formula $X\subseteq Y$
\end_inset

 a platí-li 
\begin_inset Formula $O_{b}\in B$
\end_inset

, pak 
\begin_inset Formula $X\subseteq Y\oplus B$
\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Dilatace.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění principu binární dilatace.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
\emph on
Binární eroze
\emph default
:
\series default
 odstraní objekty menší než strukturní element.
 Původní objekt se zmenší.
\begin_inset Formula 
\[
X\ominus B=\left\{ x\in\mathbb{E}^{2}\right.\left|x+b\in X\textrm{ pro }\forall b\in B\right\} ,
\]

\end_inset

tj.
 jedná se o průnik všech posunů objektu 
\begin_inset Formula $X$
\end_inset

 o vektory 
\begin_inset Formula $-b\in B$
\end_inset

.
 Eroze je invariantní vůči posunu, antiextenzivní, tzn.
 platí-li 
\begin_inset Formula $O_{b}\in B$
\end_inset

, pak 
\begin_inset Formula $X\ominus B\subseteq X$
\end_inset

, a zachovává inkluzi, tzn.
 
\begin_inset Formula $X\subseteq Y\Rightarrow X\ominus B\subseteq Y\ominus B$
\end_inset

.
 Binární eroze je duální operace k binární dilataci.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Eroze.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění principu binární Eroze.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pomocí těchto základních operací lze například získat obrys objektu.
 Označme obrys objektu 
\begin_inset Formula $X$
\end_inset

 symbolem 
\begin_inset Formula $\partial X$
\end_inset

 (tedy hranici objektu tloušťky 1), pak platí 
\begin_inset Formula $\partial X=X\setminus X\ominus B$
\end_inset

.
 Dále definujme následující operace.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Otevření
\emph default
 (
\emph on
opening
\emph default
):
\series default
 z původního objektu odstraní výběžky menší než strukturní element.
 Jedná se o erozi následovanou dilatací, tj.
\begin_inset Formula 
\[
X\circ B=\left(X\ominus B\right)\oplus B.
\]

\end_inset

Pokud platí 
\begin_inset Formula $X\equiv X\circ B$
\end_inset

, tak říkáme, že 
\begin_inset Formula $X$
\end_inset

 je otevřený vzhledem k 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Uzavření
\emph default
 (
\emph on
closing
\emph default
):
\series default
 v původním objektu zaplní díry menší než strukturní element.
 Jedná se o dilataci následovanou erozí, tj.
\begin_inset Formula 
\[
X\bullet B=\left(X\oplus B\right)\ominus B.
\]

\end_inset

Pokud platí 
\begin_inset Formula $X\equiv X\bullet B$
\end_inset

, tak říkáme, že 
\begin_inset Formula $X$
\end_inset

 je uzavřený vzhledem k 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\begin_layout Note
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series bold
\emph on
Popis objektu pomocí matematické morfologie
\end_layout

\end_inset

 Definujeme tzv.
 morfologické spektrum.
 Nad různými objekty (např.
 kruhy proměnného poloměru) provádíme operaci otevření a zaznamenáváme do
 grafu příslušnou plochu.
 Tato charakteristika bývá celkem spolehlivá, i když lze najít objekty,
 které mají stejné morfologické spektrum a přitom vypadají různě.
\end_layout

\begin_layout Chapter
Volba příznaků
\begin_inset CommandInset label
LatexCommand label
name "sec:Priznaky"

\end_inset


\end_layout

\begin_layout Standard
Pokud máme v obrazu nalezené objekty, je třeba nalézt příznaky a objekty
 od sebe rozlišit.
 Chceme tedy přejít z obrazového prostoru do prostoru příznakového.
 Na příznakový prostor klademe základní požadavky.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Invariance
\emph default
:
\series default
 objekty uvnitř třídy musí mít stejné příznaky.
 Pokud např.
 víme, že objekty v dané třídě se liší pouze otočením, tak budeme volit
 příznak, který je invariantní vůči rotaci, ale nemusí být invariantní třeba
 vůči změně velikosti.
 Je důležité, aby deformace, vůči kterým hledáme invariant, vždy tvořily
 grupu, a to kvůli nutnosti uzavřenosti na skládání.
 
\end_layout

\begin_layout Note
Pokud uvažujeme posun 
\begin_inset Formula $\tilde{x}=x+\alpha_{1}$
\end_inset

, 
\begin_inset Formula $\tilde{y}=y+\alpha_{2}$
\end_inset

, nebo změnu velikosti 
\begin_inset Formula $\tilde{x}=s_{2}\cdot x$
\end_inset

, 
\begin_inset Formula $\tilde{y}=s_{1}\cdot y$
\end_inset

, tak nedochází k mísení souřadnic.
 Naopak při rotaci 
\begin_inset Formula $\left(\tilde{x},\tilde{y}\right)^{T}=\mathbb{A}\left(x,y\right)$
\end_inset

 k mísení souřadnic dochází, a nejedná se tedy o separabilní transformaci,
 a proto je nejtěžší nalézt invarianty vůči rotaci.
 Invarianty vůči rotaci převedou nějakým 
\begin_inset Quotes gld
\end_inset

trikem
\begin_inset Quotes grd
\end_inset

 rotaci na posun, např.
 změnou souřadné soustavy.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Diskriminabilita
\emph default
:
\series default
 objekty patřící do různých tříd by měly mít různé hodnoty příznaků (invariance
 jde většinou proti diskriminabilitě).
\end_layout

\begin_layout Itemize

\series bold
\emph on
Robustnost
\emph default
:
\series default
 je potřeba, aby příznaky rozumně reagovaly na případný šum.
 Stejně tak malá odlišnost objektu by se měla odrazit v malé změně hodnoty
 příznaku.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Nezávislost
\emph default
: 
\series default
příznaky by na sobě měly být nezávislé, tzn.
 žádná složka vektoru příznaků není funkce jiných.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Úplnost
\emph default
:
\series default
 schopnost přesné rekonstrukce objektu z jeho příznaků až na grupu deformací,
 na které jsou příznaky invariantní.
 Tato vlastnost není vždy potřeba, protože většinou chceme objekty pouze
 klasifikovat a ne poté zpětně rekonstruovat.
 Výhodou úplných příznaků je, že poskytují výbornou diskriminabilitu, a
 to z toho důvodu, že pracují s úplnou informací a zanedbávají například
 jen rotaci, velikost, atd.
 
\end_layout

\begin_layout Standard
Od příznakového prostoru očekáváme, že v něm příznaky budou tvořit malé
 shluky, které jsou daleko od sebe.
 Dále se budeme zabývat hlavními kategoriemi příznaků.
\end_layout

\begin_layout Section
Jednoduché vizuální příznaky
\end_layout

\begin_layout Standard
Tato kategorie příznaků se používá pro jednoduché úlohy, kdy máme málo tříd,
 které se od sebe hodně liší.
 Pokud chceme tyto příznaky použít pro složitější úlohy, je třeba úlohu
 
\begin_inset Quotes gld
\end_inset

předklasifikovat
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Obsah 
\begin_inset Formula $P$
\end_inset

 nebo obvod 
\begin_inset Formula $O$
\end_inset


\emph default
:
\series default
 tyto příznaky nejsou invariantní na změnu měřítka, navíc spousta úplně
 odlišných objektů může mít stejný obsah resp.
 obvod.
 
\end_layout

\begin_layout Itemize

\series bold
\emph on
Kompaktnost
\emph default
:
\series default
 míra podobnosti ke kruhu.
 Je dána poměrem 
\begin_inset Formula $\nicefrac{4\pi P}{O^{2}}$
\end_inset

, kde 
\begin_inset Formula $P$
\end_inset

 je obsah a 
\begin_inset Formula $O$
\end_inset

 je obvod.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Rektangularita
\emph default
:
\series default
 poměr plochy objektu k ploše minimálního opsaného obdélníku.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Podlouhlost
\emph default
 (
\emph on
elongation
\emph default
):
\series default
 poměr stran minimálního opsaného obdélníku, tzn.
 míra podobnosti ke čtverci.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Konvexita
\emph default
:
\series default
 poměr obsahu objektu 
\begin_inset Formula $A$
\end_inset

 a obsahu jeho konvexního obalu 
\begin_inset Formula $C_{A}$
\end_inset

, tzn.
 
\begin_inset Formula $\nicefrac{P\left(A\right)}{P\left(C_{A}\right)}$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Eulerovo číslo
\emph default
:
\series default
 
\begin_inset Formula $C-H$
\end_inset

, kde 
\begin_inset Formula $C$
\end_inset

 je počet komponent a 
\begin_inset Formula $H$
\end_inset

 je počet děr.
\end_layout

\begin_layout Standard
Výše uvedené příznaky se používají k předtřídění při velkém množství tříd.
 Obecnou nevýhodou je slabá diskriminabilita, výhodou naopak rychlé napočítání.
 Navíc jsou všechny tyto příznaky neúplné.
\end_layout

\begin_layout Section
Úplné příznaky
\end_layout

\begin_layout Subsection
Řetězové kódy (
\emph on
chain code
\emph default
)
\end_layout

\begin_layout Standard
Jedná se o hledání hranice objektu a její popis pomocí řetězce čísel, kde
 následující číslo popisuje směr, jakým vede hranice ze stávajícího bodu.
 Pokud vezmeme čtyři směry a označíme je čísly: 
\emph on
0 – nahoru, 1 – doleva, 2 – doprava, 3 – dolů
\emph default
, jedná se o absolutní kód.
 Pokud ovšem objekt otočíme, tak se nám popis rozsype, a proto se používá
 tzv.
 relativní (diferenční) kód, který je vůči rotaci invariantní.
 Při použití relativního vyjádření stačí pouze hodnoty: 
\emph on
0 – rovně, 1 – doleva, 2 – doprava
\emph default
.
 Procházíme křivku a zapisujeme 
\emph on
0,
\emph default
 pokud neměníme směr, 
\emph on
1
\emph default
 resp.
 
\emph on
2
\emph default
 když křivka zatáčí.
 Svislé a vodorovné části se pak vyobrazí jako sekvence nul.
 Je také možné uvažovat diagonální směry, pak je třeba pro reprezentaci
 křivky osm čísel, resp.
 sedm při použití relativního kódu.
 Tato metoda popisu se moc nepoužívá, protože je těžké definovat metriku,
 která by dobře reprezentovala vizuální podobu objektů.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Retezove_kody.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka absolutního a relativního řetězového kódu.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Polygonální aproximace
\end_layout

\begin_layout Standard
Tato metoda aproximuje objekty pomocí polygonů.
 Pro použití je předem nutné vědět počet vrcholů objektu a z tohoto důvodu
 se používá v podstatě jen v případech, kdy víme, že objekty jsou polygony
 a známe jejich počet vrcholů.
\end_layout

\begin_layout Subsection
Radiální funkce
\end_layout

\begin_layout Standard
Uvažujme hvězdicové objekty, tzn.
 libovolná polopřímka vedoucí z těžiště objektu má pouze jeden průsečík
 s hranicí objektu.
 Nejedná se o stejnou vlastnost jako konvexnost.
 Platí, že každý konvexní objekt je hvězdicový, ale opačná implikace neplatí.
 Pokud budeme zaznamenávat vzdálenost těžiště od hranice objektu v polárních
 souřadnicích, dostaneme reprezentaci objektu, tzn.
 zaznamenáváme 
\begin_inset Formula $r\left(\theta\right)$
\end_inset

 pro 
\begin_inset Formula $\forall\theta\in\left\langle 0,2\pi\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Při provedení rotace dojde v záznamu funkce 
\begin_inset Formula $r\left(\theta\right)$
\end_inset

 pouze k cyklickému posunutí.
 Protože víme, že při posunutí se u Fourierovy transformace nemění amplituda
 a fáze se změní známým způsobem (viz věta 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Fourier_Shift_Theorem"

\end_inset

), můžeme vzít pouze amplitudy Fourierovy transformace, čímž získáme invariant
 vůči rotaci.
 Díky této vlastnosti také nezáleží na tom, kde začneme se vzorkováním úhlu
 
\begin_inset Formula $\theta$
\end_inset

, protože jiný začátek vzorkování se opět projeví pouze cyklickým posunutím.
 Jediným problémem zůstává omezenost pouze na hvězdicové objekty.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Radialni_funkce.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka popisu objektu pomocí radiální funkce.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tvarový vektor (
\emph on
shape vector
\emph default
)
\end_layout

\begin_layout Standard
Chceme-li charakterizovat nějakým způsobem objekt, lze použít tzv.
 tvarových vektorů, což je posloupnost vzdáleností od těžiště objektu k
 jeho okraji po jistých úhlových přírůstcích, tzn.
 jedná se o navzorkovanou radiální funkci.
 Vzorkování začínáme v místě, kde je vzdálenost těžiště objektu od jeho
 hranice největší.
 Složky tvarového vektoru nejsou primárně invariantní na rotaci objektu
 ani na změnu měřítka.
 Invariantnosti na rotaci lze dosáhnout stejným postupem jako u radiální
 funkce.
 Abychom zajistili invarianci na změnu měřítka, vybereme maximální vzdálenost
 těžiště od hranice a složky tvarového vektoru touto vzdáleností vydělíme.
 Problém nastává, pokud existuje více složek tvarového vektoru s maximální
 hodnotou.
 Pokud ovšem zvolíme dostatečné vzorkování, tak se více maximálních hodnot
 projeví pouze cyklickým posunutím tvarového vektoru.
 Jestliže tedy přijmeme, že musíme zkoumat všechny cyklické posuny tvarového
 vektoru, tak nezáleží na tom, kde vzorkování začneme.
\end_layout

\begin_layout Subsection
Tvarová matice (
\emph on
shape matrix
\emph default
)
\end_layout

\begin_layout Standard
Tvarové vektory a radiální funkce dobře fungují jen na hvězdicové objekty,
 ale objekty bývají složitější.
 Uvažujme kružnicovitou síť, která překrývá objekt a začíná v místě, kde
 je maximální vzdálenost těžiště od hranice.
 Tato síť jde zapsat jako matice, která obsahuje 
\emph on
1
\emph default
, pokud objekt překrývá více než polovinu segmentu, jinak 
\emph on
0
\emph default
.
 Jde tedy o polární převzorkování celého objektu.
 Jako metriku lze například volit počet segmentů, ve kterých se matice shodují,
 a velikost vzorkování volíme tak, aby segmenty blízko středu byly přibližně
 čtvercové.
 Díky tomu, že pro všechny objekty bude stejný počet segmentů, a tedy stejně
 velká tvarová matice, dostáváme invarianci na změnu měřítka.
 Kvůli zvolenému typu vzorkování ovšem nastává otázka, zda je problém, že
 segmenty jsou různě velké, a v různých částech objektu tedy uvažujeme různé
 rozlišení.
 Toto by se dalo obejít volbou vzorkování tak, aby segmenty stejné byly,
 nebo volbou čtvercové sítě.
 Nicméně ani jedna z těchto možností nefunguje.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Tvarovy_vektor.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Reprezentace objektu pomocí tvarového vektoru a tvarové matice.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Transformační příznaky (
\emph on
Transform coefficient features
\emph default
)
\end_layout

\begin_layout Standard
Do této kategorie spadají například waveletová transformace (
\emph on
wavelet transform
\emph default
), momentové invarianty a Fourierovy deskriptory, kterými se budeme zabývat.
 Momentovým invariantům a waveletové transformaci jsou věnovány vlastní
 kapitoly.
\end_layout

\begin_layout Subsection
Fourierovy deskriptory
\end_layout

\begin_layout Standard
Fourierovy deskriptory jsou rozšířením radiální funkce o invariantnost vůči
 změně měřítka.
 Pokud provedeme Fourierovu transformaci radiální funkce a z ní vezmeme
 amplitudu, tak Fourierovými deskriptory rozumíme prvních 
\begin_inset Formula $N$
\end_inset

 koeficientů Fourierovy transformace.
 Abychom získali invariantnost vůči změně měřítka, tak sadu Fourierových
 deskriptorů dělíme nultým Fourierovým koeficientem, který odpovídá střední
 hodnotě radiální funkce
\begin_inset Formula 
\[
C_{k}\coloneqq\frac{\left|F\left(k\right)\right|}{\left|F\left(0\right)\right|}.
\]

\end_inset

 Protože fáze Fourierovy transformace nese podstatnou část informace, tak
 není možné zpětně zrekonstruovat objekt, a nejedná se tedy o úplný příznak.
 Navíc jsme omezeni pouze na hvězdicové objekty a spojitý případ.
\end_layout

\begin_layout Standard
V praxi se tedy používá jistá modifikace, která umožňuje použití i pro nehvězdic
ové objekty v diskrétním případě.
 Vezmeme hranici objektu a představíme si ji jako komplexní funkci 
\begin_inset Formula 
\[
z_{n}=x_{n}+i\cdot y_{n}.
\]

\end_inset

Vzhledem k tomu, že se jedná pouze o posunutí (přičítáme konstantu), změní
 se pouze nultý Fourierův koeficient, který má nyní význam vzdálenosti od
 počátku.
 V případě, že objekt posuneme, tzn.
 
\begin_inset Formula $\tilde{z}_{n}=z_{n}-c$
\end_inset

, tak se nám změní vzdálenost od počátku, což opět vede pouze ke změně nultého
 Fourierova koeficientu, tedy
\begin_inset Formula 
\[
\tilde{Z}\left(k\right)=\stackrel[n=0]{N-1}{\sum}\left(z_{n}-c\right)e^{-\frac{1}{N}2\pi ink}=\stackrel[n=0]{N-1}{\sum}z_{n}e^{-\frac{1}{N}2\pi ink}-c\cdot\stackrel[n=0]{N-1}{\sum}e^{-\frac{1}{N}2\pi ink}=\left\{ \begin{array}{ccc}
Z\left(0\right)-c\cdot N & \ldots & k=0\\
Z\left(k\right) & \ldots & k\neq0
\end{array}\right..
\]

\end_inset

Pokud nultý koeficient zahodíme, tak dostáváme invariant na posun.
 Dále platí, že rotace v komplexních číslech je pouze přenásobení konstantou
 
\begin_inset Formula $\tilde{z}_{n}=z_{n}\cdot e^{i\varphi}$
\end_inset

, a tedy
\begin_inset Formula 
\[
\tilde{Z}\left(k\right)=\stackrel[n=0]{N-1}{\sum}\left(z_{n}\cdot e^{i\varphi}\right)e^{-\frac{1}{N}2\pi ink}=e^{i\varphi}\cdot\stackrel[n=0]{N-1}{\sum}z_{n}e^{-\frac{1}{N}2\pi ink}=e^{i\varphi}\cdot Z\left(k\right)\quad\Longrightarrow\quad\left|\tilde{Z}\left(k\right)\right|=\left|Z\left(k\right)\right|.
\]

\end_inset

Abychom získali invariantnost vůči změně měřítka 
\begin_inset Formula $\tilde{z}_{n}=c\cdot z_{n}$
\end_inset

, tak sadu Fourierových deskriptorů dělíme prvním Fourierovým koeficientem
 (nedělíme nultým, protože ten jsme zahodili) a dostáváme vztah
\begin_inset Formula 
\[
C_{k}\coloneqq\frac{\left|\tilde{Z}\left(k\right)\right|}{\left|\tilde{Z}\left(1\right)\right|}=\frac{\left|\stackrel[n=0]{N-1}{\sum}\left(c\cdot z_{n}\right)e^{-\frac{1}{N}2\pi ink}\right|}{\left|\stackrel[n=0]{N-1}{\sum}\left(c\cdot z_{n}\right)e^{-\frac{1}{N}2\pi in}\right|}=\frac{c}{c}\cdot\frac{\left|Z\left(k\right)\right|}{\left|Z\left(1\right)\right|}=\frac{\left|Z\left(k\right)\right|}{\left|Z\left(1\right)\right|}.
\]

\end_inset

Protože ale pořád zahazujeme fázi, tak se nejedná o úplný příznak.
\end_layout

\begin_layout Section
Diferenciální invarianty
\end_layout

\begin_layout Standard
Všechny výše uvedené příznaky jsou globální, tzn.
 je třeba vidět celý objekt, aby bylo možné tyto příznaky použít.
 Abychom byli schopni najít příznaky i částečně zakrytých objektů, budeme
 hledat lokální příznaky.
 Můžeme například zkoumat derivaci hranice.
 Protože na derivaci hranice potřebujeme znát pouze okolí bodu, tak v bodech
 hranice, které nejsou zakryté, bude mít derivace stejnou hodnotu.
 Můžeme tedy porovnávat derivaci hranice v těch bodech, kde není zakrytá,
 a podle toho hledat míru shody.
 Příkladem diferenciálního příznaku je křivost, která je definována vztahem
 
\begin_inset Formula 
\[
C\left(t\right)=\frac{\dot{x}\ddot{y}-\ddot{x}\dot{y}}{\left(\dot{x}^{2}+\dot{y}^{2}\right)^{\frac{3}{2}}}.
\]

\end_inset

Pokud jsme schopni nalézt inflexní body, tj.
 řešit rovnici 
\begin_inset Formula $\ddot{x}\dot{y}-\ddot{y}\dot{x}=0$
\end_inset

, tak je používáme pro popis místo lokálních extrémů, tzn.
 porovnáváme objekty v inflexních bodech hranice.
 Inflexní body se totiž na rozdíl od lokálních extrémů dobře zachovávají
 při afinní transformaci.
 Jestliže je inflexních bodů málo, tak metoda nefunguje, a proto se používá
 pouze na velmi členité objekty.
 Nevýhodou diferenciálních invariantů je velmi velká nestabilita.
\end_layout

\begin_layout Standard
Abychom zvýšili stabilitu, je možné provádět porovnávání jiným způsobem.
 Použijeme Inflexní body, které jsou afinně a projektivně invariantní.
 Podle inflexních bodů 
\begin_inset Quotes gld
\end_inset

rozsekáme
\begin_inset Quotes grd
\end_inset

 hranici na části a tyto části poté popisujeme globálními příznaky.
 Takovým příznakům říkáme semi-diferenciální invarianty.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
A)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
B)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
C)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
D)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Diferencialni_invarianty_org.png
	lyxscale 20
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Diferencialni_invarianty.png
	lyxscale 20
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Diferencialni_invarianty_semi.png
	lyxscale 20
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/PNG/Diferencialni_invarianty_ryba.png
	lyxscale 20
	width 20line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\series bold
A)
\series default
Originální objekt a 
\series bold
B)
\series default
 ukázka principu diferenciálních invariantů a 
\series bold
C)
\series default
 semi-diferenciálních invariantů.
 Obrázek 
\series bold
D)
\series default
 ilustruje rozpoznávání částečně zakrytého objektu.
 Tento objekt je rozdělen podle inflexních bodu a v každé části hledáme
 příznaky pomocí tvarového vektoru.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph on
Curvature Scale Space
\emph default
 (CSS)
\end_layout

\begin_layout Standard
Pokud budeme narovnávat hranici objektu, tak se k sobě budou inflexní body
 přibližovat a postupně zanikat.
 Rychlost, jakou se k sobě body přibližují, je dobrý popis objektu, a navíc
 je rotačně invariantní.
 Existuje i modifikace, která je invariantní vůči afinní transformaci.
 
\end_layout

\begin_layout Chapter
Momentové invarianty
\end_layout

\begin_layout Standard
V obecném případě je vztah mezi originálním obrazem 
\begin_inset Formula $f\left(x,y\right)$
\end_inset

 a pozorovaným obrazem 
\begin_inset Formula $g\left(x,y\right)$
\end_inset

 dán vztahem 
\begin_inset Formula $g=\mathcal{D}\left(f\right)$
\end_inset

, kde symbolem 
\begin_inset Formula $\mathcal{D}$
\end_inset

 značíme operátor degradace.
 Problémem je, že neznáme předpis operátoru 
\begin_inset Formula $\mathcal{D}$
\end_inset

, nebo ho známe pouze parametricky.
 K řešení můžeme použít několik postupů.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Hrubá síla:
\series default
\emph default
 rozšíříme trénovací množinu o všechny možné degradace operátorem 
\begin_inset Formula $\mathcal{D}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Inverze 
\begin_inset Formula $\mathcal{D}$
\end_inset

 (normalizační přístup): 
\series default
\emph default
definujeme normalizovanou polohu a do té se snažíme obrázek převést (např.
 rozmazaný obrázek 
\begin_inset Formula $\rightarrow$
\end_inset

 dekonvoluce, rotace 
\begin_inset Formula $\rightarrow$
\end_inset

 otočení do nějaké konkrétní polohy).
 Řešení inverze ovšem bývá obtížné a numericky nestabilní.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Popis pomocí invariantních příznaků: 
\series default
\emph default
obraz popisujeme pomocí příznaků, které jsou invariantní na daný druh degradace.
 Částečně je tato úloha a inverze operátoru 
\begin_inset Formula $\mathcal{D}$
\end_inset

 ekvivalentní (často lze získat invarianty přes inverzní úlohy) a nemusí
 to být vždy nejlepší přístup.
 
\end_layout

\begin_layout Definition
Invariantem rozumíme funkcionál 
\begin_inset Formula $I$
\end_inset

 definovaný na obrazovém prostoru, který pro všechny přípustné operátory
 degradace 
\begin_inset Formula $\mathcal{D}$
\end_inset

 a libovolný obraz 
\begin_inset Formula $f$
\end_inset

 splňuje vztah 
\begin_inset Formula 
\[
I\left(f\right)=I\left(\mathcal{D}\left(f\right)\right).
\]

\end_inset


\end_layout

\begin_layout Standard
Je důležité zmínit, že požadujeme, aby degradace tvořily grupu, tzn.
 aby množina degradací obsahovala jednotkový prvek, existoval v ní inverzní
 prvek a byla uzavřená na kompozici.
 Ve skutečnosti není třeba grupa, ale stačí semi-grupa, ale grupa se většinou
 uvažuje pro jednoduchost.
 Nejdůležitější vlastností je uzavřenost.
 Pokud bychom tuto vlastnost neměli, tak nemusí opakování deformace patřit
 do třídy deformací, a tedy nemáme invarianty na opakování deformace.
 Pokud bychom přece jenom našli invariant, který je invariantní vůči neuzavřené
 třídě deformací, tak je určitě invariantní vůči nejmenší grupě obsahující
 tuto třídu deformací.
 Tedy je to invariant vůči větší třídě a neexistuje invariant, který by
 byl invariantní pouze vůči uvažované třídě deformací.
 Můžeme tedy uvažovat větší třídu deformací a nic se pro nás nezmění.
\end_layout

\begin_layout Standard
Pokud máme definovanou grupu deformací na prostoru invariantů, můžeme přistoupit
 k jeho rozkladu.
 Tento rozklad můžeme udělat dvěma (obecně jinými) způsoby.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Pomocí orbitů: 
\series default
\emph default
definujme grupovou akci z 
\begin_inset Formula $\mathcal{D}\times I\rightarrow I$
\end_inset

.
 Orbity 
\begin_inset Formula $\mathcal{D}\left(f\right)$
\end_inset

, tzn.
 množiny všech možných degradací, které mohou vzniknout,  jsou třídy ekvivalence
 uvažovaného klasifikačního problému.
 Invarianty jsou charakteristiky orbitu a chceme, aby daný orbit plně popisovaly.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Pomocí invariantů:
\series default
\emph default
 definujeme ekvivalenci vztahem 
\begin_inset Formula $I\left(f\right)=I\left(g\right)$
\end_inset

.
 Takto získaný rozklad je obecně hrubší než rozklad pomocí orbitů.
\end_layout

\begin_layout Standard
Pokud jsou oba uvedené faktorprostory stejné, tak pro každý 
\begin_inset Formula $f\neq\mathcal{D}\left(g\right)$
\end_inset

 platí 
\begin_inset Formula $I\left(f\right)\neq I\left(g\right)$
\end_inset

 a máme tzv.
 úplný systém invariantů.
 Ne vždy ovšem potřebujeme úplný systém invariantů, např.
 pokud chceme rozpoznávat tváře pouze zaměstnanců a ne všech lidí na planetě,
 potřebujeme, aby bylo pomocí vybraných invariantů možné rozlišit pouze
 skupinu zaměstnanců.
\end_layout

\begin_layout Section
Základní vztahy
\end_layout

\begin_layout Standard
Nyní se budeme zabývat momentovými invarianty.
 Jedná se o projekci do polynomiální báze.
 Nechť 
\begin_inset Formula $f\left(x,y\right)$
\end_inset

 je po částech spojitá funkce definovaná na 
\begin_inset Formula $\Omega\subset\mathbb{R}\times\mathbb{R}$
\end_inset

 a 
\begin_inset Formula $\left\{ \mathcal{P}_{pq}\left(x,y\right)\right\} $
\end_inset

 je množina polynomů definovaná na 
\begin_inset Formula $\Omega$
\end_inset

.
 Pak je projekce dána vztahem 
\begin_inset Formula 
\[
M_{pq}=\int_{\mathbb{R}^{2}}\mathcal{P}_{pq}\left(x,y\right)f\left(x,y\right)\textrm{d}x\textrm{d}y.
\]

\end_inset

Protože momenty nejsou (na rozdíl od Fourierových koeficientů 
\begin_inset Formula $\sum c_{k}\varphi_{k}=f$
\end_inset

) algebraické souřadnice vyjádřené pomocí polynomiální báze (jedná se pouze
 o průměty), nelze zpětnou rekonstrukci provést obvyklým způsobem
\begin_inset Formula 
\[
f\left(x,y\right)\neq\sum M_{pq}\mathcal{P}_{pq}\left(x,y\right).
\]

\end_inset

Momenty jsou algebraické souřadnice vyjádřené pomocí polynomiální báze pouze
 v případě, že je systém polynomů ortogonální.
\end_layout

\begin_layout Subsection
Geometrické momenty
\end_layout

\begin_layout Standard
Velmi často se používají geometrické momenty, které jsou definovány následujícím
 vztahem
\begin_inset Formula 
\[
m_{pq}^{f}=\int_{\mathbb{R}^{2}}x^{p}y^{q}f\left(x,y\right)\textrm{d}x\textrm{d}y,
\]

\end_inset

kde řádem momentu rozumíme číslo 
\begin_inset Formula $p+q$
\end_inset

.
 S jejich pomocí můžeme snadno nalézt souřadnice těžiště objektu, které
 mají tvar
\begin_inset Formula 
\begin{align*}
x_{t}= & \frac{m_{10}^{f}}{m_{00}^{f}}, & y_{t}= & \frac{m_{01}^{f}}{m_{00}^{f}},
\end{align*}

\end_inset

kde 
\begin_inset Formula $m_{00}^{f}$
\end_inset

 představuje v případě binárních obrazů plochu.
 Pokud budeme obraz považovat za hustou pravděpodobnosti a normalizujeme
 
\begin_inset Formula $m_{00}^{f}=1$
\end_inset

, pak 
\begin_inset Formula $m_{10}^{f}$
\end_inset

, 
\begin_inset Formula $m_{01}^{f}$
\end_inset

 jsou střední hodnoty a 
\begin_inset Formula $m_{20}^{f}$
\end_inset

, resp.
 
\begin_inset Formula $m_{02}^{f}$
\end_inset

 je vertikální, resp.
 horizontální rozptyl.
 Nakonec moment 
\begin_inset Formula $m_{11}^{f}$
\end_inset

 představuje kovarianci.
\end_layout

\begin_layout Theorem
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Jednoznačnost
\end_layout

\end_inset

 Pokud je 
\begin_inset Formula $f\left(x,y\right)$
\end_inset

 po částech spojitá funkce a 
\begin_inset Formula $\Omega$
\end_inset

 je omezená, potom 
\begin_inset Formula 
\[
f\left(x,y\right)\Longleftrightarrow\left\{ m_{pq}\right\} ,\quad p,q=0,1,2,\ldots,\infty.
\]

\end_inset


\end_layout

\begin_layout Section
Invarianty na posun
\end_layout

\begin_layout Standard
Abychom získali invarianty vůči posunu zavádíme centrální geometrické momenty
 ve tvaru
\begin_inset Formula 
\[
\mu_{pq}^{f}=\int_{\mathbb{R}^{2}}\left(x-x_{t}\right)^{p}\left(y-y_{t}\right)^{q}f\left(x,y\right)\textrm{d}x\textrm{d}y.
\]

\end_inset

Mezi geometrickými a centrálními geometrickými momenty platí následující
 vztahy
\begin_inset Formula 
\begin{align*}
\mu_{00} & =m_{00}, & \mu_{10}=\mu_{01} & =0, & \mu_{pq} & =\stackrel[k=0]{p}{\sum}\stackrel[j=0]{q}{\sum}\binom{p}{k}\binom{q}{j}\left(-1\right)^{k+j}x_{t}^{k}y_{t}^{j}m_{p-k,q-j}^{f}.
\end{align*}

\end_inset


\end_layout

\begin_layout Section
Invarianty na změnu měřítka a posun
\end_layout

\begin_layout Standard
Uvažujme změnu měřítka 
\begin_inset Formula $\tilde{x}=s\cdot x$
\end_inset

, 
\begin_inset Formula $\tilde{y}=s\cdot y$
\end_inset

 a dosaďme do centrálního geometrického momentu 
\begin_inset Formula 
\[
\tilde{\mu}_{pq}^{\tilde{f}}=\int_{\mathbb{R}^{2}}\left(\tilde{x}-\tilde{x}_{t}\right)^{p}\left(\tilde{y}-\tilde{y}_{t}\right)^{q}\tilde{f}\left(\tilde{x},\tilde{y}\right)\textrm{d}\tilde{x}\textrm{d}\tilde{y}=\int_{\mathbb{R}^{2}}s^{p}\left(x-x_{t}\right)^{p}s^{q}\left(y-y_{t}\right)^{q}f\left(x,y\right)s^{2}\textrm{d}x\textrm{d}y=s^{p+q+2}\mu_{pq}^{f}.
\]

\end_inset

Víme, že platí 
\begin_inset Formula $\tilde{\mu}_{00}^{\tilde{f}}=s^{2}\mu_{00}^{f}$
\end_inset

 a označíme 
\begin_inset Formula 
\[
v_{pq}^{f}=\frac{\mu_{pq}^{f}}{\left(\mu_{00}^{f}\right)^{\omega}}\quad\Longrightarrow\quad\tilde{v}_{pq}^{\tilde{f}}=\frac{\tilde{\mu}_{pq}^{\tilde{f}}}{\left(\tilde{\mu}_{00}^{\tilde{f}}\right)^{\omega}}=\frac{s^{p+q+2}\mu_{pq}^{f}}{s^{2\omega}\left(\mu_{00}^{f}\right)^{\omega}}\overset{!}{=}v_{pq}^{f}.
\]

\end_inset

Protože chceme získat invariantnost na změnu měřítka, požadujeme, aby byla
 platila uvedená rovnost, která je splněna pro 
\begin_inset Formula $\omega=\frac{p+q}{2}+1$
\end_inset

.
 Tyto momenty se nazývají normalizované momenty.
\end_layout

\begin_layout Section
Rotační invarianty
\end_layout

\begin_layout Standard
Uvažujme rotaci ve tvaru
\begin_inset Formula 
\begin{align*}
\tilde{x}= & x\cos\theta-y\sin\theta,\\
\tilde{y}= & x\sin\theta+y\cos\theta.
\end{align*}

\end_inset

Dosazením do obecného tvaru pro geometrické momenty získáme vztah
\begin_inset Formula 
\[
\tilde{\mu}_{pq}=\int_{\mathbb{R}^{2}}\left(x\cos\theta-y\sin\theta\right)^{p}\left(x\sin\theta+y\cos\theta\right)^{q}f\left(x,y\right)|\delta|\textrm{d}x\textrm{d}y,
\]

\end_inset

který ovšem nelze obecně jednoduše řešit.
 Pro malé 
\begin_inset Formula $p,q$
\end_inset

 lze odvodit (
\emph on
M.
 K.
 Hu - 7 invariants of the 3rd order (1962)
\emph default
) invarianty ve tvaru
\begin_inset Formula 
\begin{align*}
\phi_{1} & =\mu_{20}+\mu_{02}, & \phi_{3} & =\left(\mu_{30}-3\mu_{12}\right)^{2}+\left(3\mu_{21}-\mu_{03}\right)^{2}, & \cdots,\\
\phi_{2} & =(\mu_{20}-\mu_{02})^{2}+4\mu_{11}^{2}, & \phi_{4} & =\left(\mu_{30}+\mu_{12}\right)^{2}+\left(\mu_{21}+\mu_{03}\right)^{2}, & \cdots.
\end{align*}

\end_inset

Nicméně tyto invarianty jsou závislé, např.
 platí 
\begin_inset Formula 
\[
\phi_{3}=\frac{\phi_{5}^{2}+\phi_{7}^{2}}{\phi_{4}^{3}},
\]

\end_inset

a také jsou nekompletní, např.
 nelze jednoznačně vyjádřit 
\begin_inset Formula $\mu_{11}$
\end_inset


\begin_inset Formula 
\[
\mu_{11}^{2}=\frac{1}{4}\left(\phi_{2}-\left(\frac{\phi_{6}}{\phi_{4}}\right)^{2}\right).
\]

\end_inset

Navíc víme, že do třetího řádu máme celkem 10 momentů, moment nultého řádu
 použijeme na normalizaci, momenty prvního řádu na translaci, tzn.
 zbývá 7 momentů a na rotaci potřebujeme jeden parametr.
 Celkem tedy může být nejvýše 6 invariantů na rotaci do řádu 3.
 Na snadné úlohy tyto invarianty stačí (např.
 rozpoznávání siluet letadel), ale pro náročnější mají nízkou diskriminabilitu.
 Pokud bychom do těchto 7 invariantů dosadili normalizované momenty, získali
 bychom invarianty na posun, rotaci i změnu měřítka, tzv.
 TRS invarianty.
\end_layout

\begin_layout Subsection
Obecná konstrukce
\end_layout

\begin_layout Standard
Uvažujme transformaci do polárních souřadnic
\begin_inset Formula 
\begin{align*}
x & =r\cos\theta, & r & =\sqrt{x^{2}+y^{2}},\\
y & =r\sin\theta, & \theta & =\arctan\left(\frac{y}{x}\right),
\end{align*}

\end_inset

a zaveďme tzv.
 cirkulární momenty ve tvaru
\begin_inset Formula 
\[
c_{pq}=\int_{0}^{\infty}\int_{0}^{2\pi}\mathcal{R}_{pq}\left(r\right)e^{i\xi(p,q)\theta}f(r,\theta)r\text{d}\theta\text{d}r,
\]

\end_inset

 kde 
\begin_inset Formula $\xi(p,q)$
\end_inset

 je funkce od 
\begin_inset Formula $p,q$
\end_inset

, a 
\begin_inset Formula $\mathcal{R}_{pq}\left(r\right)e^{i\xi(p,q)\theta}$
\end_inset

 představuje prvky množiny polynomů vyjádřené v polárních souřadnicích.
 Pokud budeme otáčet obrázek o 
\begin_inset Formula $\alpha$
\end_inset

, tak se nám hodnota momentu změní následujícím způsobem 
\begin_inset Formula 
\[
\tilde{c}_{pq}=e^{i\xi(p,q)\alpha}\cdot c_{pq},
\]

\end_inset

což je analogie k 
\emph on
Fourier shift theorem
\emph default
, viz věta 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Fourier_Shift_Theorem"

\end_inset

.
 Otázkou nyní je jak se zbavit členu 
\begin_inset Formula $e^{i\xi(p,q)\alpha}$
\end_inset

.
 Můžeme například položit 
\begin_inset Formula $|\tilde{c}_{pq}|=|c_{pq}|$
\end_inset

, čímž získáme invariant, ale nejedná se o úplný systém invariantů.
 Pokud chceme úplný systém, tak musíme znát konkrétní tvar funkce 
\begin_inset Formula $\xi(p,q)$
\end_inset

, jinak tuto úlohu nelze řešit nějakým obecným způsobem.
\end_layout

\begin_layout Subsection
Konstrukce pomocí komplexních momentů
\end_layout

\begin_layout Standard
Zaveďme komplexní momenty následujícím vztahem
\begin_inset Formula 
\[
c_{pq}^{f}=\int_{\mathbb{R}^{2}}\left(x+iy\right)^{p}\left(x-iy\right)^{q}f\left(x,y\right)\textrm{d}x\textrm{d}y.
\]

\end_inset

Pro tyto momenty můžeme snadno odvodit vztahy s normálními momenty
\begin_inset Formula 
\begin{align*}
c_{pq} & =\sum_{k=0}^{p}\sum_{j=0}^{q}\binom{p}{k}\binom{q}{j}(-1)^{q-j}\cdot i^{p+q-k-j}\cdot m_{k+j,p+q-k-j},\\
m_{pq} & =\frac{1}{2^{p+q}\cdot i^{q}}\sum_{k=0}^{p}\sum_{j=0}^{q}\binom{p}{k}\binom{q}{j}(-1)^{q-j}\cdot c_{k+j,p+q-k-j}.
\end{align*}

\end_inset

Navíc pro komplexní momenty platí vztah 
\begin_inset Formula $c_{qp}=c_{pq}^{*}$
\end_inset

, kde hvězdička značí komplexní sdružení.
 Pokud vyjádříme komplexní momenty v polárních souřadnicích, tzn.
 dosadíme transformaci 
\begin_inset Formula $x+iy\rightarrow re^{i\varphi}$
\end_inset

 a 
\begin_inset Formula $x-iy\rightarrow re^{-i\varphi}$
\end_inset

 získáme následující vztah
\begin_inset Formula 
\[
c_{pq}^{f}=\int_{\mathbb{R}}\int_{0}^{2\pi}r^{p+q}e^{i\varphi(p-q)}f(r,\varphi)r\text{d}r\text{d}\varphi=\int_{\mathbb{R}}\int_{0}^{2\pi}r^{p+q+1}e^{i\varphi(p-q)}f(r,\varphi)\text{d}r\text{d}\varphi,
\]

\end_inset

ze kterého je jasně vidět, že komplexní momenty jsou pouze speciálním případem
 cirkulárních momentů pro volbu 
\begin_inset Formula $\xi(p,q)=p-q$
\end_inset

.
\end_layout

\begin_layout Standard
Z vlastností cirkulárních momentů a ze znalosti funkce 
\begin_inset Formula $\xi(p,q)$
\end_inset

 pro komplexní momenty, můžeme snadno odvodit, jak se tyto momenty chovají
 při rotaci 
\begin_inset Formula 
\[
\tilde{f}(r,\theta)=f(r,\theta+\alpha)\quad\Longrightarrow\quad\tilde{c}_{pq}=e^{-i(p-q)\alpha}\cdot c_{pq}.
\]

\end_inset

Výraz 
\begin_inset Formula $e^{-i(p-q)\alpha}$
\end_inset

 vyjadřuje otočení 
\begin_inset Formula $c_{pq}$
\end_inset

 v komplexní rovině, tzn.
 fáze je posunutá o 
\begin_inset Formula $(p-q)\alpha$
\end_inset

 a amplituda se nemění.
 Následující věta shrnuje jak konstruovat invarianty na rotaci.
\end_layout

\begin_layout Theorem
Nechť 
\begin_inset Formula $n\geq1$
\end_inset

 a dále 
\begin_inset Formula $k_{i}$
\end_inset

, 
\begin_inset Formula $p_{i}$
\end_inset

 a 
\begin_inset Formula $q_{i}$
\end_inset

, 
\begin_inset Formula $i\in\hat{n}$
\end_inset

 jsou nezáporná celá čísla splňující vztah 
\begin_inset Formula 
\[
\stackrel[j=0]{n}{\sum}k_{j}\left(p_{j}-q_{j}\right)=0.
\]

\end_inset

Potom invariant vůči rotaci má tvar 
\begin_inset Formula 
\[
I=\stackrel[j=1]{n}{\prod}c_{p_{j}q_{j}}^{k_{j}}.
\]

\end_inset


\end_layout

\begin_layout Standard
Předchozí věta říká, že zřetězíme invarianty tak, aby se jejich otočení
 v komplexní rovině vzájemně vyrušila (součet otočení na jednu i druhou
 stranu je 0), a tím získáme rotační invariant, tj.
\begin_inset Formula 
\[
\tilde{I}=\stackrel[j=1]{n}{\prod}\tilde{c}^{k_{j}}{}_{p_{j}q_{j}}=\stackrel[j=1]{n}{\prod}e^{-i\left(p_{j}-q_{j}\right)k_{j}\alpha}\cdot c_{p_{j}q_{j}}^{k_{j}}=e^{-i\alpha\underset{=0}{\underbrace{\stackrel[j=0]{n}{\sum}k_{j}\left(p_{j}-q_{j}\right)}}}\stackrel[j=1]{n}{\prod}\cdot c_{p_{j}q_{j}}^{k_{j}}=I.
\]

\end_inset

Těchto invariantů je nekonečně mnoho, ale spoustu z nich je závislých.
 Vlastností součinových invariantů je, že pokud je jeden z momentů v součinu
 blízký nule, tak celý součin je blízký nule.
 Toto může být velký problém, např.
 pro symetrické objekty je hodně momentů nulových.
\end_layout

\begin_layout Standard
Nyní se zabývejme tím jak vybrat bázi invariantů.
 Chceme, aby báze byla nezávislou a úplnou množinu invariantů.
 V tomto kontextu rozumíme úplností to, že jsme schopni zpětně spočítat
 všechny komplexní momenty až na jeden (jeden stupeň volnosti), a nezávislostí
 rozumíme to, že neexistuje invariant, který by byl funkcí ostatních.
 Následující věta shrnuje jak konstruovat bázi invariantů.
\end_layout

\begin_layout Theorem
Nechť máme komplexní momenty až do řádu 
\begin_inset Formula $r\geq2$
\end_inset

.
 Bázi 
\begin_inset Formula $\mathcal{B}$
\end_inset

 rotačních invariantů až do řádu 
\begin_inset Formula $r$
\end_inset

 lze konstruovat následujícím způsobem
\begin_inset Formula 
\[
\left(\forall p,q:\;p\geq q\;\wedge\;p+q\leq r\right)\left(\Phi(p,q)=c_{pq}c_{q_{o}p_{o}}^{p-q}\right),
\]

\end_inset

kde 
\begin_inset Formula $p_{0}$
\end_inset

, 
\begin_inset Formula $q_{0}$
\end_inset

 jsou libovolné indexy splňující
\begin_inset Formula 
\begin{align*}
c_{p_{0}q_{0}} & \neq0, & p_{0}-q_{0} & =1, & p_{0}+q_{0} & \leq r.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Důkaz, že se jedná o bázi invariantů, plyne z nezávislosti momentů 
\begin_inset Formula $c_{pq}$
\end_inset

.
 V každém invariantu se vyskytuje jiný moment, což znamená, že jsou invarianty
 nezávislé.
 Problém nastává u důkazu úplnosti, tzv.
 
\emph on
Inverse problem
\emph default
.
 Orientace obrazu z těchto invariantů nemůže být obecně získána.
 Proto zavádíme podmínku 
\begin_inset Formula $c_{p_{0}q_{0}}\in\mathbb{R}^{+}$
\end_inset

, čímž ztratíme jeden stupeň volnosti.
 Díky této podmínce a vlastnosti komplexních momentů 
\begin_inset Formula $c_{qp}=c_{pq}^{*}$
\end_inset

 platí 
\begin_inset Formula $c_{q_{0}p_{0}}=c_{p_{0}q_{0}}^{*}=c_{p_{0}q_{0}}$
\end_inset

 a celkem dostáváme
\begin_inset Formula 
\begin{align*}
\Phi(p_{0},q_{0})=c_{p_{0}q_{0}}.c_{q_{0}p_{0}}=c_{p_{0}q_{0}}^{2} & \quad\Longrightarrow\quad c_{p_{0}q_{0}}=\sqrt{\Phi(p_{0},q_{0})}, & c_{pq} & =\frac{\Phi(p,q)}{c_{q_{0}p_{0}}^{p-q}}.
\end{align*}

\end_inset


\end_layout

\begin_layout Example
Příklad báze třetího řádu, 
\begin_inset Formula $p_{0}=2$
\end_inset

, 
\begin_inset Formula $q_{0}=1$
\end_inset

 obsahující 6 různých reálných invariantů:
\begin_inset Formula 
\begin{align*}
\Phi(1,1) & =c_{11}\in\mathbb{R}, & \Phi(2,0) & =c_{20}c_{12}^{2}\in\mathbb{C},\\
\Phi(2,1) & =c_{21}c_{1,2}\in\mathbb{R}, & \Phi(3,0) & =c_{30}c_{12}^{3}\in\mathbb{C}.
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Pseudoinvarianty
\end_layout

\begin_layout Standard
Zabývejme se tím, jak se chovají rotační invarianty při zrcadlení obrazu.
 Zrcadlení obrazu odpovídá platnosti vztahu 
\begin_inset Formula $\overline{f}(x,y)=f(x,-y)$
\end_inset

, z čehož získáváme
\begin_inset Formula 
\begin{align*}
\overline{c}_{pq} & =c_{pq}^{*}, & \overline{\Phi(p,q)} & =\overline{c_{pq}c_{p_{0}q_{0}}^{p-q}}=c_{pq}^{*}\cdot(c_{q_{0}p_{0}}^{*})^{p-q}=\Phi(p,q)^{*}.
\end{align*}

\end_inset

Invarianty, který jsou reálnými částmi 
\begin_inset Formula $\Phi$
\end_inset

, jsou invarianty vůči zrcadlení.
 Naopak invarianty, které jsou imaginárními částmi 
\begin_inset Formula $\Phi$
\end_inset

, mění při zrcadlení znaménko, a tedy invarianty vůči zrcadlení nejsou.
 Invariance na zrcadlení ovšem může být v některých případech na škodu.
\end_layout

\begin_layout Subsection
Normalizace na rotaci
\end_layout

\begin_layout Standard
Normalizace pomocí momentů spočívá v předdefinování některých momentů.
 Většinou se používají momenty nižších řádů, protože jsou stabilnější a
 méně náchylné na šum.
 V případě invariantů na posun je normalizace jednoduchá a spočívá v posunutí
 těžiště do počátku souřadnic.
 Toho docílíme normalizací momentů prvního řádu na 0, tzn.
 volbou 
\begin_inset Formula $\tilde{m}_{10}=\tilde{m}_{01}=0$
\end_inset

.
 Obdobně lze postupovat v případě invariantů na změnu měřítka.
 Budeme chtít, aby byl nultý moment roven 1, tzn.
 
\begin_inset Formula $\tilde{m}_{00}=1$
\end_inset

.
 Pokud budeme uvažovat změnu měřítka danou transformací 
\begin_inset Formula $\tilde{x}=sx$
\end_inset

, 
\begin_inset Formula $\tilde{y}=sy$
\end_inset

, tak lze snadno ukázat, že platí 
\begin_inset Formula $\tilde{m}_{00}=s^{2}m_{00}$
\end_inset

 a navíc pro 
\begin_inset Formula $m_{00}\neq0$
\end_inset

 vždy takové 
\begin_inset Formula $s$
\end_inset

 existuje.
\end_layout

\begin_layout Note
Pokud moment použijeme jako normalizační podmínku, tak už tento invariant
 nelze použít pro rozpoznávání, protože má pro všechny objekty stejnou hodnotu.
\end_layout

\begin_layout Standard
Při normalizaci na rotaci využijeme podobnou myšlenku, jako v sekci 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:PCA"

\end_inset

 o metodě PCT.
 Předpokládejme, že používáme invarianty normalizované na posun a změnu
 měřítka, tzn.
 předpokládáme nulové střední hodnoty 
\begin_inset Formula $\tilde{\mu}_{10}=\tilde{\mu}_{01}=0$
\end_inset

 a 
\begin_inset Formula $\tilde{\mu}_{00}=1$
\end_inset

.
 Budeme požadovat, aby byl moment druhého řádu 
\begin_inset Formula $\tilde{\mu}_{11}$
\end_inset

 nulový.
 Tento moment odpovídá v případě nulových středních hodnot kovarianci.
 Myšlenka je tedy taková, že zvolíme takovou souřadnou soustavu, ve které
 platí 
\begin_inset Formula $\tilde{\mu}_{11}=0$
\end_inset

.
 Vezmeme momentovou matici 
\begin_inset Formula 
\[
\begin{pmatrix}\mu_{20} & \mu_{11}\\
\mu_{11} & \mu_{02}
\end{pmatrix}
\]

\end_inset

a budeme jí diagonalizovat, viz sekce 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:PCA"

\end_inset

 o PCT.
 Protože tato matice je symetrická, můžeme sestavit OG bázi danou vlastními
 vektory této matice a pomocí ní provést diagonalizaci.
 Maticově můžeme normalizaci popsat následovně
\begin_inset Formula 
\begin{align*}
\mathbb{M} & \text{=}\begin{pmatrix}\mu_{20} & \mu_{11}\\
\mu_{11} & \mu_{02}
\end{pmatrix}, & \tilde{\mathbb{M}} & \text{=}\mathbb{G}^{T}\mathbb{M}\mathbb{G}=\begin{pmatrix}\lambda_{1} & 0\\
0 & \lambda_{2}
\end{pmatrix}=\begin{pmatrix}\tilde{\mu}_{20} & 0\\
0 & \tilde{\mu}_{02}
\end{pmatrix},
\end{align*}

\end_inset

což znamená, že řešíme úlohu na vlastní čísla ve tvaru 
\begin_inset Formula $|\mathbb{M}-\lambda\mathbb{I}|=0$
\end_inset

.
 Spočteme tedy vlastní vektory momentové matice a vezmeme větší z nich.
 Porovnáme tento vektor s osou 
\begin_inset Formula $x$
\end_inset

, abychom měli větší rozptyl ve směru 
\begin_inset Formula $x$
\end_inset

.
 Celkem získáme úhel, o který musíme rotovat obraz 
\begin_inset Formula 
\[
\tan2\theta=\frac{-2\mu_{11}}{\mu_{20}-\mu_{02}}.
\]

\end_inset

Tento úhel ovšem není jednoznačný (mohou to být 4 způsoby natočení obrazu).
 Rotací totiž obraz srovnáme pouze podle hlavních os souřadné soustavy,
 ale už neřešíme orientaci na těchto osách.
 Musíme proto dodefinovat normalizační podmínky, abychom měli jednoznačnou
 normalizaci 
\begin_inset Formula $\tilde{\mu}_{20}\geq\tilde{\mu}_{02}$
\end_inset

 a 
\begin_inset Formula $\tilde{\mu}_{30}\geq0$
\end_inset

.
 První podmínka zaručuje, že má obraz větší rozptyl v ose 
\begin_inset Formula $\tilde{x}$
\end_inset

, a druhá, že má obrázek víc hmoty vpravo od těžiště.
 Tento způsob normalizace se nazývá 
\emph on
principal axis normalization
\emph default
.
 
\end_layout

\begin_layout Note
V posledních dvou podmínkách používáme pro normalizaci momenty 
\begin_inset Formula $\tilde{\mu}_{20}$
\end_inset

, 
\begin_inset Formula $\tilde{\mu}_{02}$
\end_inset

 a 
\begin_inset Formula $\tilde{\mu}_{30}$
\end_inset

, ale nepředepisujeme přesnou hodnotu, a tak je lze použít i pro rozpoznávání.
 
\end_layout

\begin_layout Subsubsection
Referenční elipsa objektu
\end_layout

\begin_layout Standard
Referenční elipsu objektu definujeme jako elipsu, která má stejné druhé
 momenty jako objekt.
 Touto elipsou můžeme objekt popsat a normalizaci provést pro elipsu.
 Normalizace spočívá v tom, že elipsu dostaneme do polohy, kdy její hlavní
 osa splývá s osou 
\begin_inset Formula $x$
\end_inset

 a vedlejší osa s osou 
\begin_inset Formula $y$
\end_inset

.
 Poté platí vztahy
\begin_inset Formula 
\begin{align*}
\tilde{\mu}_{20} & =\frac{\pi a^{3}b}{4}, & \tilde{\mu}_{02} & =\frac{\pi ab^{3}}{4},
\end{align*}

\end_inset

kde 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

, je hlavní resp.
 vedlejší osa.
\end_layout

\begin_layout Subsubsection
Normalizace pomocí komplexních momentů
\end_layout

\begin_layout Standard
Předpokládejme, že komplexní moment 
\begin_inset Formula $c_{pq}$
\end_inset

 je reálný, kladný.
 Poté pro úhel otočení platí vztah 
\begin_inset Formula 
\[
\alpha=\frac{1}{p-q}\cdot\arctan\left(\frac{\text{Im}\left(c_{pq}\right)}{\text{Re}\left(c_{pq}\right)}\right).
\]

\end_inset

 Pokud platí, že 
\begin_inset Formula $p-q>1$
\end_inset

, pak při jedné otočce obrazu proběhne 
\begin_inset Formula $p-q$
\end_inset

 otoček v bázi momentů.
 Omezíme se tedy na případ 
\begin_inset Formula $p-q=1$
\end_inset

, kdy jedna otočka obrazu odpovídá jedné otočce v bázi momentů a normalizace
 je v takovém případě jednoznačná.
 Pokud zvolíme 
\begin_inset Formula $p=2$
\end_inset

, a 
\begin_inset Formula $q=0$
\end_inset

, tak normalizace vede na tradiční normalizaci 
\emph on
principal axis normalization
\emph default

\begin_inset Formula 
\[
c_{20}=m_{20}-m_{02}+2im_{11}.
\]

\end_inset

Pro 
\begin_inset Formula $c_{20}>0$
\end_inset

 je ovšem normalizace pořád nejednoznačná, např.
 nemůžeme rozlišit, zda je objekt orientován na ose 
\begin_inset Formula $x$
\end_inset

 vpravo nebo vlevo.
 Pokud vezmeme 
\begin_inset Formula $c_{21}>0$
\end_inset

 tak už je to jednoznačné.
\end_layout

\begin_layout Note
Ve skutečnosti není nutné a často ani žádoucí obrazy normalizovat, protože
 transformace vede na nepřesnosti a je pomalá.
 Stačí spočítat transformační rovnice a poté pouze transformovat momenty
 spočítané v nenormalizované soustavě.
 Argumentem proti normalizaci je, že pokud uděláme chybu při výpočtu normalizačn
ích podmínek, tak se tato chyba propaguje do všeho dál.
 Z tohoto důvodu se častěji počítají přímé invarianty.
 Pokud máme požadavek, že chceme úplný systém invariantů, je situace jiná.
 V takovém případě je jednodušší spočítat normalizované invarianty, protože
 ty už rovnou tvoří úplný a nezávislý systém.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series bold
\emph on
Užití TRS invariantů v praxi
\end_layout

\end_inset

 V podstatě vždycky se používají pro binární obrazy, např.
 rozpoznávání objektů podle kontur.
 Dále se používají pro registraci obrazu...
\end_layout

\begin_layout Subsection
Rotační symetrie
\end_layout

\begin_layout Definition
Objekt má 
\begin_inset Formula $N$
\end_inset

-fold rotační symetrie, pokud je identický s původním objektem při rotaci
 o 
\begin_inset Formula $\frac{2\pi j}{N}$
\end_inset

 pro všechna 
\begin_inset Formula $j\in\hat{N}$
\end_inset

.
\end_layout

\begin_layout Note
Každý osově symetrický objekt s 
\begin_inset Formula $S$
\end_inset

 osami souměrnosti je 
\begin_inset Formula $N$
\end_inset

-fold symetrický pro 
\begin_inset Formula $N=S$
\end_inset

.
 Naopak, pokud je objekt 
\begin_inset Formula $N$
\end_inset

-fold symetrický, tak je buď osově symetrický s 
\begin_inset Formula $S=N$
\end_inset

 osami souměrnosti, nebo není osově symetrický vůbec.
\end_layout

\begin_layout Standard
Z vlastností 
\begin_inset Formula $N$
\end_inset

-fold symetrických objektů plyne vztah pro cirkulární momenty 
\begin_inset Formula 
\[
\tilde{c}_{pq}=e^{-(p-q)\frac{2\pi}{N}}\cdot c_{pq}\overset{!}{=}c_{pq}.
\]

\end_inset

Aby tato rovnost platila, tak buď musí platit 
\begin_inset Formula $c_{pq}=0$
\end_inset

 nebo 
\begin_inset Formula 
\[
\frac{p-q}{N}\in\mathbb{Z}\quad\Longrightarrow\quad e^{-(p-q)\frac{2\pi}{N}}=1.
\]

\end_inset

Tím dostáváme snadnou podmínku na testování, zda je daný moment nulový.
 Čím větší je 
\begin_inset Formula $N$
\end_inset

, tím méně je netriviálních invariantů.
 Pro 
\begin_inset Formula $N=\infty$
\end_inset

 je pouze jeden netriviální moment, a to 
\begin_inset Formula $c_{pp}\neq0$
\end_inset

.
 Je důležité používat pouze netriviální momenty, a to z důvodů konstrukce
 rotačních invariantů, viz dříve.
 Následující věta shrnuje postup, jak se při vytváření báze invariantů vyhnout
 nulovým momentům pro 
\begin_inset Formula $N$
\end_inset

-fold symetrické objekty.
\end_layout

\begin_layout Theorem
Nechť máme komplexní momenty až do řádu 
\begin_inset Formula $r\geq2$
\end_inset

.
 Bázi 
\begin_inset Formula $\mathcal{B}$
\end_inset

 rotačních invariantů až do řádu 
\begin_inset Formula $r$
\end_inset

 pro 
\begin_inset Formula $N$
\end_inset

-fold symetrické objekty lze konstruovat následujícím způsobem
\begin_inset Formula 
\[
\left(\forall p,q:\;p\geq q\;\wedge\;p+q\leq r\;\wedge\;k=\frac{p-q}{N}\in\mathbb{Z}\right)\left(\Phi(p,q)=c_{pq}c_{q_{o}p_{o}}^{k}\right),
\]

\end_inset

kde 
\begin_inset Formula $p_{0}$
\end_inset

, 
\begin_inset Formula $q_{0}$
\end_inset

 jsou libovolné indexy splňující
\begin_inset Formula 
\begin{align*}
c_{p_{0}q_{0}} & \neq0, & p_{0}-q_{0} & =N, & p_{0}+q_{0} & \leq r.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Pokud bychom uvažovali nesymetrické objekty, tak v předchozí větě představuje
 člen 
\begin_inset Formula 
\[
c_{q_{0}p_{0}}^{\frac{p-q}{N}}
\]

\end_inset

 
\begin_inset Formula $N$
\end_inset

-tou odmocninu z komplexního čísla.
 Jenže nevíme kterou, protože jich je 
\begin_inset Formula $N$
\end_inset

, a z tohoto důvodu se tento způsob tvorby báze pro nesymetrické objekty
 nepoužívá.
 Pokud je 
\begin_inset Formula $\frac{p-q}{N}\in\mathbb{Z}$
\end_inset

, tak uvedený člen není odmocnina.
 Je důležité volit správně příznaky s přihlédnutím k 
\begin_inset Formula $N$
\end_inset

-fold symetrickým objektům, tzn.
 pro různé typy objektů se hodí jiné volby indexů 
\begin_inset Formula $p_{0}$
\end_inset

 a 
\begin_inset Formula $q_{0}$
\end_inset

.
\end_layout

\begin_layout Section
Invarianty na afinní transformaci
\end_layout

\begin_layout Standard
Afinní transformace je dána transformačními vztahy
\begin_inset Formula 
\begin{align*}
u & =a_{0}+a_{1}x+a_{2}y,\\
v & =b_{0}+b_{1}x+b_{2}y.
\end{align*}

\end_inset

Vlastností afinní transformace je, že zachovává rovnoběžnost a také je dobrou
 aproximací perspektivní projekce v případě hodně vzdálených malých objektů.
 Perspektivní transformace popisuje projekci 3D objektů na 2D plochu centrální
 kamerou.
 Protože invarianty na perspektivní projekci neexistují pro konečnou ani
 nekonečnou množinu momentů (formálně existují jako nekonečná řada momentů
 kladných i záporných indexů), tak tuto projekci nelze použít.
 Z tohoto důvodu je afinní transformace důležitá.
\end_layout

\begin_layout Subsection
Grafová metoda
\end_layout

\begin_layout Standard
Uvažujme obraz 
\begin_inset Formula $f\left(x,y\right)$
\end_inset

 a dva libovolné body 
\begin_inset Formula $\left(x_{1},y_{1}\right)$
\end_inset

, 
\begin_inset Formula $\left(x_{2},y_{2}\right)$
\end_inset

 z nosiče tohoto obrazu.
 Definujme tzv.
 křížový součin (
\emph on
cross-product
\emph default
) vztahem
\begin_inset Formula 
\[
T_{12}=x_{1}y_{2}-x_{2}y_{1}.
\]

\end_inset

Po působení afinní transformací získáváme vztah 
\begin_inset Formula $\tilde{T}_{12}=J\cdot T_{12},$
\end_inset

 kde 
\begin_inset Formula $J$
\end_inset

 je Jakobián transformace.
 Hlavní myšlenka generování afinních invariantů pomocí grafové metody je
 následující.
 Předpokládejme několik bodů a integrujme jejich křížové součiny přes nosič
 obrazu 
\begin_inset Formula $f$
\end_inset

.
 Tyto integrály lze vyjádřit pomocí momentů a pokud se zbavíme Jakobiánu
 transformace vhodnou normalizací, získáme afinní invarianty.
 Předpokládejme 
\begin_inset Formula $N\geq2$
\end_inset

 a definujme funkcionál 
\begin_inset Formula $I$
\end_inset

 vztahem 
\begin_inset Formula 
\[
I(f)=\int_{\mathbb{R}^{2N}}\prod_{k,j=1}^{N}T_{kj}^{n_{kj}}\cdot\prod_{i=1}^{N}f(x_{i},y_{i})\text{d}x_{i}\text{d}y_{i},
\]

\end_inset

kde 
\begin_inset Formula $n_{kj}$
\end_inset

 je nezáporné celé číslo.
 Stačí uvažovat pouze 
\begin_inset Formula $j>k$
\end_inset

, protože pro křížové součiny platí 
\begin_inset Formula $T_{kj}=-T_{jk}$
\end_inset

 a 
\begin_inset Formula $T_{kk}=0$
\end_inset

.
 Pokud na tento funkcionál budeme působit afinní transformací, získáme 
\begin_inset Formula 
\begin{align*}
\tilde{I} & =J^{\omega}|J|^{N}I(f), & \omega & =\sum_{k,j}n_{k,j},
\end{align*}

\end_inset

kde člen 
\begin_inset Formula $\omega$
\end_inset

 nazýváme vahou invariantu a 
\begin_inset Formula $N$
\end_inset

 nazýváme stupněm invariantu.
 Pokud funkcionál 
\begin_inset Formula $I$
\end_inset

 normalizujeme pomocí momentu nultého řádu 
\begin_inset Formula $\mu_{00}^{\omega+N}$
\end_inset

, získáme vztah
\begin_inset Formula 
\[
\tilde{\Biggl(\dfrac{I(f)}{\mu_{00}^{\omega+N}}\Biggr)}=(\textnormal{sgn}\,\delta)^{\omega}\Biggl(\dfrac{I(f)}{\mu_{00}^{\omega+N}}\Biggr).
\]

\end_inset

Pokud je 
\begin_inset Formula $\omega$
\end_inset

 sudé, jedná se o pravé invarianty, v opačném případě se jedná o pseudoinvariant
y.
 Pokud má daná transformace záporný Jakobián, tak získáme převrácený obraz,
 ale většinou bývá Jakobián kladný.
 Uvedené invarianty jsou nulové pro objekty s axiální symetrií.
\end_layout

\begin_layout Standard
Myšlenka předchozí metody má analogii v teorii grafů.
 Každý invariant generovaný uvedeným vztahem lze vyjádřit pomocí grafu,
 kde body 
\begin_inset Formula $(x_{k},y_{k})$
\end_inset

 představují vrcholy grafu a křížový součin 
\begin_inset Formula $T_{kj}$
\end_inset

 představuje hranu grafu.
 Pokud je 
\begin_inset Formula $n_{kj}>1$
\end_inset

, tak příslušný člen 
\begin_inset Formula $T_{kj}^{n_{kj}}$
\end_inset

 představuje 
\begin_inset Formula $n_{kj}$
\end_inset

 hran spojujících 
\begin_inset Formula $k$
\end_inset

-tý a 
\begin_inset Formula $j$
\end_inset

-tý vrchol.
 Celkem tedy víme, že počet uzlů grafu odpovídá stupni invariantu 
\begin_inset Formula $N$
\end_inset

 a celkový počet hran grafu je roven váze invariantu 
\begin_inset Formula $\omega$
\end_inset

.
\end_layout

\begin_layout Example
Nechť 
\begin_inset Formula $N=2$
\end_inset

 a 
\begin_inset Formula $n_{12}=2$
\end_inset

, potom 
\begin_inset Formula 
\[
I\left(f\right)=\int_{\mathbb{R}^{4}}\left(x_{1}y_{2}-x_{2}y_{1}\right)^{2}\cdot f(x_{1},y_{1})f(x_{2},y_{2})\text{d}x_{1}\text{d}y_{1}\text{d}x_{2}\text{d}y_{2}=2\left(m_{20}m_{02}-m_{11}^{2}\right).
\]

\end_inset

Obdobně pro 
\begin_inset Formula $N=3$
\end_inset

 a 
\begin_inset Formula $n_{12}=2$
\end_inset

, 
\begin_inset Formula $n_{13}=2$
\end_inset

, 
\begin_inset Formula $n_{23}=0$
\end_inset

, získáváme
\begin_inset Formula 
\begin{align*}
I\left(f\right) & =\int_{\mathbb{R}^{6}}\left(x_{1}y_{2}-x_{2}y_{1}\right)^{2}\left(x_{1}y_{3}-x_{3}y_{1}\right)^{2}\cdot f(x_{1},y_{1})f(x_{2},y_{2})f(x_{3},y_{3})\text{d}x_{1}\text{d}y_{1}\text{d}x_{2}\text{d}y_{2}\text{d}x_{3}\text{d}y_{3}=\\
 & =m_{20}^{2}m_{04}-4m_{20}m_{11}m_{13}+2m_{20}m_{02}m_{22}+4m_{11}^{2}m_{22}-4m_{11}m_{02}m_{31}+m_{02}^{2}m_{40}.
\end{align*}

\end_inset

Vyjádření těchto invariantů pomocí grafů je uvedeno na obrázku 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Afin_graf"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Affin_graf.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Grafy odpovídající invariantům z uvedených příkladů.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Afin_graf"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Note
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series bold
\emph on
Závislosti invariantů
\end_layout

\end_inset

 Když hledáme invarianty potřebujeme, aby byly pokud možno nezávislé.
 Je tedy třeba z množiny všech invariantů odstranit invarianty triviální
 (tzn.
 nulové nebo identické s jinými invarianty), reducibilní (tzn.
 invarianty, které jsou produktem nebo lineární kombinací jiných invariantů)
 a irreducibilní (tzn.
 invarianty tvořené polynomy nebo polynomy produktů jiných invariantů).
 Pokud postupně odstraňujeme invarianty podle uvedených vlastností, tzn.
 nejdřív triviální, pak reducibilní a nakonec irreducibilní, tak nám zbude
 množina nezávislých invariantů.
 Nejtěžším krokem je odstranění irreducibilních invariantů.
 Odstraněním uvedených závislostí přijdeme o drtivou většinu invariantů.
\end_layout

\begin_layout Subsection
Afinní invarianty skrz normalizaci
\end_layout

\begin_layout Standard
Je mnoho možností jak určit normalizační podmínky.
 Abychom mohli získat invarianty na afinní transformaci pomocí normalizace,
 musíme provést dekompozici afinní transformace.
 Existuje několik možných dekompozic, např.
 můžeme afinní transformaci popsat jako následující řadu transformaci:
\end_layout

\begin_layout Enumerate
horizontální a vertikální translace: 
\begin_inset Formula $m_{10}=m_{01}=0$
\end_inset

,
\end_layout

\begin_layout Enumerate
změna měřítka: 
\begin_inset Formula $c_{00}=0$
\end_inset

,
\end_layout

\begin_layout Enumerate
první rotace: 
\begin_inset Formula $c_{20}=\mathbb{R}^{+}$
\end_inset

,
\end_layout

\begin_layout Enumerate
stretching: 
\begin_inset Formula $c_{20}=m_{20}-m_{02}=0\;\Longleftrightarrow\;m_{20}=m_{02}\;\Longleftrightarrow\;\mu_{20}=\mu_{02}$
\end_inset

,
\end_layout

\begin_layout Enumerate
druhá rotace: 
\begin_inset Formula $c_{21}=\mathbb{R}^{+}$
\end_inset

, tato normalizace je nejtěžší, protože už nemáme momenty malých řádů a
 používáme moment 3.
 řádu, který je celkem nestabilní,
\end_layout

\begin_layout Enumerate
zrcadlení.
 
\end_layout

\begin_layout Standard
V praxi pro normalizaci druhé rotace hledáme moment 
\begin_inset Formula $c_{ij}$
\end_inset

, který má co nejmenší řád a je prokazatelně nulový.
\end_layout

\begin_layout Section
Invarianty na elastické transformace
\end_layout

\begin_layout Standard
Jako elastickou transformaci si můžeme představit např.
 text na nerovném povrchu, rybí oko, atp.
 Formálně tyto transformace můžeme zapsat následovně
\begin_inset Formula 
\[
\tilde{f}\left(x,y\right)=f\left(r\left(x,y\right)\right),
\]

\end_inset

kde 
\begin_inset Formula $r\left(x,y\right)$
\end_inset

 je polynom řádu většího než jedna.
 Uvažujme nyní transformaci ve tvaru 
\begin_inset Formula $\tilde{x}=ax^{2}$
\end_inset

, potom
\begin_inset Formula 
\[
\tilde{m}_{p}=\int\left(\tilde{x}\right)^{p}f\left(\tilde{x}\right)\textnormal{d}\tilde{x}=\left|\begin{array}{c}
\tilde{x}=ax^{2}\\
\textnormal{d}\tilde{x}=2ax\textnormal{d}x
\end{array}\right|=\int\left(ax^{2}\right)^{p}f\left(x\right)2ax\textnormal{d}x=2a^{p+1}\int x^{2p+1}f\left(x\right)\textnormal{d}x=2a^{p+1}m_{2p+1},
\]

\end_inset

tzn.
 moment se transformuje na moment vyššího řádu a to by 
\begin_inset Quotes gld
\end_inset

slušný
\begin_inset Quotes grd
\end_inset

 moment dělat neměl.
 Vždy by mělo docházet k transformaci na momenty stejného nebo nižšího řádu.
 Protože tomu tak v uvedeném případě není, nemůže existovat invariant z
 konečného počtu momentů.
\end_layout

\begin_layout Section
Invarianty na konvoluci
\end_layout

\begin_layout Standard
Předpokládejme deformaci obrazu konvolucí, tzn.
 deformaci ve tvaru
\begin_inset Formula 
\[
g\left(x,y\right)=\left(f\ast h\right)\left(x,y\right),
\]

\end_inset

kde 
\begin_inset Formula $h\left(x,y\right)$
\end_inset

 je tzv.
 
\emph on
point spread function
\emph default
 (PSF) systému, viz kapitola 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Restaurace-obrazu"

\end_inset

.
 Budeme hledat invarianty na konvoluci, tzn.
 
\begin_inset Formula 
\[
I\left(f\ast h\right)=I\left(f\right),
\]

\end_inset

pro libovolnou středově symetrickou PSF funkci 
\begin_inset Formula $h$
\end_inset

, tzn.
 
\begin_inset Formula $2$
\end_inset

-fold symetrickou.
 Předpoklad středově symetrické PSF funkce není nijak omezující, protože
 běžné senzory a optické systémy disponují středovou symetrií.
 Dále po PSF požadujeme, aby měla jednotkový integrál.
 Tyto invarianty jsou občas nazývány invarianty na rozmazání (
\emph on
blur invariants
\emph default
) a to z toho důvodu, že obvyklé PSF funkce se chovají jako 
\emph on
low-pass
\emph default
 filtr.
 
\end_layout

\begin_layout Standard
Pro komplexní momenty ( pro geometrické momenty platí stejný vztah) deformovanéh
o obrazu platí 
\begin_inset Formula 
\[
c_{pq}^{\left(g\right)}=\stackrel[k=0]{p}{\sum}\stackrel[j=0]{q}{\sum}\binom{p}{k}\binom{q}{j}c_{kj}^{\left(h\right)}c_{p-k,q-j}^{\left(f\right)}.
\]

\end_inset

Otázkou tedy je, jak eliminovat člen 
\begin_inset Formula $c_{kj}^{\left(h\right)}$
\end_inset

.
 Postup jak tento člen eliminovat je popsán v následující větě.
\end_layout

\begin_layout Theorem
Nechť je funkcionál 
\begin_inset Formula $c:L_{1}\left(\mathbb{R}^{2}\right)\times\mathbb{N}_{0}\times\mathbb{N}_{0}\rightarrow\mathbb{R}$
\end_inset

 definován pro 
\begin_inset Formula $\left(p+q\right)$
\end_inset

 liché
\begin_inset Formula 
\[
c_{\left(p,q\right)}^{\left(f\right)}=\mu_{pq}^{\left(f\right)}-\frac{1}{\mu_{00}^{\left(f\right)}}\stackrel[n=0]{p}{\sum}\stackrel[\underset{0<n+m<p+q}{m=0}]{q}{\sum}\binom{p}{n}\,\binom{q}{m}\,c_{\left(p-n,q-m\right)}^{\left(f\right)}\cdot\mu_{nm}^{\left(f\right)},
\]

\end_inset

a pro 
\begin_inset Formula $\left(p+q\right)$
\end_inset

 sudé 
\begin_inset Formula $c_{\left(p,q\right)}^{\left(f\right)}=0$
\end_inset

.
 Potom pro libovolnou funkci 
\begin_inset Formula $f$
\end_inset

, nezáporná celá čísla 
\begin_inset Formula $p$
\end_inset

, 
\begin_inset Formula $q$
\end_inset

, a středově symetrickou PSF funkci 
\begin_inset Formula $h$
\end_inset

 platí
\begin_inset Formula 
\[
c_{\left(p,q\right)}^{\left(f*h\right)}=c_{\left(p,q\right)}^{\left(f\right)}.
\]

\end_inset


\end_layout

\begin_layout Subsection
Invarianty na konvoluci v FT doméně
\end_layout

\begin_layout Standard
Budeme se zabývat konstrukcí invariantů pomocí projekčního operátoru 
\begin_inset Formula $P_{N}$
\end_inset

, který je definovaný vztahem
\begin_inset Formula 
\[
\left(P_{N}f\right)\left(r,\theta\right)=\frac{1}{N}\stackrel[j=1]{N}{\sum}f\left(r,\theta+\alpha_{j}\right),
\]

\end_inset

tzn.
 jedná se o součet 
\begin_inset Formula $N$
\end_inset

 otočení daného obrazu.
 Přejděme do frekvenční oblasti pomocí Fourierovy transformace
\begin_inset Formula 
\[
g\left(x,y\right)=\left(f\ast h\right)\left(x,y\right)\quad\Longrightarrow\quad G=F\cdot H,
\]

\end_inset

kde 
\begin_inset Formula $G=\mathcal{F}\left(g\right)\left(u,v\right)$
\end_inset

, 
\begin_inset Formula $F=\mathcal{F}\left(f\right)\left(u,v\right)$
\end_inset

 a 
\begin_inset Formula $H=\mathcal{F}\left(h\right)\left(u,v\right)$
\end_inset

.
 Potom jako invariant na konvoluci můžeme ve frekvenční oblasti volit
\begin_inset Formula 
\[
I_{N}^{\left(f\right)}\left(u,v\right)=\frac{\mathcal{F}\left(f\right)\left(u,v\right)}{\mathcal{F}\left(P_{N}f\right)\left(u,v\right)},
\]

\end_inset

což plyne z následujících rovností
\begin_inset Formula 
\[
I_{N}^{\left(f\ast h\right)}\left(u,v\right)=\frac{\mathcal{F}\left(f\ast h\right)\left(u,v\right)}{\mathcal{F}\left(P_{N}\left(f\ast h\right)\right)\left(u,v\right)}=\left|\begin{array}{c}
\mathcal{F}\left(f\ast h\right)=\mathcal{F}\left(f\right)\mathcal{F}\left(h\right)\\
P_{N}\left(f\ast h\right)=\left(P_{N}f\right)\ast h
\end{array}\right|=\frac{\mathcal{F}\left(f\right)\left(u,v\right)\mathcal{F}\left(h\right)\left(u,v\right)}{\mathcal{F}\left(P_{N}f\right)\left(u,v\right)\mathcal{F}\left(h\right)\left(u,v\right)}=I_{N}^{\left(f\right)}\left(u,v\right).
\]

\end_inset

Ve jmenovateli vztahu pro invariant mohou být nuly, ale protože předpokládáme,
 že jsme na prostoru funkcí s omezeným nosičem (
\emph on
image space
\emph default
), tak pro takové funkce má Fourierova transformace neomezený nosič a může
 být nulová pouze na množině míry nula.
\end_layout

\begin_layout Section
Ortogonální momenty
\end_layout

\begin_layout Standard
Uvažujme množinu ortogonálních polynomu a označme ji 
\begin_inset Formula $\left\{ \mathcal{P}_{pq}\left(x,y\right)\right\} $
\end_inset

.
 Potom ortogonální momenty definujeme klasicky
\begin_inset Formula 
\[
v_{pq}=\underset{\Omega}{\int\int}\mathcal{P}_{pq}\left(x,y\right)f\left(x,y\right)\textnormal{d}x\textnormal{d}y.
\]

\end_inset

Motivací pro zavedení ortogonálních momentů je stabilní výpočet pomocí rekurentn
ích formulí a jednodušší a stabilnější zpětná rekonstrukce obrazu.
 Rozlišujeme dva typy ortogonality: na jednotkovém čtverci a na jednotkovém
 disku.
\end_layout

\begin_layout Subsection
Ortogonální momenty na čtverci
\end_layout

\begin_layout Standard
Ortogonální momenty na čtverci jsou definovány následovně
\begin_inset Formula 
\[
v_{pq}=n_{p}n_{q}\underset{\Omega}{\int\int}p_{p}\left(x\right)p_{q}\left(y\right)f\left(x,y\right)\textnormal{d}x\textnormal{d}y,
\]

\end_inset

kde 
\begin_inset Formula $p_{k}\left(x\right)$
\end_inset

 je systém jedno dimenzionálních ortogonálních polynomů.
 Běžně se používají Legendreovy, Čebyševovy nebo Gegenbauerovy, které jsou
 všechny definovány na intervalu 
\begin_inset Formula $\left\langle -1,1\right\rangle $
\end_inset

.
 Další možností jsou Jacobiho polynomy na intervalu 
\begin_inset Formula $\left\langle 0,1\right\rangle $
\end_inset

 nebo 
\begin_inset Formula $\left\langle -1,1\right\rangle $
\end_inset

, Laguerreovy na intervalu 
\begin_inset Formula $\left\langle 0,\infty\right\rangle $
\end_inset

 nebo Hermiteovy na intervalu 
\begin_inset Formula $\left\langle -\infty,\infty\right\rangle $
\end_inset

.
 Dále budeme uvažovat pouze Legendreovy polynomy definované vztahem
\begin_inset Formula 
\[
p_{n}\left(x\right)=\frac{1}{2^{n}n!}\frac{\textnormal{d}^{n}}{\textnormal{d}x^{n}}\left(x^{2}-1\right)^{n}.
\]

\end_inset

Ortogonalita plyne z následujícího vztahu
\begin_inset Formula 
\[
\int_{-1}^{1}p_{m}\left(x\right)p_{n}\left(x\right)\textnormal{d}x=\frac{2}{2n+1}\delta_{mn}.
\]

\end_inset

Pro výpočet Legendreových momentů platí vztah ve tvaru
\begin_inset Formula 
\begin{align*}
\lambda_{mn} & =\frac{\left(2m+1\right)\left(2n+1\right)}{4}\int_{-1}^{1}\int_{-1}^{1}p_{m}\left(x\right)p_{n}\left(y\right)f\left(x,y\right)\textnormal{d}x\textnormal{d}y,\\
\lambda_{mn} & =\frac{\left(2m+1\right)\left(2n+1\right)}{4}\stackrel[p=0]{m}{\sum}\stackrel[q=0]{n}{\sum}a_{mp}a_{nq}m_{pq},
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Ortogonální momenty na disku
\end_layout

\begin_layout Standard
Ortogonální momenty na disku jsou definovány následovně
\begin_inset Formula 
\[
v_{pq}=n_{pq}\int_{0}^{2\pi}\int_{0}^{1}R_{pq}\left(r\right)e^{-iq\varphi}f\left(r,\varphi\right)\textnormal{d}r\textnormal{d}\varphi,
\]

\end_inset

kde 
\begin_inset Formula $R_{pq}\left(r\right)$
\end_inset

 je radiální část a 
\begin_inset Formula $e^{-iq\varphi}$
\end_inset

 je úhlová část.
 Běžně se používají: Zernikeovy, pseudo-Zernikeovy, OG Fourier-Mellineho,
 atd.
 Zernikeovy polynomy jsou definované vztahem
\begin_inset Formula 
\begin{align*}
A_{nl} & =\frac{n+1}{\pi}\int_{0}^{2\pi}\int_{0}^{1}V_{nl}^{*}\left(r,\varphi\right)f\left(r,\varphi\right)r\textnormal{d}r\textnormal{d}\varphi,\\
V_{nl}\left(r,\varphi\right) & =R_{nl}\left(r\right)e^{-il\varphi},\\
R_{nl}\left(r\right) & =\stackrel[s=0]{\nicefrac{\left(n-\left|l\right|\right)}{2}}{\sum}\left(-1\right)^{s}\frac{\left(n-s\right)!}{s!\left(\frac{n+\left|l\right|}{2}-s\right)!\left(\frac{n-\left|l\right|}{2}-s\right)!}\cdot r^{n-2s}.
\end{align*}

\end_inset

Ortogonalita plyne z následujícího vztahu
\begin_inset Formula 
\[
\int_{0}^{2\pi}\int_{0}^{1}V_{nl}^{*}\left(r,\varphi\right)V_{mk}\left(r,\varphi\right)r\textnormal{d}r\textnormal{d}\varphi=\frac{\pi}{n+1}\delta_{mn}\delta_{kl}.
\]

\end_inset

Pro výpočet Zernikeových momentů platí vztah ve tvaru
\begin_inset Formula 
\[
A_{nl}=\frac{n+1}{\pi}\stackrel[x=0]{M-1}{\sum}\stackrel[y=0]{N-1}{\sum}V_{nl}^{*}\left(r,\varphi\right)f\left(x,y\right).
\]

\end_inset

Jedná se o mapování Kartézských souřadnic 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

 do polárních souřadnic 
\begin_inset Formula $r$
\end_inset

, 
\begin_inset Formula $\varphi$
\end_inset

.
 Celý obrázek je namapován uvnitř jednotkového disku, z čehož plyne, že
 jsou tyto momenty invariantní na posunutí a škálování.
 Další vlastností Zernikeových momentů je tzv.
 rotační vlastnost
\begin_inset Formula 
\[
\tilde{A}_{nl}=e^{-il\vartheta}A_{nl},
\]

\end_inset

tzn.
 velikost se zachovává, ale posunuje se fáze o 
\begin_inset Formula $l\vartheta$
\end_inset

.
\end_layout

\begin_layout Subsection
Rekonstrukce obrazu z geometrických momentů
\end_layout

\begin_layout Standard
První možností je rekonstrukce přímo z geometrických momentů, které lze
 docílit řešením následujících rovnic
\begin_inset Formula 
\[
m_{pq}=\stackrel[x=0]{M-1}{\sum}\stackrel[y=0]{N-1}{\sum}x^{p}y^{q}f\left(x,y\right).
\]

\end_inset

Tento způsob ovšem funguje pro velmi malé obrázky, protože pro větší je
 systém rovnic špatně podmíněný.
 Další možností je rekonstruovat obraz skrze Fourierovu transformaci
\begin_inset Formula 
\[
F\left(u,v\right)=\stackrel[p=0]{\infty}{\sum}\stackrel[q=0]{\infty}{\sum}\frac{\left(-2\pi i\right)^{p+q}}{p!q!}\left(\frac{u}{M}\right)^{p}\left(\frac{v}{N}\right)^{q}m_{pq}.
\]

\end_inset


\end_layout

\begin_layout Section
Algoritmy pro výpočet momentů
\end_layout

\begin_layout Subsection
Dekompoziční metody
\end_layout

\begin_layout Standard
Objekt je rozložen na 
\begin_inset Formula $K$
\end_inset

 disjunktních bloků 
\begin_inset Formula $B_{k}$
\end_inset

 (obvykle obdélníkových) takových, že platí
\begin_inset Formula 
\[
m_{pq}^{\Omega}=\stackrel[k=1]{K}{\sum}m_{pq}^{B_{k}},
\]

\end_inset

kde 
\begin_inset Formula $K\ll N^{2}$
\end_inset

.
 Jednotlivé dekompoziční metody se od sebe liší dekompozičním algoritmem,
 tvarem bloků nebo způsobem, jakým jsou momenty daného bloku počítány.
 Výpočetní náročnost dekompozičních metod se často ignoruje a doufá se,
 že pro jeden blok bude 
\begin_inset Formula $m_{pq}^{B_{k}}\sim O\left(1\right)$
\end_inset

 a celkem tedy 
\begin_inset Formula $m_{pq}^{\Omega}\sim O\left(K\right)$
\end_inset

.
 Nicméně toto nemusí platit a náročnost může být vyšší.
 Dekompozice je účinná, pokud se počítá velké množství momentů objektu,
 ale některé objekty efektivně dekomponovat nelze.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Delta metoda (Zakaria et al.):
\series default
\emph default
 Jedná se o dekompozici na řádky, která lze zapsat ve tvaru 
\begin_inset Formula 
\[
m_{pq}^{G_{k}}=y_{0}^{q}\stackrel[i=0]{x_{0}+\delta-1}{\sum}i^{p}.
\]

\end_inset

Pro výpočet této sumy existují rekurzivní formule, viz prezentace z přednášky.
 Nicméně výpočet lze zjednodušit přímou integrací, tzn.
\begin_inset Formula 
\[
m_{pq}^{B_{k}}=y_{0}^{q}\int_{i=0}^{x_{0}+\delta}i^{p}\textnormal{d}x=\frac{y_{0}^{q}}{p+1}\left(\left(x_{0}+\delta\right)^{p+1}-x_{0}^{p+1}\right).
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\emph on
Obdélníkové bloky:
\series default
\emph default
 Jedná se o dekompozici na množinu řádků, které mají stejný začátek a konec.
 Tuto dekompozici můžeme zapsat ve tvaru 
\begin_inset Formula 
\[
m_{pq}^{G_{k}}=\stackrel[i=0]{x_{1}}{\sum}i^{p}\cdot\stackrel[j=0]{y_{1}}{\sum}j^{q},
\]

\end_inset

a zjednodušení můžeme opět provést přímou integrací, čímž získáme vztah
\begin_inset Formula 
\[
m_{pq}^{B_{k}}=\frac{1}{\left(p+1\right)\left(q+1\right)}\left(x_{1}^{p+1}-x_{0}^{p+1}\right)\left(y_{1}^{q+1}-y_{0}^{q+1}\right).
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\emph on
Hierarchická dekompozice:
\series default
\emph default
 Tato dekompoziční metoda rozkládá obraz na homogenní čtverce a existují
 verze 
\emph on
bin-tree
\emph default
 a 
\emph on
quad-tree
\emph default
, které se liší tím, na kolik čtverců dělíme.
 Moment pro blok po zjednodušení přímou integrací je ve tvaru jako pro obdélníko
vé bloky.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Morfologická dekompozice:
\series default
\emph default
 Rekurzivní dekompozice na největší vepsané čtverce, kde jejich středy hledáme
 pomocí morfologické operace eroze.
 Moment pro blok po zjednodušení přímou integrací je opět ve tvaru jako
 pro obdélníkové bloky.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Moment_decomposition.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázky principu dekompozice pro uvedené metody.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Boundary-based metody
\end_layout

\begin_layout Standard
Tyto metody vycházejí z tzv.
 Greenova teorému
\begin_inset Formula 
\[
\underset{\partial\Omega}{\oint}h\left(x,y\right)\textnormal{d}x+g\left(x,y\right)\textnormal{d}y=\underset{\partial\Omega}{\iint}\left(\frac{\partial g}{\partial x}-\frac{\partial h}{\partial x}\right)\textnormal{d}x\textnormal{d}y.
\]

\end_inset

Pokud budeme volit funkce 
\begin_inset Formula $h$
\end_inset

 a 
\begin_inset Formula $g$
\end_inset

 ve speciálním tvaru, dostaneme
\begin_inset Formula 
\[
g\left(x,y\right)=\frac{x^{p+1}y^{q}}{p+1}\quad\land\quad h\left(x,y\right)=0\quad\Longrightarrow\quad m_{pq}^{\Omega}=\frac{1}{p+1}\underset{\partial\Omega}{\oint}x^{p+1}y^{q}\textnormal{d}y.
\]

\end_inset

Křivkový integrál lze počítat pomocí sumace pixel po pixelu, případně lze
 použít nějakou aproximaci, např.
 polygonální.
 
\end_layout

\begin_layout Standard
Další metoda je založena na diskrétním Greenovu teorému, který říká
\begin_inset Formula 
\[
m_{pq}^{\Omega}=\underset{\left(x,y\right)\in\partial\Omega_{+}}{\sum}y^{q}\cdot\stackrel[i=1]{x}{\sum}i^{p}-\underset{\left(x,y\right)\in\partial\Omega_{-}}{\sum}y^{q}\cdot\stackrel[i=1]{x}{\sum}i^{p},
\]

\end_inset

kde množiny 
\begin_inset Formula $\partial\Omega_{+}$
\end_inset

 a 
\begin_inset Formula $\partial\Omega_{-}$
\end_inset

 jsou definovány následovně
\begin_inset Formula 
\begin{align*}
\partial\Omega_{+} & =\left\{ \left(x,y\right)\left|\left(x,y\right)\notin\Omega\;\land\;\left(x+1,y\right)\in\Omega\right.\right\} , & \partial\Omega_{-} & \left\{ \left(x,y\right)\left|\left(x,y\right)\in\Omega\;\land\;\left(x+1,y\right)\notin\Omega\right.\right\} .
\end{align*}

\end_inset

Tato metoda je ekvivalentní dekompoziční delta metodě a lze ji zjednodušit
 pomocí přímé integrace a předpočítání.
 
\end_layout

\begin_layout Standard
Složitost boundary-based metod závisí na délce hranice a předpokládá se,
 že detekce hranice je rychlá.
 Tyto metody jsou účinné pro objekty s jednoduchou hranicí a můžou být použity
 i pro malý počet momentů, což je rozdíl oproti dekompozičním metodám.
 Pro objekty se složitou hranicí jsou neúčinné.
\end_layout

\begin_layout Chapter
Waveletová transformace
\end_layout

\begin_layout Standard
V oblasti zpracování signálů po dlouhou dobu dominovala Fourierova transformace
 (FT).
 S její pomocí získáme informaci o frekvencích obsažených v analyzovaném
 signálu, nicméně nedokážeme zjistit čas, ve kterém se tyto frekvence vyskytují.
 To je dáno povahou bázové funkce, kterou je v FT komplexní exponenciála,
 tedy periodická funkce s energií rozloženou po celém jejím průběhu.
 Kvůli této vlastnosti nelze získat odezvu od konkrétního místa (času) v
 signálu.
 Poměrně jednoduchým řešením je neprovádět analýzu celého signálu, ale postupně
 po menších částech, definovaných plovoucím oknem.
 Tento přístup je znám jako krátkodobá Fourierova transformace (
\emph on
short-time Fourier transform
\emph default
, STFT)
\begin_inset Formula 
\[
STFT_{f}\left(a,b\right)=\int_{-\infty}^{\infty}f\left(t\right)w^{*}\left(t-b\right)e^{-2\pi iat}\textnormal{d}t,
\]

\end_inset

kde 
\begin_inset Formula $w\left(t\right)$
\end_inset

 značí výběrové okno a člen 
\begin_inset Formula $h\left(t\right)=w^{*}\left(t\right)e^{-2\pi iat}$
\end_inset

 představuje prvek báze.
 Zde ale nastává problém s volbou velikosti plovoucího okna.
 Čím je okno menší, tím je lepší časové rozlišení analýzy.
 Se zmenšujícím se oknem ale také ubývá množství frekvencí, které lze ve
 zkoumaném signálu identifikovat.
 Toto platí samozřejmě i naopak, tedy se zvětšujícím se oknem se zvyšuje
 frekvenční rozlišení a zmenšuje rozlišení časové.
 Tento problém je úzce svázán s tzv.
 Heisenbergovým principem neurčitosti
\begin_inset Formula 
\[
\varDelta t\ast\varDelta f\geq\frac{1}{4\pi},
\]

\end_inset

kde 
\begin_inset Formula $\varDelta t$
\end_inset

 značí časové rozlišení a 
\begin_inset Formula $\varDelta f$
\end_inset

 frekvenční rozlišení.
 Tento nedostatek STFT řeší waveletová transformace (
\emph on
wavelet transform
\emph default
, WT) volbou jiné bázové funkce, tzv.
 wavelety, která má většinu energie umístěnou v malém konečném intervalu.
 Rozdíl mezi charakteristikami jednotlivých transformací je znázorněn na
 obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wavelet_comparison"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_comparison.pdf_tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Porovnání časového a frekvenčního rozlišení jednotlivých transformací: 
\series bold
\emph on
A)
\series default
\emph default
 FT, 
\series bold
\emph on
B)
\series default
\emph default
 STFT a 
\series bold
\emph on
C)
\series default
\emph default
 WT.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Wavelet_comparison"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Spojitá waveletová transformace
\end_layout

\begin_layout Standard
Spojitá waveletová transformace rozkládá signál pomocí dilatovaných a posunutých
 wavelet.
 Název waveleta pochází z anglického 
\emph on
wavelet
\emph default
, kde 
\emph on
wave...

\emph default
 značí to, že funkce osciluje, a 
\emph on
...let
\emph default
 značí to, že je funkce dobře lokalizovatelná kolem 
\begin_inset Formula $0$
\end_inset

, tzn.
 rychle 
\begin_inset Quotes gld
\end_inset

mizí
\begin_inset Quotes grd
\end_inset

.
 Formálně je waveleta 
\begin_inset Formula $\psi$
\end_inset

 funkce z prostoru funkcí integrovatelných s druhou mocninou, tzn.
 
\begin_inset Formula $\psi\in L^{2}\left(\mathbb{R}\right)$
\end_inset

, s následujícími vlastnostmi:
\begin_inset Formula 
\begin{align*}
\int_{-\infty}^{\infty}\psi\left(t\right)\textnormal{d}t & =0, & \int_{-\infty}^{\infty}\left|\psi\left(t\right)\right|^{2}\textnormal{d}t & <\infty, & \int_{-\infty}^{\infty}\frac{\left|\psi\left(t\right)\right|}{\left|t\right|}\textnormal{d}t & <\infty, & \mathcal{F}\left(\psi\right) & =\left\{ \begin{array}{ccl}
0 & \ldots & \textnormal{v }0,\\
0 & \ldots & \textnormal{v }\infty.
\end{array}\right.
\end{align*}

\end_inset

Definujme waveletovou bázi, která je tvořena wavelety 
\begin_inset Formula $\psi_{a,b}$
\end_inset

, které jsou odvozeny z mateřské wavelety 
\begin_inset Formula $\psi$
\end_inset

 (
\emph on
mother wavelet
\emph default
) posunutím o faktor 
\begin_inset Formula $b$
\end_inset

 a dilatovaných faktorem 
\begin_inset Formula $a$
\end_inset

, tzn.
 ve tvaru
\begin_inset Formula 
\[
\mathcal{D}=\left\{ \psi_{a,b}\left(t\right)=\frac{1}{\sqrt{a}}\psi\left(\frac{t-b}{a}\right)\;\textnormal{ pro }\;a\in\mathbb{R}^{+},\;b\in\mathbb{R}\right\} .
\]

\end_inset

Dosazením do obecného předpisu pro integrální transformaci, získáme rovnici
 spojité waveletové transformace ve tvaru
\begin_inset Formula 
\[
W_{f}\left(a,b\right)=\int_{-\infty}^{\infty}f\left(t\right)\psi_{a,b}^{*}\left(t\right)\textnormal{d}t=\int_{-\infty}^{\infty}f\left(t\right)\psi_{a,0}^{*}\left(t-b\right)\textnormal{d}t,
\]

\end_inset

kde symbol 
\begin_inset Formula $^{*}$
\end_inset

 značí komplexní sdružení.
 Kompaktně lze uvedený vztah zapsat následovně
\begin_inset Formula 
\[
W_{f}\left(a,b\right)=\left\langle f\left(t\right),\psi_{a,b}\right\rangle .
\]

\end_inset

 Pokud uvedený vztah porovnáme se vztahem pro STFT, tak je jasné, že jediná
 změna je ve volbě bazických funkcí.
 Dále definujme inverzní waveletovou transformaci 
\begin_inset Formula 
\[
f\left(t\right)=c\int_{0}^{\infty}\int_{-\infty}^{\infty}\frac{1}{a^{2}}W_{f}\left(a,b\right)\psi_{a,b}\left(t\right)\textnormal{d}a\textnormal{d}b,
\]

\end_inset

kde konstanta 
\begin_inset Formula $c$
\end_inset

 závisí na waveletě 
\begin_inset Formula $\psi$
\end_inset

.
 Uvedená waveletová transformace je ale vysoce redundantní, protože počítá
 transformaci pro všechny možné posuny 
\begin_inset Formula $b$
\end_inset

 a všechny možné dilatace faktorem 
\begin_inset Formula $a$
\end_inset

.
 Z tohoto důvodu její přímá implementace nemá velký význam a přistupuje
 se k diskretizaci faktorů 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

.
 
\end_layout

\begin_layout Section
Diskrétní waveletová transformace
\end_layout

\begin_layout Standard
Jak již bylo řečeno, spojitá waveletová transformace vypočtená pro všechna
 možná měřítka a posunutí wavelety produkuje obrovské množství dat.
 Je tedy nutno provést výpočet jen pro určitou množinu pozic a měřítek wavelety.
 K tomuto slouží tzv.
 Mallatův algoritmus, kde změna měřítka a posuv probíhá na dvojkové mřížce,
 tzv.
 dyadické mřížce.
 Díky vhodné volbě závislosti mezi posuvem a změnou měřítka vytvoříme neredundan
tní dekompozici a z posunutých a dilatovaných wavelet tak vytvoříme ortonormální
 bázi.
 Parametr 
\begin_inset Formula $a$
\end_inset

 vzorkujeme na logaritmické stupnici následovně 
\begin_inset Formula $a=a_{0}^{-m}$
\end_inset

.
 Parametr 
\begin_inset Formula $b$
\end_inset

 poté vzorkujeme hustěji pro malá 
\begin_inset Formula $a$
\end_inset

 a používáme vztah 
\begin_inset Formula $b=n\cdot a_{0}^{-m}\cdot b_{0}$
\end_inset

.
 Volba parametrů 
\begin_inset Formula $a_{0}=2$
\end_inset

 a 
\begin_inset Formula $b_{0}=1$
\end_inset

 vede na dyadickou síť.
\end_layout

\begin_layout Standard
Pokud tedy pro diskretizaci zvolíme dyadickou síť, dostáváme ortonormální
 bázi 
\begin_inset Formula $\mathcal{D}$
\end_inset

 prostoru 
\begin_inset Formula $L^{2}\left(\mathbb{R}\right)$
\end_inset

 ve tvaru 
\begin_inset Formula 
\[
\mathcal{D}=\left\{ \psi_{m,n}\left(t\right)=\sqrt{2^{m}}\psi\left(2^{m}t-n\right)\;\textnormal{ pro }\;m,n\in\mathbb{Z},\;-\infty<m,n<\infty\right\} ,
\]

\end_inset

tzn.
 báze se skládá z binárně škálovaných wavelet, tzn.
 zmenšují se o faktor 
\begin_inset Formula $2$
\end_inset

, s dyadickým posunem, tzn.
 posunem o 
\begin_inset Formula $\frac{n}{2^{m}}$
\end_inset

.
 Když máme ortonormální bázi, tak můžeme funkci 
\begin_inset Formula $f\left(t\right)$
\end_inset

 vyjádřit pomocí této báze ve tvaru
\begin_inset Formula 
\begin{align*}
f\left(t\right) & =\stackrel[m=-\infty]{\infty}{\sum}\stackrel[n=-\infty]{\infty}{\sum}c_{m,n}\psi_{m,n}, & c_{m,n} & =\left\langle f\left(t\right),\psi_{m,n}\right\rangle ,
\end{align*}

\end_inset

tzn.
 koeficienty 
\begin_inset Formula $c_{m,n}$
\end_inset

 jsou výstupem diskrétní waveletové transformace funkce 
\begin_inset Formula $f\left(t\right)$
\end_inset

.
 Nutno podotknout, že takto popsaná funkce 
\begin_inset Formula $f$
\end_inset


\begin_inset Formula $\left(t\right)$
\end_inset

 je stále spojitá, protože jsme diskretizovali pouze proměnné 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

.
 Dále se budeme zabývat tím, jak navzorkovat funkci 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\begin_layout Standard
Uvedenou transformaci můžeme ještě zjednodušit.
 Zaveďme tzv.
 kompaktní dyadickou transformaci.
 Předpokládejme funkci 
\begin_inset Formula $f\left(t\right)$
\end_inset

 a waveletu 
\begin_inset Formula $\psi_{m,n}\left(t\right)$
\end_inset

, která je nenulová na jednotkovém intervalu 
\begin_inset Formula $\left\langle 0,1\right\rangle $
\end_inset

.
 Dále předpokládejme 
\begin_inset Formula $j=2^{m}+n$
\end_inset

, kde 
\begin_inset Formula $m=0,1,\ldots$
\end_inset

 a 
\begin_inset Formula $n=0,1,\ldots,2^{j}-1$
\end_inset

.
 Potom můžeme zapsat waveletu ve tvaru
\begin_inset Formula 
\[
\psi_{j}\left(t\right)=\sqrt{2^{m}}\psi\left(2^{m}t-n\right),
\]

\end_inset

kde pro libovolné 
\begin_inset Formula $j$
\end_inset

 je 
\begin_inset Formula $m$
\end_inset

 největší celé číslo, které splňuje 
\begin_inset Formula $2^{m}\leq j$
\end_inset

, a pro 
\begin_inset Formula $n$
\end_inset

 platí vztah 
\begin_inset Formula $n=j-2^{m}$
\end_inset

.
 Na obrázku 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wavelet_compact"

\end_inset

 jsou zobrazeny rozložení intervalu 
\begin_inset Formula $\left\langle 0,1\right\rangle $
\end_inset

 pomocí Haarovy wavelety pro různé hodnoty 
\begin_inset Formula $j$
\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Haar_decomposition.pdf_tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
 Rozložení intervalu 
\begin_inset Formula $\left\langle 0,1\right\rangle $
\end_inset

 pomocí Haarovy wavelety pro různé hodnoty 
\begin_inset Formula $j$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Wavelet_compact"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nyní můžeme přistoupit k diskretizaci funkce 
\begin_inset Formula $f$
\end_inset

, tzn.
 k zavedení kompaktní waveletové transformace ve tvaru
\begin_inset Formula 
\begin{align*}
f\left(t\right) & =\stackrel[j=1]{N}{\sum}c_{j}\psi_{j}, & c_{j} & =\left\langle f\left(t\right),\psi_{j}\right\rangle ,
\end{align*}

\end_inset

kde výstupem už je diskrétní funkce.
 Následující tabulka uvádí srovnání Fourierových řad a transformací s transforma
cemi waveletovými.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Fourierova transformace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spojitá funkce 
\begin_inset Formula $\Longrightarrow$
\end_inset

 spojitá funkce
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Fourierova řada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
periodická funkce 
\begin_inset Formula $\Longrightarrow$
\end_inset

 řada koeficientů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Diskrétní Fourierova transformace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
navzorkovaná funkce 
\begin_inset Formula $\Longrightarrow$
\end_inset

 navzorkované spektrum
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Spojitá waveletová transformace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spojitá funkce 
\begin_inset Formula $\Longrightarrow$
\end_inset

 spojité 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Waveletová řada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spojitá funkce
\begin_inset Formula $\Longrightarrow$
\end_inset

 řada koeficientů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Diskrétní waveletová transformace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
navzorkovaná funkce 
\begin_inset Formula $\Longrightarrow$
\end_inset

 konečná řada koeficientů
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Vnořené podprostory (
\emph on
Multi resolution analysis
\emph default
, MRA)
\end_layout

\begin_layout Standard
Prostor 
\begin_inset Formula $L^{2}\left(\mathbb{R}\right)$
\end_inset

 lze rozložit na uzavřené disjunktní podprostory 
\begin_inset Formula $V_{i}$
\end_inset

, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wavelet_vnor"

\end_inset

, kde každý podprostor 
\begin_inset Formula $V_{i}$
\end_inset

 odpovídá jednomu měřítku, tzn.
 
\begin_inset Formula 
\begin{align*}
L^{2}\left(\mathbb{R}\right) & =\underset{m\in\mathbb{Z}}{\cup}V_{m}, & \underset{m\in\mathbb{Z}}{\cap}V_{m} & =\left\{ 0\right\} .
\end{align*}

\end_inset

Pro tyto prostory navíc platí následující vztahy
\begin_inset Formula 
\begin{align*}
f\left(t\right)\in V_{0} & \;\Longrightarrow\;f\left(2^{k}t\right)\in V_{k}, & f\left(t\right)\in V_{k} & \;\Longrightarrow\;f\left(2t\right)\in V_{k+1}, & f\left(t\right)\in V_{k} & \;\Longleftrightarrow\;f\left(t-j\right)\in V_{k}.
\end{align*}

\end_inset

Znázornění uvedených vlastností je na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wavelet_vnor"

\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Space.pdf_tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Vnořené prostory a jejich vlastnosti.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Wavelet_vnor"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Uvedené podprostory lze plně určit pomocí tzv.
 škálovací funkce (též někdy nazývaná vyhlazovací funkce)
\begin_inset Formula 
\[
\phi_{ij}\left(t\right)=\sqrt{2^{i}}\phi\left(2^{i}t-j\right),
\]

\end_inset

 která se také někdy nazývá otcovská waveleta (
\emph on
father wavelet
\emph default
).
 Škálovací funkce musí být kompaktní, tzn.
 nulová krom určitého konečného intervalu, musí rychle klesat jak 
\begin_inset Formula $\phi$
\end_inset

, tak i 
\begin_inset Formula $\mathcal{F}\left(\phi\right)$
\end_inset

, a musí platit
\begin_inset Formula 
\[
\int_{-\infty}^{\infty}\phi\left(t\right)\textnormal{d}t\neq0\;\left(=1\right).
\]

\end_inset

 Tato funkce (se svými posuny o 
\begin_inset Formula $j$
\end_inset

) tvoří ortonormální bázi podprostoru 
\begin_inset Formula $V_{i}$
\end_inset

.
 Označme symbolem 
\begin_inset Formula $P_{i}\left(f\right)$
\end_inset

 ortonormální projekci funkce 
\begin_inset Formula $f$
\end_inset

 do podprostoru 
\begin_inset Formula $V_{i}$
\end_inset

, potom platí 
\begin_inset Formula 
\[
f=\underset{i\rightarrow\infty}{\lim}P_{i}\left(f\right).
\]

\end_inset

Stejně jako škálovací funkce tvoří se svými posuny ortonormální bázi podprostoru
 
\begin_inset Formula $V_{i}$
\end_inset

, tak i waveletová funkce 
\begin_inset Formula $\psi_{i,j}$
\end_inset

 tvoří se svými posuny ortonormální bázi podprostoru 
\begin_inset Formula $W_{i}$
\end_inset

, kde 
\begin_inset Formula $W_{i}$
\end_inset

 je ortonormálním doplňkem prostoru 
\begin_inset Formula $V_{i}$
\end_inset

 do prostoru 
\begin_inset Formula $V_{i+1}$
\end_inset

, tzn.
 platí 
\begin_inset Formula $V_{i+1}=V_{i}\oplus W_{i}$
\end_inset

.
\end_layout

\begin_layout Subsection
Dekompozice funkce 
\begin_inset Formula $f$
\end_inset


\end_layout

\begin_layout Standard
Nyní se budeme zabývat tím jak dekomponovat funkci 
\begin_inset Formula $f$
\end_inset

 následujícím vztahem
\begin_inset Formula 
\begin{equation}
P_{V_{j}}f=P_{V_{j_{0}}}f+\stackrel[k=j_{0}]{j-1}{\sum}P_{W_{j}}f,\label{eq:Wavelet_projection}
\end{equation}

\end_inset

kde 
\begin_inset Formula $P_{V_{i}}$
\end_inset

 představuje ortonormální projekci 
\begin_inset Formula $f$
\end_inset

 do podprostoru 
\begin_inset Formula $V_{i}$
\end_inset

 a 
\begin_inset Formula $P_{W_{j}}f$
\end_inset

 představuje ortonormální projekci 
\begin_inset Formula $f$
\end_inset

 do podprostoru 
\begin_inset Formula $W_{j}$
\end_inset

.
 V předchozím vzorci představuje člen 
\begin_inset Formula $P_{V_{j_{0}}}f$
\end_inset

 základ a členy 
\begin_inset Formula $P_{W_{j}}f$
\end_inset

 představují detaily různého měřítka.
 Pro uvedené ortonormální projekce platí následující vztahy
\begin_inset Formula 
\begin{align*}
\left(P_{V_{j}}f\right)\left(t\right) & =\stackrel[k=0]{2^{j}-1}{\sum}c{}_{j,k}\cdot\phi_{j,k}\left(t\right), & c_{j,k} & =\int_{-\infty}^{\infty}f\left(t\right)\phi_{j,k}\left(t\right)\textnormal{d}t,\\
\left(P_{W_{j}}f\right)\left(t\right) & =\stackrel[k=0]{2^{j}-1}{\sum}d{}_{j,k}\cdot\psi_{j,k}\left(t\right), & d_{j,k} & =\int_{-\infty}^{\infty}f\left(t\right)\psi_{j,k}\left(t\right)\textnormal{d}t.
\end{align*}

\end_inset

V praxi se škálovací funkce a waveletová funkce rozkládají pomocí filtrů.
 Tento rozklad lze zapsat jako dilatační rovnice
\begin_inset Formula 
\begin{align*}
\phi\left(t\right) & =\sqrt{2}\underset{j}{\sum}h_{j}\cdot\phi\left(2t-j\right), & \psi\left(t\right) & =\sqrt{2}\underset{j}{\sum}g_{j}\cdot\psi\left(2t-j\right),
\end{align*}

\end_inset

kde platí 
\begin_inset Formula $\phi\left(2t-j\right),\psi\left(2t-j\right)\in V_{1}$
\end_inset

, 
\begin_inset Formula $\phi\left(t\right)\in V_{0}$
\end_inset

 a 
\begin_inset Formula $\psi\left(t\right)\in W_{0}$
\end_inset

.
 Dále 
\begin_inset Formula $h_{j}$
\end_inset

, 
\begin_inset Formula $g_{j}$
\end_inset

 jsou tzv.
 
\emph on
quadrature mirror
\emph default
 filtry (platí 
\begin_inset Formula $\left|H\right|^{2}+\left|G\right|^{2}=1$
\end_inset

), kde 
\begin_inset Formula $h_{j}$
\end_inset

 je 
\emph on
low-pass
\emph default
 filtr, 
\begin_inset Formula $g_{j}$
\end_inset

 je 
\emph on
high-pass
\emph default
 filtr a platí pro ně vztahy
\begin_inset Formula 
\begin{align*}
\underset{j}{\sum}\left|h_{j}\right|^{2} & <\infty, & \underset{j}{\sum}h_{j} & =\sqrt{2}, & \underset{j}{\sum}g_{j} & =0.
\end{align*}

\end_inset

Je tedy vidět, že škálovací funkce a waveleta je určena dvojicí filtrů.
 Jako příklad uveďme Haarovu waveletu, která je definována následovně
\begin_inset Formula 
\begin{align*}
\psi\left(t\right) & =\left\{ \begin{array}{ccc}
1 & \ldots & t\in\left\langle 0,\frac{1}{2}\right)\\
-1 & \ldots & t\in\left\langle \frac{1}{2},1\right)\\
0 & \ldots & \textnormal{jinak}
\end{array}\right., & \phi\left(t\right) & =\left\{ \begin{array}{ccc}
1 & \ldots & t\in\left\langle 0,1\right)\\
0 & \ldots & \textnormal{jinak}
\end{array}\right..
\end{align*}

\end_inset

Pokud definujeme filtry, můžeme pomocí nich tuto waveletu a škálovací funkci
 vyjádřit
\begin_inset Formula 
\begin{align*}
h & =\left(\frac{1}{\sqrt{2}},\frac{1}{\sqrt{2}}\right), & \phi\left(t\right) & =\sqrt{2}\stackrel[j=0]{1}{\sum}h_{j}\cdot\phi\left(2t-j\right)=\sqrt{2}\left(\frac{1}{\sqrt{2}}\phi\left(2t\right)+\frac{1}{\sqrt{2}}\phi\left(2t-1\right)\right)=\phi\left(2t\right)+\phi\left(2t-1\right),\\
q & =\left(\frac{1}{\sqrt{2}},-\frac{1}{\sqrt{2}}\right), & \psi\left(t\right) & =\sqrt{2}\stackrel[j=0]{1}{\sum}g_{j}\cdot\phi\left(2t-j\right)=\sqrt{2}\left(\frac{1}{\sqrt{2}}\phi\left(2t\right)-\frac{1}{\sqrt{2}}\phi\left(2t-1\right)\right)=\phi\left(2t\right)-\phi\left(2t-1\right).
\end{align*}

\end_inset

Toto vyjádření je znázorněno na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wavelet_Haar"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Haar.pdf_tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Znázornění vyjádření Haarovy wavelety pomocí škálovací funkce a filtrů.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Wavelet_Haar"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset

Pro filtry 
\begin_inset Formula $h_{j}$
\end_inset

, 
\begin_inset Formula $g_{j}$
\end_inset

 platí následující vztahy
\begin_inset Formula 
\begin{align*}
h_{j} & =\int_{-\infty}^{\infty}\phi\left(t\right)\phi\left(2t-j\right)\textnormal{d}t, & g_{j} & =\int_{-\infty}^{\infty}\psi\left(t\right)\phi\left(2t-j\right)\textnormal{d}t.
\end{align*}

\end_inset

Díky filtrům 
\begin_inset Formula $h_{j}$
\end_inset

, 
\begin_inset Formula $g_{j}$
\end_inset

 můžeme nalézt rekurentní vztahy pro výpočet koeficientů 
\begin_inset Formula $c_{j,k}$
\end_inset

 ortonormální projekce do prostoru 
\begin_inset Formula $V_{j}$
\end_inset

, resp.
 koeficientů 
\begin_inset Formula $d_{j,k}$
\end_inset

 ortonormální projekce do prostoru 
\begin_inset Formula $W_{j}$
\end_inset

 ve vztahu (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Wavelet_projection"

\end_inset

), následovně
\begin_inset Formula 
\begin{align*}
c_{j-1,k} & =\underset{n}{\sum}h_{n-2k}\cdot c_{j,n}, & d_{j-1,k} & =\underset{n}{\sum}g_{n-2k}\cdot c_{j,n}, & c_{j+1,k} & =\underset{n}{\sum}h_{k-2n}\cdot c_{j,n}+\underset{n}{\sum}h_{k-2n}\cdot c_{j,n}.
\end{align*}

\end_inset

Příklad dekompozice obrazu pomocí waveletové transformace je uveden na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Decomposition"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Decomposition.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka dekompozice obrazu.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Decomposition"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Note
Waveletová transformace je tedy proces určení koeficientů 
\begin_inset Formula $c_{j_{0},k}$
\end_inset

, 
\begin_inset Formula $d_{j,k}$
\end_inset

.
 Na wavelety klademe požadavek, aby byly kompaktní, tzn.
 měli konečný počet nenulových momentů, a byly lokalizovatelné v čase a
 frekvenci.
 Také požadujeme nulovost prvních 
\begin_inset Formula $m$
\end_inset

 momentů, tzn.
\begin_inset Formula 
\[
0=\int_{-\infty}^{\infty}\psi\left(t\right)\textnormal{d}=\ldots=\int_{-\infty}^{\infty}t^{m-1}\psi\left(t\right)\textnormal{d}t.
\]

\end_inset

Dále očekáváme jednoduchou konstrukci a reprezentaci, invarianci vzhledem
 k některým operacím, hladkost, spojitost, diferencovatelnost, symetrii
 a dobré vlastnosti vzhledem k počtu nulových momentů.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series bold
\emph on
Rychlost výpočtu
\end_layout

\end_inset

 Rychlá Fourierova transformace (FFT) má náročnost 
\begin_inset Formula $O\left(n\cdot\log_{2}n\right)$
\end_inset

.
 Oproti tomu rychlá waveletová transformace (FWT) má náročnost pouze 
\begin_inset Formula $O\left(n\right)$
\end_inset

.
\end_layout

\begin_layout Section
Aplikace waveletové transformace
\end_layout

\begin_layout Subsection
Komprese
\end_layout

\begin_layout Standard
Při kompresi se snažíme eliminovat redundantní informaci a méně důležité
 informace.
 Rozlišujeme tři základní druhy redundance.
\end_layout

\begin_layout Enumerate
Prostorová redundance: sousední hodnoty v obrazu jsou korelované.
\end_layout

\begin_layout Enumerate
Frekvenční redundance: frekvenční hodnoty ze stejného pixelu jsou korelované.
\end_layout

\begin_layout Enumerate
Časová redundance: frames malé změny v sekvenci.
\end_layout

\begin_layout Standard
Waveletová transformace provádí dekorelaci dat.
 Z vlastností diskrétní waveletové transformace víme, že koeficienty WT
 představují amplitudu wavelety v daném místě, rozlišení a čase.
 
\end_layout

\begin_layout Standard
První obecně známé využití waveletové transformace v kódování obrazu bylo
 její užití ve standardu FBI pro kompresi otisků prstů.
 Pro kompresi obecného obrazu se nejvíce ujal standard JPEG poprvé představený
 v roce 1992.
 Komprese podle standardu JPEG je realizována kvantizací a kódováním koeficientů
 diskrétní kosinové transformace.
 Algoritmus je poměrně jednoduchý a lze dosáhnout dobrého kompresního poměru,
 nicméně je zde prostor k vylepšení, např.
 v kvalitě obrazu nebo odolnosti vůči chybám.
 I z těchto důvodů byl v roce 2000 představen standard JPEG 2000.
 Schéma komprese (obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Komprese"

\end_inset

) je velmi podobné schématu JPEG, vstupní obraz je tedy transformován a
 výsledné koeficienty jsou kvantovány a zakódovány.
 Hlavní rozdíl je ve využití diskrétní waveletové transformace namísto kosinové
 a v použití kódování založeném na algoritmu EBCOT.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Compress.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schéma komprese obrazu.
\begin_inset CommandInset label
LatexCommand label
name "fig:Komprese"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
\emph on
Prahování:
\series default
\emph default
 rozlišujeme ztrátovou a bezeztrátovou kompresi.
 Při ztrátové provádíme prahování a koeficienty, které jsou menší než daný
 práh, pokládáme rovny nule.
 Ostatní koeficienty pokládáme rovny 1.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Vektorová kvantizace (blokové kódování):
\series default
\emph default
 hledáme kódovou knihu 
\begin_inset Formula $Y=\left\{ y_{i}:\;i=1,2,\ldots,N\right\} $
\end_inset

 (
\begin_inset Formula $y_{i}$
\end_inset

 je kódové slovo), která by nejlépe reprezentovala danou množinu vektorů
 
\begin_inset Formula $nD$
\end_inset

 z 
\begin_inset Formula $\mathbb{R}^{n}$
\end_inset

.
 Jedná se o 
\begin_inset Formula $NP$
\end_inset

 úplný problém.
 Používá se Linde-Buzo-Gray algoritmus, který je podobný algoritmu 
\emph on
k-means clustering
\emph default
.
 Na začátku se určí velikost 
\begin_inset Formula $N$
\end_inset

 a náhodně se vybere 
\begin_inset Formula $N$
\end_inset

 kódových slov (centroidy).
 Poté proběhne shlukování a jako nová kódová slova se vezme průměr.
 Pokud se kódové slovo změnilo, tak opakujeme shlukování a aktualizaci kódových
 slov.
 Jinak končíme.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Kódování:
\series default
\emph default
 pro kódování se používá například RLE kódování (
\emph on
run length coding
\emph default
), které zaznamenává nejdelší souvislý běh po spirále od středu.
 V takovém kódování stačí zaznamenávat první hodnotu a změny.
 Další možností je kódovat amplitudy koeficientů pomocí Huffmanova instantního
 kódu.
\end_layout

\begin_layout Subsubsection
Embedded Zerotree Wavelet Encoding
\end_layout

\begin_layout Standard
Jiný druh kódování, kdy modelujeme závislosti mezi koeficienty waveletové
 transformace.
 Předpokládáme, že waveletový koeficient je nevýznamný vzhledem k parametru
 
\begin_inset Formula $T$
\end_inset

, pokud je v absolutní hodnotě menší nebo roven než 
\begin_inset Formula $T$
\end_inset

.
 Toto kódování je založeno na hypotéze, že pokud je nevýznamný koeficient
 v hrubé škále, tak bude nevýznamný každý koeficient téže prostorové orientace
 v téže prostorové lokaci jemnější škály.
 Nevýhodou tohoto kódování je, že je obtížné dekódování pouze části obrazu
 a také špatné vzpamatovávání se z chyb.
 Vylepšení je tzv.
 
\emph on
Embedded Block Coding with Optimized Truncation
\emph default
 (EBCOT).
 Tento algoritmus dělí každý sub-band na bloky stejné velikosti (32x32),
 které pak separátně kóduje.
 Výhodou tohoto přístupu je možnost paralelního kódování, využití lokálních
 informací, omezený dopad chyb a možnost náhodného přístupu.
\end_layout

\begin_layout Subsection
Odstranění šumu a poškození
\end_layout

\begin_layout Standard
David Donoho a Iain Johnstone navrhli řešení problému ztráty důležitých
 vlastností obrazu při redukci šumu.
 Jejich metoda kombinuje diskrétní waveletovou transformaci s prahovací
 technikou.
 Oddělení signálu od šumu umožňuje schopnost waveletové transformace soustředit
 energii signálu do malého počtu koeficientů s vysokou hodnotou.
 Naopak energie šumu je rozprostřena do velkého počtu malých koeficientů
 a proto je možné šum pomocí prahování oddělit od původního signálu.
 K získání odhadu původního obrazu je nakonec jednoduše použita inverzní
 transformace.
 
\end_layout

\begin_layout Standard
Předpokládejme signál konečné délky 
\begin_inset Formula 
\[
g_{i}=f_{i}+n_{i},\;i=1,\ldots,N,
\]

\end_inset

kde 
\begin_inset Formula $n_{i}$
\end_inset

 představuje aditivní gaussovký šum.
 Potom 
\begin_inset Formula 
\[
G_{i}=F_{i}+N_{i},
\]

\end_inset

představuje signál převedený pomocí diskrétní waveletové transformace, která
 je určena maticí 
\begin_inset Formula $W_{i}$
\end_inset

, tzn.
 platí 
\begin_inset Formula 
\[
G_{i}=W_{i}g_{i}.
\]

\end_inset

K matici 
\begin_inset Formula $W_{i}$
\end_inset

 existuje inverzní matice 
\begin_inset Formula $W_{i}$
\end_inset

.
 Schéma odstranění šumu je potom následující.
\end_layout

\begin_layout Enumerate
Výpočet diskrétní waveletové transformace 
\begin_inset Formula $G_{i}=W_{i}g_{i}.$
\end_inset


\end_layout

\begin_layout Enumerate
Provedení prahování v transformační doméně a získání odhadu nezašuměného
 signálu v transformační doméně 
\begin_inset Formula $\hat{F}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Výpočet inverzní matice diskrétní waveletové transformace a získání odhadu
 nezašuměného 
\begin_inset Formula $\hat{f}=W_{i}^{-1}\hat{F}.$
\end_inset


\end_layout

\begin_layout Standard
Pro prahování lze použít tzv.
 měkké (
\emph on
soft
\emph default
) prahování definované následovně
\begin_inset Formula 
\[
\hat{F}=\left\{ \begin{array}{ccc}
\textnormal{sgn}\left(Y\right)\left(\left|Y\right|-t\right) & \ldots & \left|Y\right|\geq T,\\
0 & \ldots & \left|Y\right|<T,
\end{array}\right.
\]

\end_inset

a tvrdé (
\emph on
hard
\emph default
) prahování definované vztahem 
\begin_inset Formula 
\[
\hat{F}=\left\{ \begin{array}{ccc}
Y & \ldots & \left|Y\right|\geq T,\\
0 & \ldots & \left|Y\right|<T.
\end{array}\right.
\]

\end_inset

Rozdíl mezi měkkým a tvrdým prahováním je znázorněn na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Prahovani-1"

\end_inset

.
 Při použití měkkého prahování je odhad s vysokou pravděpodobností minimálně
 stejně hladký jako původní signál.
 Výpočetní náročnost metody je 
\begin_inset Formula $O(n)$
\end_inset

.
 Tvrdé prahování lépe zachovává hrany, naopak měkké prahování dává hladší
 (a líbivější) výsledky.
 Mnohdy se na detailní úrovně používá měkké prahování a na ostatní tvrdé.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Wavelet_Threshold.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\series bold
\emph on
A)
\series default
\emph default
 tvrdé prahování, 
\series bold
\emph on
B)
\series default
\emph default
 měkké prahování.
\begin_inset CommandInset label
LatexCommand label
name "fig:Prahovani-1"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Velký vliv na výsledek má volba hodnoty prahu.
 Nejčastěji se používá univerzální práh Donoho-Johnstone, a to jak kvůli
 rychlosti, tak kvůli automatickému nastavení.
 Práh 
\begin_inset Formula $T$
\end_inset

 je určen vztahem 
\begin_inset Formula 
\[
T=\hat{\sigma}\sqrt{2\log n},
\]

\end_inset

kde 
\begin_inset Formula $n$
\end_inset

 je délka signálu a 
\begin_inset Formula $\hat{\sigma}$
\end_inset

 je směrodatná odchylka.
 Idea je taková, že odstraníme koeficienty, které jsou menší než očekávané
 maximum předpokládaného šumu délky 
\begin_inset Formula $n$
\end_inset

.
 Často se používá jen pro první odhad prahu.
 V praxi se používají prahy nezávislé na velikosti signálu.
 
\end_layout

\begin_layout Chapter
Klasifikace bez učitele (shluková analýza)
\end_layout

\begin_layout Standard
Shlukovou analýzu neboli 
\emph on
clustering
\emph default
 používáme, když předem neznáme počet tříd.
 Nejprve zaveďme, co to je shluk.
 Po shluku požadujeme, aby byl kompaktní a dobře separovatelný od ostatních
 shluků.
 Definovat shluk formálně je složité a zatím neexistuje korektní definice.
\end_layout

\begin_layout Itemize

\series bold
Shluk:
\series default
 za shluk budeme považovat množinu 
\begin_inset Formula $C$
\end_inset

 splňující tři vlastnosti.
\end_layout

\begin_deeper
\begin_layout Enumerate
Neprázdnost, tj.
 
\begin_inset Formula $\exists a$
\end_inset

, 
\begin_inset Formula $a\in C$
\end_inset

.
\end_layout

\begin_layout Enumerate
Mezi každými dvěma body ve shluku existuje cesta, jejíž každý úsek je menší
 než 
\begin_inset Formula $t$
\end_inset

, kde 
\begin_inset Formula $t>0$
\end_inset

 je parametr zadaný uživatelem.
\end_layout

\begin_layout Enumerate
V datech neexistuje žádný bod 
\begin_inset Formula $b\notin C$
\end_inset

, na který by šlo z libovolného bodu shluku 
\begin_inset Formula $C$
\end_inset

 přeskočit skokem menším než 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
Tato definice shluku ovšem není korektní, a to z důvodu, že volba uživatelského
 parametru je subjektivní.
 V obecné definici můžeme shluk považovat za libovolnou podmnožinu dat,
 a tedy proces shlukování lze přirovnat k pokrytí celé množiny disjunktními
 podmnožinami.
 Je možné porovnávat různá shlukování a na základě kritéria kvality vybrat,
 které shlukování je nejlepší.
 Ani tím se ovšem nevyhneme problému subjektivity, protože volba kritéria
 kvality je také velice subjektivní.
 Spokojíme se tedy s tím, že dobré shlukování má malé shluky daleko od sebe.
\end_layout

\begin_layout Section
Wardovo kritérium
\end_layout

\begin_layout Standard
Jedna z možností jak určovat míru kvality shluků je Wardovo kritérium ve
 tvaru
\begin_inset Formula 
\[
J=J\left(N\right)=\sum\limits _{i=1}^{N}\sum\limits _{x\in C_{i}}\|x-m_{i}\|^{2},
\]

\end_inset

kde 
\begin_inset Formula $m_{i}$
\end_inset

 je těžiště shluku 
\begin_inset Formula $C_{i}$
\end_inset

, 
\begin_inset Formula $\forall i\in\hat{N}$
\end_inset

.
 Tímto kritériem lze srovnávat pouze dvě shlukování se stejným počtem shluků.
 V 
\begin_inset Formula $L_{2}$
\end_inset

 normě se vlastně jedná o součet rozptylů shluků v jednotlivých dimenzích.
 Dává nám tedy informaci o tom, zda jsou shluky 
\begin_inset Quotes gld
\end_inset

malé
\begin_inset Quotes grd
\end_inset

, ale už nám neřekne nic o tom, jak jsou daleko od sebe.
 Problémem je, že musíme mít pevně daný počet shluků 
\begin_inset Formula $N$
\end_inset

.
 Pokud by tomu tak nebylo, tak minimum bude nastávat pro shluky velikosti
 1.
 Tedy pro libovolné shlukování je funkce 
\begin_inset Formula $J\left(N\right)$
\end_inset

 monotónní a pro 
\begin_inset Formula $N$
\end_inset

 rovno počtu prvků, které klasifikujeme, je kritérium vždy rovno 0.
 Je tedy vidět, že shlukování je vlastně optimalizační úloha.
 Dalším problémem je, že kritérium předpokládá nekorelované příznaky a konvexní
 shluky.
 Tento se však dá vyřešit vhodnou transformací.
\end_layout

\begin_layout Section
Ostatní metody shlukování
\end_layout

\begin_layout Subsection
Sekvenční shlukování
\end_layout

\begin_layout Standard
Není potřeba znát 
\begin_inset Formula $N$
\end_inset

.
 Definujeme uživatelský parametr 
\begin_inset Formula $d$
\end_inset

 a vybereme bod jako zárodek shluku.
 Vezmeme další bod a pokud je jeho vzdálenost od shluku menší než 
\begin_inset Formula $d$
\end_inset

, tak ho zařadíme do shluku, pokud je vzdálenost větší než 
\begin_inset Formula $d$
\end_inset

, tak vytvoříme nový shluk.
 Je to rychlá metoda, ale strašně závisí na pořadí procházení dat a na volbě
 uživatelského parametru 
\begin_inset Formula $d$
\end_inset

.
 Reálně nepoužitelná metoda.
\end_layout

\begin_layout Subsection
Shlukování na základě grafů (
\emph on
graph based clustering
\emph default
)
\end_layout

\begin_layout Standard
Na datech zkonstruujeme graf a nalezneme jeho nejkratší kostru.
 Odstraníme-li libovolnou hranu, tak se kostra rozpadne na dvě komponenty,
 protože neobsahuje žádný cyklus.
 Pokud tedy nalezneme nejdelší hranu a odstraníme jí, dostaneme dva shluky.
 Stejným postupem můžeme pokračovat.
 Odstranění nejdelší hrany se ovšem neukazuje jako nejlepší volba.
 Vylepšením může být například odstranění hrany, která se nejvíce nehodí
 do okolí, tzn.
 v nějakém smyslu nekonzistentní hrany.
 Míru nekonzistence můžeme například volit takto: vezmeme bod a všechny
 hrany, které do něj vedou 
\begin_inset Formula $\rightarrow$
\end_inset

 spočteme průměr délky hran a poměr s nejdelší hranou 
\begin_inset Formula $\rightarrow$
\end_inset

 získáváme určitou míru nekonzistence nejdelší hrany.
 Tato metoda není zas tak špatná, ale v praxi se moc neprosadila.
\end_layout

\begin_layout Section
Iterativní metody shlukování
\end_layout

\begin_layout Standard
Tyto metody typicky potřebují znalost počtu shluků 
\begin_inset Formula $N$
\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset Formula $N$
\end_inset

-
\emph on
means clustering
\end_layout

\begin_layout Standard
Předpokládáme, že známe počet shluků 
\begin_inset Formula $N$
\end_inset

.
 Postup metody je následující.
\end_layout

\begin_layout Enumerate
Vybereme 
\begin_inset Formula $N$
\end_inset

 těžišť shluků.
\end_layout

\begin_layout Enumerate
Klasifikujeme každý bod do těchto 
\begin_inset Formula $N$
\end_inset

 shluků pomocí kritéria minimální vzdálenosti.
\end_layout

\begin_layout Enumerate
Aktualizujeme polohy těžišť shluků a pokud se změnily, opakujeme krok 2,
 jinak končíme.
\end_layout

\begin_layout Standard
Jedná se o velmi rychlou metodu a často dává dobré výsledky.
 Algoritmus neminimalizuje Wardovo kritérium 
\begin_inset Formula $J$
\end_inset

 a je silně závislý na počátečních podmínkách.
 Kvůli této závislosti může docházet ke špatnému shlukování, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:N_means_clustering"

\end_inset

.
 Pokud použijeme algoritmus na data s různými počátečními podmínkami a pokaždé
 konverguje jinam, tak úloha není vhodná ke shlukování.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/N_means.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka závislosti procesu shlukování při použití 
\begin_inset Formula $N$
\end_inset

-means na počátečních podmínkách.
 Červené body značí těžiště shluku.
\begin_inset CommandInset label
LatexCommand label
name "fig:N_means_clustering"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Iterační minimalizace Wardova kritéria
\end_layout

\begin_layout Standard
Předpokládáme, že známe počet shluků 
\begin_inset Formula $N$
\end_inset

.
 Postup metody je následující.
\end_layout

\begin_layout Enumerate
Vezmeme počáteční rozdělení shluků, např.
 z 
\begin_inset Formula $N$
\end_inset

-means clustering.
\end_layout

\begin_layout Enumerate
Pro každý bod provedeme minimalizaci Wardova kritéria, tzn.
 přesouváme ho mezi shluky a hledáme ten, pro který je Wardovo kritérium
 nejmenší.
\end_layout

\begin_layout Enumerate
Opakujeme pro všechny body, dokud se přesouvají.
\end_layout

\begin_layout Standard
Algoritmus opět závisí na počátečních podmínkách, ale už ne tolik jako předchozí
 metoda.
 Přestože je metoda optimální v každém kroku, nemusí nalézt globální minimum
 Wardova kritéria.
 Nalezne lokální minimum, které závisí na počátečních podmínkách.
\end_layout

\begin_layout Note
Isodata: balík procedur na shlukování (komerční nástroj).
 Základem jsou výše zmíněné metody v kombinaci s hierarchickými metodami.
 
\end_layout

\begin_layout Section
Hierarchické metody shlukování
\end_layout

\begin_layout Standard
Hierarchické metody se používají, pokud neznáme počet shluků 
\begin_inset Formula $N$
\end_inset

.
\end_layout

\begin_layout Subsection
Aglomerativní přístup
\end_layout

\begin_layout Standard
Na začátku je každý bod brán jako jeden shluk a na základě vzdálenosti/podobnost
i shluků vždy dva nejpodobnější spojíme.
 Pokračujeme až do nějaké koncové podmínky.
 Otázkou tedy je jak volit koncovou podmínku a jak porovnávat vzdálenost/podobno
st shluků.
 Nevýhodou těchto metod je, že mohou vzniknout nejednoznačnosti už na začátku
 shlukování, které se projeví až později ve velkých shlucích.
 Předchozí kroky není možné změnit.
 Aglomerativní metody dělíme podle kritéria, dle kterého se vybírají nejpodobněj
ší shluky.
\end_layout

\begin_layout Subsubsection
Volba kritéria pro spojení shluků
\end_layout

\begin_layout Standard
Chceme definovat metriku (stačí pseudometrika nebo semimetrika) na množinách
 (shlucích).
 Nabízí se několik možností: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
 & \textrm{Nejbližší soused:} & d\left(A,B\right) & =\min\limits _{a,b}\rho\left(a,b\right),\\
 & \textrm{Nejvzdálenější soused:} & d\left(A,B\right) & =\max\limits _{a,b}\rho\left(a,b\right),\\
 & \textrm{Centroidní metoda:} & d\left(A,B\right) & =\rho\left(m_{A},m_{B}\right),\\
 & \textrm{Hausdorfova metrika:} & d\left(A,B\right) & =\max\left(\max\limits _{a}\rho\left(a,B\right),\max\limits _{b}\rho\left(b,A\right)\right),\\
 &  & d\left(A,B\right) & =J\left(A\cup B\right)-J\left(A,B\right).
\end{align*}

\end_inset

Předposlední uvedená metrika je tzv.
 Hausdorfova metrika.
 Její výpočet je ovšem zbytečně náročný, a proto si vystačíme s jednoduššími
 metrikami.
 Je jasné, že shlukovací proces na zvolené metrice silně závisí a volba
 metriky je tedy subjektivní záležitost související s požadavky na výsledné
 shluky.
\end_layout

\begin_layout Subsection
Divizivní přístup
\end_layout

\begin_layout Standard
Divizní metody berou množinu bodů, kterou mají zpracovat, jako jeden shluk
 a ten dále dělí na menší shluky, čímž vytváří hierarchický systém.
 V každém kroku vybíráme jeden shluk a ten rozdělíme na dva nové.
 Je tedy nutné vždy vyřešit otázku, který shluk budeme dělit a jakým způsobem
 ho budeme dělit.
 V každém kroku tedy řešíme malou úlohu divizivního shlukování.
 Pokud budeme dělit shluky bez nějaké koncové podmínky, získáme nakonec
 jednoprvkové shluky.
 Nevýhodou těchto metod je, že nalezení optimálního rozkladu množiny 
\begin_inset Formula $n$
\end_inset

 objektů na dvě podmnožiny vyžaduje prozkoumání 
\begin_inset Formula $2^{n-1}-1$
\end_inset

 možností.
 Tento postup je kvůli exponenciální časové složitosti prakticky proveditelný
 jen pro malý počet objektů.
\end_layout

\begin_layout Subsubsection
MacNaughton–Smithova metoda
\end_layout

\begin_layout Standard
Tato metoda se snaží snížit časovou náročnost divizních algoritmů až na
 kvadratickou, ale za cenu toho, že výsledné rozdělení nemusí být optimální.
 Je tedy aplikovatelná i na rozsáhlejší množiny objektů při nevelkých nárocích
 na výpočetní čas.
 V porovnání s aglomerativními přístupy je ale stále pomalejší.
 
\end_layout

\begin_layout Standard
Pomocí středních vzdáleností vybereme bod uvnitř shluku a vytvoříme nový
 shluk.
 Na základě rozdílů středních vzdáleností bodů z původního shluku a bodů
 ze shluku nového postupně rozhodujeme kam zařadit body původního shluku.
 Rozhodujeme tedy, zda bod necháme v původním shluku, nebo ho přesuneme
 do shluku nového.
 Výhodou oproti aglomerativnímu přístupu jsou jednoznačnější výsledky pro
 větší shluky.
\end_layout

\begin_layout Subsubsection
Volba optimálního počtu shluků
\end_layout

\begin_layout Standard
Pokud nemáme počet shluků 
\begin_inset Formula $N$
\end_inset

 pevně dán, je úloha obtížná.
 Rozdělujeme jeden shluk na malé shluky a počítáme hodnotu kritéria 
\begin_inset Formula $J_{i}$
\end_inset

.
 Pokud spočteme 
\begin_inset Formula $J_{i}$
\end_inset

 pro 
\begin_inset Formula $i\in\hat{N}$
\end_inset

, můžeme tyto hodnoty vynést do grafu v závislosti na 
\begin_inset Formula $N$
\end_inset

.
 Optimální počet shluků je pak 
\begin_inset Formula $N_{0}$
\end_inset

 takové, kde derivace vynesené křivky začne růst o poznání pomaleji viz
 obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Volba_poctu_shluku"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Optimalni_N_shluku.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ukázka vynášení globálního kritéria pro spočítané shluky a předpokládané
 optimální shlukování.
\begin_inset CommandInset label
LatexCommand label
name "fig:Volba_poctu_shluku"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Note
Existuje ještě tzv.
 
\emph on
model based parametric clustering
\emph default
, což je fitování dat pomocí gaussovské směsi.
 Problémem je určení počtu komponent směsi.
 
\end_layout

\begin_layout Section
Další kritéria kvality
\begin_inset CommandInset label
LatexCommand label
name "subsec:Kriteria_kvality"

\end_inset


\end_layout

\begin_layout Standard
Kromě Wardova kritéria existují i jiná kritéria, která lze použít na porovnávání
 kvality shlukování.
 Definujme si nejprve následující pojmy.
\end_layout

\begin_layout Itemize

\series bold
\emph on
Between cluster matrix
\emph default
 (BCM):
\series default
 kovarianční matice z těžišť všech shluků
\begin_inset Formula 
\[
B=\stackrel[i=1]{N}{\sum}n_{i}\left(m_{i}-m\right)\left(m_{i}-m\right)^{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize

\series bold
\emph on
Within cluster matrix
\emph default
 (WCM):
\series default
 kovarianční matice shluků 
\begin_inset Formula $W_{i}$
\end_inset

 a průměrná kovarianční matice
\begin_inset Formula 
\begin{align*}
W & =\stackrel[i=1]{N}{\sum}W_{i},\\
W_{i} & =\underset{x\in C_{i}}{\sum}\left(x-m_{i}\right)\left(x-m_{i}\right)^{T}.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize

\series bold
\emph on
Total scatter matrix
\emph default
 (TSM):
\series default
 kovarianční matice všech bodů bez ohledu na shluk
\begin_inset Formula 
\[
T=\underset{x}{\sum}\left(x-m\right)\left(x-m\right)^{T}.
\]

\end_inset


\end_layout

\begin_layout Standard
V předchozích vztazích je 
\begin_inset Formula $n_{i}$
\end_inset

 počet prvků a 
\begin_inset Formula $m_{i}$
\end_inset

 těžiště shluku 
\begin_inset Formula $C_{i}$
\end_inset

, dále 
\begin_inset Formula $m$
\end_inset

 je celkové těžiště a 
\begin_inset Formula $x$
\end_inset

 prvek shluku.
 Pro tyto matice platí vztah 
\begin_inset Formula $T=W+B$
\end_inset

.
 Další kritéria můžeme tvořit následovně
\begin_inset Formula 
\[
\textrm{tr}\left(W\right)=\textrm{tr}\left(\stackrel[i=1]{N}{\sum}W_{i}\right)=\stackrel[i=1]{N}{\sum}\textrm{tr}\left(W_{i}\right)=\stackrel[i=1]{N}{\sum}\underset{x\in C_{i}}{\sum}\left\Vert x-m_{i}\right\Vert ^{2}=J.
\]

\end_inset

To tedy znamená, že minimalizace stopy WCM je ekvivalentní minimalizaci
 Wardova kritéria.
 Dalšími možnostmi jsou 
\begin_inset Formula 
\begin{align*}
\min\det\left(W\right), &  & \max\textrm{tr}\left(W^{-1}B\right).
\end{align*}

\end_inset


\end_layout

\begin_layout Section
Aplikace v 
\emph on
image processing
\end_layout

\begin_layout Itemize
Segmentace: špatně definovaná úloha, protože objekt je shluk, shluk je objekt
 a nikdo neví, co je přesně objekt.
\end_layout

\begin_layout Itemize
Klasifikace multispektrálních obrázků.
\end_layout

\begin_layout Itemize
Shlukování v parametrickém prostoru: RANSAC, registrace a matching.
\end_layout

\begin_layout Chapter
Klasifikace s učitelem
\end_layout

\begin_layout Standard
Při klasifikaci s učitelem pracujeme s tzv.
 trénovacími daty, tj.
 daty se známou klasifikací, na kterých 
\begin_inset Quotes gld
\end_inset

naladíme
\begin_inset Quotes grd
\end_inset

 klasifikátor, a ten pak můžeme použít ke klasifikaci.
 
\end_layout

\begin_layout Itemize

\series bold
Trénovací množina:
\series default
 měla by obsahovat reprezentanty všech tříd a pro každou třídu všechny hlavní
 typy příznaků.
 Měla by být spolehlivě klasifikovaná (bez chyb) a dostatečně velká.
 Vybírat by jí měl někdo, kdo rozumí dané oblasti, odkud data pochází.
\end_layout

\begin_layout Itemize

\series bold
Klasifikátor:
\series default
 nechť je každá třída charakterizována svojí diskriminační funkcí 
\begin_inset Formula $g_{i}\left(x\right)$
\end_inset

, pak klasifikací rozumíme maximalizaci diskriminační funkce, tzn.
 pokud platí 
\begin_inset Formula $g_{i}\left(x\right)>g_{j}\left(x\right)$
\end_inset

, 
\begin_inset Formula $\forall j\neq i$
\end_inset

, tak 
\begin_inset Formula $x$
\end_inset

 patří do 
\begin_inset Formula $i$
\end_inset

-té třídy.
 Diskriminační funkce definuje rozhodovací hranici v příznakovém prostoru.
\end_layout

\begin_layout Standard
Při trénování klasifikátoru může nastat jev, který se nazývá přetrénování
 dat.
 K tomuto jevu dochází, pokud se snažíme mít data až příliš dokonale klasifikova
ná, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pretrenovani"

\end_inset

.
 Pokud například v datech bude odlehlé pozorování nebo chyba, a my přesto
 budeme chtít, aby klasifikátor klasifikoval trénovací množinu naprosto
 správně, tak po natrénování při skutečné klasifikaci nebude fungovat.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Pretrenovani.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Správné klasifikování a přetrénování dat.
\begin_inset CommandInset label
LatexCommand label
name "fig:Pretrenovani"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Minimum distance klasifikátory
\end_layout

\begin_layout Standard
Jedná se o jednoduché klasifikátory, které klasifikují data podle nejmenší
 vzdálenosti od tříd.
\end_layout

\begin_layout Subsection
NN klasifikátor (
\emph on
Nearest neighbor
\emph default
)
\end_layout

\begin_layout Standard
Tento klasifikátor pracuje s diskriminačními funkcemi ve tvaru 
\begin_inset Formula 
\[
g_{i}\left(x\right)=\frac{1}{\textrm{dist}\left(x,\omega_{i}\right)},
\]

\end_inset

kde 
\begin_inset Formula $\omega_{i}$
\end_inset

 je nejbližší soused.
 Obecně vytváří tento klasifikátor lomenou čáru, která odděluje jednotlivé
 třídy.
 Výhodou je, že při klasifikaci respektuje jednotlivé body.
 Naopak nevýhodou je extrémní citlivost na odlehlá pozorování.
 Vylepšením může být použití vzdálenosti k nejbližšímu těžišti místo k nejbližší
mu sousedovi.
 Tím získáme robustnost na odlehlá pozorování, ale klasifikátor už nebude
 respektovat tvar ani počet prvků jednotlivých tříd.
\end_layout

\begin_layout Standard
Pokud máme třídy obsahující vždy jen jeden bod, tak NN klasifikátor vytvoří
 tzv.
 Voronoiovy polygony.
 Tyto polygony rozdělují rovinu na oblasti 
\begin_inset Formula $S\left(x\right)$
\end_inset

, kde 
\begin_inset Formula $x$
\end_inset

 je prvek trénovací množiny, pro které platí, že libovolný prvek této oblasti
 
\begin_inset Formula $y\in S\left(x\right)$
\end_inset

 je blíže k bodu 
\begin_inset Formula $x$
\end_inset

 než k jakémukoliv jinému prvku trénovací množiny.
 Pokud uvažujeme eukleidovskou metriku, tak dostaneme vždy konvexní polygony.
 Při volbě jiné metriky můžeme dostat i nekonvexní polygony.
 Duální úlohou k hledání Voronoiových polygonů je tzv.
 Delaunayho triangulace.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Voronoiovy_polygony.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Voronoiovy polygony.
 Body trénovací množiny jsou znázorněny červenými tečkami a rozhodovací
 hranice jsou zelené.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Formula $k$
\end_inset

-NN klasifikátor (
\emph on

\begin_inset Formula $k$
\end_inset

-Nearest neighbor
\emph default
)
\end_layout

\begin_layout Standard
Jiným vylepšením NN klasifikátoru, které je robustní na odlehlá pozorování,
 je 
\begin_inset Formula $k$
\end_inset

-NN klasifikátor.
 Existují dvě verze tohoto klasifikátoru.
\end_layout

\begin_layout Enumerate
Najdu 
\begin_inset Formula $k$
\end_inset

 nejbližších sousedů a podle největšího zastoupení sousedů ve třídách klasifikuj
i do určité třídy.
 Tato metoda nám nedá vždy odpověď, není deterministická, a proto je nutné
 další rozhodovací kritérium pro případ, kdy obdržíme z více tříd stejný
 počet sousedů.
 Výhodou ovšem je, že jsme schopni odhadnout složitost.
\end_layout

\begin_layout Enumerate
Hledáme nejbližší sousedy, dokud jich z jedné třídy není 
\begin_inset Formula $k$
\end_inset

, a do této třídy poté klasifikujeme.
 Jedná se o deterministickou úlohu, ale složitost není možné odhadnout.
 V praxi se používá více než první metoda.
\end_layout

\begin_layout Standard
Otázkou je jak správně volit hodnotu 
\begin_inset Formula $k$
\end_inset

.
 Čím menší 
\begin_inset Formula $k$
\end_inset

 zvolíme, tím je metoda náchylnější na přetrénování.
 Obecně lze říci, že by měla být řádově menší než počet prvků trénovací
 množiny.
 Většinou se volí 
\begin_inset Formula $k\in\left\langle 2,5\right\rangle $
\end_inset

.
 Metoda se hodí pro menší skupiny dat.
\end_layout

\begin_layout Section
Lineární klasifikátory
\end_layout

\begin_layout Standard
Chceme nalézt nadrovinu v příznakovém prostoru, která bude oddělovat jednotlivé
 třídy.
 Úlohu klasifikace tedy převádíme na jednodušší úlohu hledání hranice.
 Klasifikace ovšem nemusí být správná.
 Jak bychom tedy tuto hranici hledali? Začneme osou mezi dvěma body z různých
 tříd a postupně přidáváme další body.
 Pokud 
\begin_inset Quotes gld
\end_inset

padají
\begin_inset Quotes grd
\end_inset

 na správnou stranu přímky, tak s přímkou nic neděláme.
 V opačném případě přímku posouváme a nakláníme, aby byly body správně separovan
é.
 Lepší přístup je upravovat přímku vždy, i když padají nové body na správnou
 stranu, a to např.
 minimalizací rozdílů středních vzdáleností od přímky.
\end_layout

\begin_layout Subsection

\emph on
Support vector machine
\emph default
 (SVM)
\end_layout

\begin_layout Standard
Support vector machine je metoda strojového učení, která hledá nadrovinu
 takovou, že v prostoru příznaků optimálně rozděluje trénovací data.
 Optimální nadrovina je taková, že body leží v opačných poloprostorech a
 hodnota minima vzdáleností bodů od roviny je co největší.
 Jinými slovy, okolo nadroviny je na obě strany co nejširší pruh bez bodů,
 tzn.
 maximální odstup (
\emph on
maximal margin
\emph default
).
 Metoda se tedy snaží konstruovat dvě rovnoběžné nadroviny tak, aby separovaly
 třídy a byly co nejdále od sebe.
 Na popis těchto dvou nadrovin stačí pouze body, které nadroviny protínají.
 Tyto body se nazývají podpůrné vektory (
\emph on
support vectors
\emph default
) a odtud název metody.
 Vlastní rozhodovací nadrovina je s nalezenými nadrovinami rovnoběžná a
 vede mezi nimi.
 SVM je ze své přirozenosti binární, tedy rozděluje data do dvou tříd a
 rozdělující nadrovina je lineární funkcí v prostoru příznaků.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/SVM_small_large_margin.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Princip SVM: porovnání neoptimálního a optimálního lineárního klasifikátoru.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nevýhodou této metody je, že podpůrné vektory jsou většinou extremální body.
 Metoda je tedy velice citlivá na odlehlá pozorování a šum.
 Jistým vylepšením je zavedení ztrátové funkce, kterou budeme minimalizovat.
 Do ztrátové funkce budou přispívat body, které jsou špatně klasifikované.
 Už tedy nebudeme vyžadovat, aby rozdělovací přímka dělila všechny body,
 tzv.
 
\emph on
hard margin
\emph default
 přístup, ale umožníme neúplné rozdělení, tzv.
 
\emph on
soft margin
\emph default
 přístup, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SVM_kernel"

\end_inset

.
 Body, které jsou špatně klasifikované, poté penalizujeme a celkově se snažíme
 minimalizovat zvolenou ztrátovou funkci.
 Dále také tato metoda nezohledňuje počty bodů v jednotlivých množinách
 a jejich tvar.
 Rozhodovací přímku prostě posune v poměru k té množině, kde je více prvků.
\end_layout

\begin_layout Standard
Často nemusí existovat dvě rozdělující přímky, pokud nejsou třídy lineárně
 separovatelné.
 Důležitou součástí techniky SVM potom je tzv.
 jádrová transformace (
\emph on
kernel transformation
\emph default
).
 Jedná se o transformaci prostoru příznaků dat do prostoru transformovaných
 příznaků (typicky vyšší dimenze).
 Tato jádrová transformace umožňuje převést původně lineárně neseparovatelnou
 úlohu na úlohu lineárně separovatelnou v prostoru vyšší dimenze, na kterou
 lze dále aplikovat optimalizační algoritmus pro nalezení rozdělující nadroviny.
 Pokud takovou nadrovinu získáme, tak zpětnou transformací do původního
 prostoru příznaků získáme nelineární rozhodovací nadplochu.
 Princip jádrové transformace je uveden na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SVM_kernel"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/SVM_Soft_Kernel.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Princip SVM: soft margin přístup a jádrová transformace.
\begin_inset CommandInset label
LatexCommand label
name "fig:SVM_kernel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Bayesův klasifikátor
\end_layout

\begin_layout Standard
Idea Baesova klasifikátoru je, že hodnoty příznaků jsou náhodné veličiny
 a příslušnost k třídám modelujeme pomocí hustoty pravděpodobnosti.
 Jedná se tedy o statistický klasifikátor, který je založen na Bayesově
 principu
\begin_inset Formula 
\begin{equation}
P\left(\omega_{i}\left|x\right.\right)=\frac{p\left(x\left|\omega_{i}\right.\right)P\left(\omega_{i}\right)}{p\left(x\right)},\label{eq:Bayesuv_vzorec}
\end{equation}

\end_inset

kde
\end_layout

\begin_layout Itemize

\series bold
podmíněná pravděpodobnost výskytu ve třídách (
\emph on
class-conditional probability
\emph default
): 
\series default

\begin_inset Formula $p\left(x\left|\omega_{i}\right.\right)$
\end_inset

 vyjadřuje pravděpodobnost, že na prvku z 
\begin_inset Formula $i$
\end_inset

-té třídy můžeme naměřit příznakový vektor 
\begin_inset Formula $x$
\end_inset

;
\end_layout

\begin_layout Itemize

\series bold
apriorní pravděpodobnost 
\begin_inset Formula $i$
\end_inset

-té třídy (
\emph on
a prior probability
\emph default
): 
\series default

\begin_inset Formula $P\left(\omega_{i}\right)$
\end_inset

 vyjadřuje pravděpodobnost výskytu 
\begin_inset Formula $i$
\end_inset

-té třídy v 
\begin_inset Formula $\varOmega$
\end_inset

, tzn.
 v 
\begin_inset Quotes gld
\end_inset

reálu
\begin_inset Quotes grd
\end_inset

 ne jen v trénovací množině;
\end_layout

\begin_layout Itemize

\series bold
aposteriorní pravděpodobnost (
\emph on
a posterior probability
\emph default
):
\series default
 
\begin_inset Formula $P\left(\omega_{i}\left|x\right.\right)$
\end_inset

 vyjadřuje pravděpodobnost, že se v 
\begin_inset Formula $i$
\end_inset

-té třídě může vyskytnout prvek s příznakovým vektorem 
\begin_inset Formula $x$
\end_inset

; 
\end_layout

\begin_layout Itemize

\series bold
celková pravděpodobnost (
\emph on
total probability
\emph default
):
\series default
 
\begin_inset Formula $p\left(x\right)=\stackrel[j=1]{c}{\sum}p\left(x\left|\omega_{j}\right.\right)P\left(\omega_{j}\right)$
\end_inset

 vyjadřuje pravděpodobnost, že naměříme příznakový vektor 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Standard
Cílem je maximalizovat aposteriorní hustotu pravděpodobnosti a Bayesův vzorec
 používáme proto, že nejsme schopni aposteriorní pravděpodobnost spočítat
 přímo.
 Ze vztahu 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Bayesuv_vzorec"

\end_inset

 ovšem plyne, že maximalizace aposteriorní pravděpodobnosti je ekvivalentní
 maximalizaci součinu 
\begin_inset Formula $p\left(x\left|\omega_{i}\right.\right)P\left(\omega_{i}\right)$
\end_inset

 a v případě shodných apriorních pravděpodobností pouze maximalizaci pravděpodob
nosti 
\begin_inset Formula $p\left(x\left|\omega_{i}\right.\right)$
\end_inset

.V řeči diskriminačních funkcí vypadá zápis následovně
\begin_inset Formula 
\begin{equation}
g_{i}\left(x\right)=P\left(\omega_{i}\left|x\right.\right)\quad\Longleftrightarrow\quad g_{i}\left(x\right)=p\left(x\left|\omega_{i}\right.\right)P\left(\omega_{i}\right)\quad\Longleftrightarrow\quad g_{i}\left(x\right)=\ln p\left(x\left|\omega_{i}\right.\right)+\ln P\left(\omega_{i}\right).\label{eq:Bayes_diskriminacni_fce}
\end{equation}

\end_inset

 Dále se budeme zabývat tím, jak tyto pravděpodobnosti odhadovat.
\end_layout

\begin_layout Subsection
Odhady apriorní pravděpodobnosti
\end_layout

\begin_layout Standard
Apriorní pravděpodobnosti 
\begin_inset Formula $P(\omega_{i})$
\end_inset

 určíme buď z relativních četností trénovací množiny, v tom případě je nutné
 zajistit, aby četnosti odpovídaly skutečnosti.
 Další možností je předpokládat pro všechny třídy stejnou apriorní pravděpodobno
st, tj.
 
\begin_inset Formula $P(\omega_{i})=\frac{1}{c},\ \forall i\in\hat{c}$
\end_inset

, kde 
\begin_inset Formula $c$
\end_inset

 je počet tříd.
\end_layout

\begin_layout Subsection
Parametrické odhady class-conditional pravděpodobnosti
\end_layout

\begin_layout Standard
Parametrické odhady můžeme použít pouze v případě, že známe hustotu pravděpodobn
osti.
 Předpokládejme tedy, že class-conditional pravděpodobnost má normální (gaussovs
kou) hustotu pravděpodobnosti, a budeme odhadovat parametry Gaussova rozdělení.
\end_layout

\begin_layout Subsubsection
\begin_inset Formula $1$
\end_inset

-dimenzionální příznakový prostor
\end_layout

\begin_layout Standard
Pro jednorozměrný příznakový vektor máme hustotu pravděpodobnosti pro příznak
 ve tvaru
\begin_inset Formula 
\[
p\left(x\right)=\frac{1}{\sqrt{2\pi\sigma^{2}}}\exp\left[-\frac{1}{2}\left(\frac{x-\mu}{\sigma}\right)^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Odhad pomocí výběrových statistik:
\series default
 pro nejjednodušší odhad můžeme použít výběrový průměr a rozptyl
\begin_inset Formula 
\begin{align*}
\hat{\mu} & =\frac{1}{n}\stackrel[k=1]{n}{\sum}x_{k}, & \hat{\sigma}^{2} & =\frac{1}{n}\stackrel[k=1]{n}{\sum}\left(x_{k}-\hat{\mu}\right)^{2}.
\end{align*}

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Metoda maximální věrohodnosti (
\emph on
maximal likelihood estimator
\emph default
): 
\series default
předpokládejme, že máme soubor iid náhodných veličin 
\begin_inset Formula $x_{1},x_{2},\ldots,x_{N}$
\end_inset

 a jejich hustotu pravděpodobnosti uvažujeme jako funkci parametrů 
\begin_inset Formula $\vec{\theta}=\left(\theta_{1},\theta_{2}\ldots\theta_{k}\right)$
\end_inset

, tzn.
 
\begin_inset Formula $p\left(x\left|\vec{\theta}\right.\right)$
\end_inset

.
 V našem případě se jedná o prvky z trénovací množiny.
 Zaveďme věrohodnostní funkci 
\begin_inset Formula 
\[
L\left(x_{1},x_{2},\ldots,x_{N}\left|\vec{\theta}\right.\right)=\stackrel[i=1]{N}{\prod}p\left(x_{i}\left|\vec{\theta}\right.\right)\quad\Longleftrightarrow\quad\varLambda=\ln L\left(x_{1},x_{2},\ldots,x_{N}\left|\vec{\theta}\right.\right)=\stackrel[i=1]{N}{\sum}\ln p\left(x_{i}\left|\vec{\theta}\right.\right).
\]

\end_inset

Maximálně věrohodný odhad parametrů dostáváme řešením maximalizační úlohy
\begin_inset Formula 
\[
\hat{\vec{\theta}}_{MLE}=\underset{\vec{\theta}\in\Theta}{\arg\max}L\left(x_{1},x_{2},\ldots,x_{N}\left|\vec{\theta}\right.\right),
\]

\end_inset

což je ekvivalentní hledání extrému funkce 
\begin_inset Formula $\varLambda$
\end_inset

.
 Spočteme tedy její parciální derivace podle parametrů 
\begin_inset Formula $\theta_{1},\theta_{2}\ldots\theta_{k}$
\end_inset

 a položíme je rovny 0.
 Řešením této soustavy rovnic získáme požadovaný odhad parametrů.
\end_layout

\begin_layout Subsubsection
\begin_inset Formula $d$
\end_inset

-dimenzionální příznakový prostor
\end_layout

\begin_layout Standard
V
\begin_inset Formula $d$
\end_inset

-dimenzionálním případě máme hustotu pravděpodobnosti pro příznakový vektor
 ve tvaru
\begin_inset Formula 
\[
p_{d}\left(\vec{x}\right)=\frac{1}{\left(2\pi\right)^{\nicefrac{d}{2}}\sqrt{\left|\varSigma\right|}}\exp\left[-\frac{1}{2}\left(\vec{x}-\vec{\mu}\right)^{T}\varSigma^{-1}\left(\vec{x}-\vec{\mu}\right)\right],
\]

\end_inset

kde 
\begin_inset Formula $\varSigma_{i,j}=\varSigma_{j,i}=\textrm{Cov}\left(x_{i},x_{j}\right)$
\end_inset

, tzn.
 jedná se o kovarianci 
\begin_inset Formula $i$
\end_inset

-tého a 
\begin_inset Formula $j$
\end_inset

-tého příznaku.
 Matici 
\begin_inset Formula $\varSigma$
\end_inset

 nazýváme kovarianční maticí.
 Každá třída má tedy vlastní Gaussovu hustotu pravděpodobnosti s vlastní
 kovarianční maticí.
\end_layout

\begin_layout Itemize

\series bold
Odhad pomocí výběrových statistik:
\series default
 pro nejjednodušší odhad můžeme použít
\begin_inset Formula 
\begin{align*}
\hat{\vec{\mu}} & =\frac{1}{n}\stackrel[k=1]{n}{\sum}\vec{x}_{k}, & \hat{\varSigma} & =\frac{1}{n}\stackrel[k=1]{n}{\sum}\left(\vec{x}-\hat{\vec{\mu}}\right)\left(\vec{x}-\hat{\vec{\mu}}\right)^{T}.
\end{align*}

\end_inset


\end_layout

\begin_layout Note
Pro připomenutí: mějme náhodné veličiny 
\begin_inset Formula $x$
\end_inset

 a 
\begin_inset Formula $y$
\end_inset

.
 Kovarianci a korelaci definujeme následovně
\begin_inset Formula 
\begin{align*}
\textrm{Cov}\left(x,y\right) & =\mathbb{E}\left[x-\mathbb{E}\left[x\right]\right]\mathbb{E}\left[y-\mathbb{E}\left[y\right]\right], & \textrm{Cor}\left(x,y\right) & =\frac{\textrm{Cov}\left(x,y\right)}{\sqrt{\textrm{Var}\left(x\right)\textrm{Var}\left(y\right)}}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Je důležité si uvědomit, co vlastně udává kovarianční matice 
\begin_inset Formula $\varSigma$
\end_inset

.
 Z její konstrukce víme, že matice vypadá takto
\begin_inset Formula 
\[
\varSigma=\left(\begin{array}{cccc}
\sigma_{1}^{2} & \textrm{Cov}\left(x_{1},x_{2}\right) & \cdots & \textrm{Cov}\left(x_{1},x_{d}\right)\\
\textrm{Cov}\left(x_{1},x_{2}\right) & \sigma_{2}^{2} & \cdots & \textrm{Cov}\left(x_{2},x_{d}\right)\\
\vdots & \vdots & \ddots & \vdots\\
\textrm{Cov}\left(x_{1},x_{d}\right) & \textrm{Cov}\left(x_{2},x_{d}\right) & \cdots & \sigma_{d}^{2}
\end{array}\right),
\]

\end_inset

tzn.
 na diagonále máme rozptyly jednotlivých příznaků a mimo diagonálu jejich
 vzájemné kovariance.
 Je také patrné, že je kovarianční matice symetrická.
 Vlastní vektory kovarianční matice nám udávají vychýlení vrstevnic (v contour
 plotu) a vlastní čísla udávají rozptyly v souřadné soustavě dané vlastními
 vektory.
 Rozdělovací hranice mezi jednotlivými třídami jsou v 
\begin_inset Formula $d$
\end_inset

-dimenzionálním příznakovém prostoru kuželosečky.
 
\end_layout

\begin_layout Standard
Nyní uvažujme pouze 
\begin_inset Formula $2$
\end_inset

-dimenzionální příznakový prostor.
 Kovarianční matici máme tedy ve tvaru
\begin_inset Formula 
\[
\varSigma=\left(\begin{array}{cc}
\sigma_{1}^{2} & \textrm{Cov}\left(x_{1},x_{2}\right)\\
\textrm{Cov}\left(x_{1},x_{2}\right) & \sigma_{2}^{2}
\end{array}\right).
\]

\end_inset

Poměr vlastních čísel nám udává, jak moc je elipsa reprezentující gaussovskou
 hustotu (v contour plotu) 
\begin_inset Quotes gld
\end_inset

sešláplá
\begin_inset Quotes grd
\end_inset

.
 Pokud dosadíme tvar hustoty pravděpodobnosti příznakového vektoru do diskrimina
ční funkce 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:Bayes_diskriminacni_fce"

\end_inset

 dostáváme pro 
\begin_inset Formula $i$
\end_inset

-tou třídu
\begin_inset Formula 
\begin{equation}
g_{i}\left(\vec{x}\right)=-\frac{1}{2}\left(\vec{x}-\vec{\mu}\right)^{T}\varSigma_{i}^{-1}\left(\vec{x}-\vec{\mu}\right)-\ln2\pi-\frac{1}{2}\ln\left|\varSigma_{i}\right|+\ln P\left(\omega_{i}\right).\label{eq:Bayes_2D_diskriminacnci_fce}
\end{equation}

\end_inset

Klasifikace je pro nás tedy v tomto případě ekvivalentní porovnávání dvou
 gaussovských rozdělení.
 V případě, že máme dvě gaussovská rozdělení, která mají stejné kovarianční
 matice a jsou od sebe pouze posunutá, dostáváme jako rozhodovací hranici
 přímku.
 Toto plyne z řešení rovnosti
\begin_inset Formula 
\begin{align*}
g_{1}\left(\vec{x}\right) & =g_{2}\left(\vec{x}\right)\quad\Longleftrightarrow\quad g_{1}\left(\vec{x}\right)-g_{2}\left(\vec{x}\right)=0.
\end{align*}

\end_inset

Protože mám stejné kovarianční matice a platí vztah (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Bayes_2D_diskriminacnci_fce"

\end_inset

), dostáváme
\begin_inset Formula 
\begin{align*}
0 & =-\frac{1}{2}\left(\vec{x}-\vec{\mu}_{1}\right)^{T}\varSigma^{-1}\left(\vec{x}-\vec{\mu}_{1}\right)+\ln P\left(\omega_{1}\right)+\frac{1}{2}\left(\vec{x}-\vec{\mu}_{2}\right)^{T}\varSigma^{-1}\left(\vec{x}-\vec{\mu}_{2}\right)-\ln P\left(\omega_{2}\right)\\
\Longleftrightarrow\quad0 & =2\vec{\mu}_{1}^{T}\varSigma^{-1}\vec{x}-\vec{\mu}_{1}^{T}\varSigma^{-1}\vec{\mu}_{1}+2\ln P\left(\omega_{1}\right)+2\vec{\mu}_{2}^{T}\varSigma^{-1}\vec{x}+\vec{\mu}_{2}^{T}\varSigma^{-1}\vec{\mu}_{2}-2\ln P\left(\omega_{2}\right)\\
\Longleftrightarrow\quad0 & =2\left(\vec{\mu}_{1}-\vec{\mu}_{2}\right)^{T}\varSigma^{-1}\vec{x}-\vec{\mu}_{1}^{T}\varSigma^{-1}\vec{\mu}_{1}+2\ln P\left(\omega_{1}\right)+\vec{\mu}_{2}^{T}\varSigma^{-1}\vec{\mu}_{2}-2\ln P\left(\omega_{2}\right)\\
\overset{\textrm{ozn.}}{\Longleftrightarrow}\quad0 & =\vec{A}\vec{x}+b
\end{align*}

\end_inset

V takovém případě je klasifikátor lineární.
 Platí i opačná implikace, tedy pokud je klasifikátor lineární, tak jsou
 kovarianční matice stejné.
 Této vlastnosti se dá využít pro lepší odhad kovarianční matice, protože
 na její odhad můžeme použít všechna data a odhad je pak přesnější.
 To, zda jsou kovarianční matice stejné, testujeme statisticky.
 Další příklady jak vypadají rozdělovací hranice pro různé tvary a vzájemné
 polohy gaussovských rozdělení jsou uvedeny na obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Bayes_polohy_gauss"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/PNG/Bayes_gauss.png
	lyxscale 50
	height 40theight%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Různé vzájemné polohy gaussovských rozdělení a rozdělovací hranice (rovnoběžky,
 různoběžky, přímka,...).
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Bayes_polohy_gauss"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
V případě, že uvažujeme stejnou apriorní pravděpodobnost pro všechny třídy,
 můžeme zjednodušit diskriminační funkci do tvaru
\begin_inset Formula 
\[
g_{i}\left(\vec{x}\right)=-\frac{1}{2}\left(\vec{x}-\vec{\mu}\right)^{T}\varSigma_{i}^{-1}\left(\vec{x}-\vec{\mu}\right).
\]

\end_inset

Definujme Mahalanobisovu vzdálenost vztahem
\begin_inset Formula 
\[
d_{M}\left(\vec{x}\right)=\left(\vec{x}-\vec{\mu}\right)^{T}\varSigma_{i}^{-1}\left(\vec{x}-\vec{\mu}\right),
\]

\end_inset

který udává vzdálenost bodu od třídy.
 Z tvaru Mahalanobisovy vzdálenosti plyne, že její minimalizace je ekvivalentní
 maximalizaci diskriminační funkce.
 Tedy klasifikaci můžeme provádět minimalizací Mahalanobisovy vzdálenosti.
 
\end_layout

\begin_layout Note
Protože všude předpokládáme normální rozložení dat, měli bychom tuto normalitu
 otestovat.
 To není problém pro jedno-dimenzionální data, ale pro více-dimenzionální
 už to problém je.
 V praxi se toto šidí tím, že otestujeme normalitu všech marginálních rozdělení,
 a poté prohlásíme, že i sdružené rozdělení je normální.
 Tato implikace ovšem platí pouze opačným směrem.
 Normalita marginálních rozdělení nám nic neříká o normalitě sdruženého
 rozdělení.
 Není to tedy korektní postup, ale v praxi se kvůli časové úspoře používá.
 Je tedy možné to použít, ale musíme vědět, co děláme špatně a proč to děláme
 špatně.
\end_layout

\begin_layout Subsubsection
Co dělat pokud třídy nejsou normálně rozdělené
\end_layout

\begin_layout Standard
V případě, že máme data, která nejsou normálně rozdělená, nabízí se nám
 několik možností jak postupovat.
\end_layout

\begin_layout Itemize
První možností je odhadování parametrů jiného než gaussovského rozdělení,
 které by nám data popisovalo.
 
\end_layout

\begin_layout Itemize
Další možností je popsat data pomocí gaussovských směsí.
 Většinou se používají součtové směsi.
 Může dobře fungovat, pokud podtřídy mají normální rozdělení.
 K tomuto jevu může například dojít, když vezmeme moc velké třídy.
 Pokud třeba vezmeme dohromady váhy dětí, dospělých a slonů, tak nejspíš
 normální rozdělení mít nebudou, ale jednotlivě ano.
\end_layout

\begin_layout Itemize
Poslední možností jsou neparametrické odhady, kterým se budeme věnovat v
 další části.
\end_layout

\begin_layout Subsection
Neparametrické odhady class-conditional pravděpodobnosti
\end_layout

\begin_layout Standard
Hustotu pravděpodobnosti na intervalech odhadneme pomocí relativních četností
 jejích realizací.
 Provádíme průměrování relativních četností pomocí váženého výběrového okna
 
\begin_inset Formula $w$
\end_inset

, např.
 
\emph on
Parzen window.
 
\emph default
Dost záleží na tom, jakou zvolíme šířku okna, tzn.
 nosič funkce 
\begin_inset Formula $w$
\end_inset

.
 Extrémem jsou volby 
\begin_inset Formula $w=1$
\end_inset

, kdy dostáváme jednotlivé realizace s pravděpodobností 
\begin_inset Formula $\frac{1}{n}$
\end_inset

 a 
\begin_inset Formula $w=\max$
\end_inset

, kdy dostaneme konstantní hustotu po celém intervalu.
 Malá okna vedou na přetrénování a velká naopak na vyhlazení dat.
 V případě spojitých dat na velikosti okna nezáleží.
\end_layout

\begin_layout Subsection
Aplikace Bayesova klasifikátoru v multispektrálním snímání země
\end_layout

\begin_layout Standard
Bayesů klasifikátor se velice často používá v multispektrálním snímání země.
 V této úloze jako objekty bereme jednotlivé pixely a příznaky pro nás jsou
 hodnoty intenzity pixelů ve spektrálním pásmu (od 4 o několika set).
 Jedná se například o klasifikování družicových snímků, kde příznaky mohou
 být třeba voda, poušť, les, resp.
 pásma intenzit, která jim odpovídají.
 Trénovací množiny se vybírají ručně pomocí tematických map.
 Typický počet tříd je 2 až 16.
 
\end_layout

\begin_layout Section
Rozhodovací stromy
\end_layout

\begin_layout Standard
Jedná se o nemetrické klasifikátory.
 Obecné rozhodovací stromy mohou mít více větví v každém uzlu.
 Existuje ovšem způsob, jak libovolný rozhodovací strom převést na strom
 binární, který má v každém uzlu dvě větve, viz obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Rozhodovaci_strom"

\end_inset

.
 Typicky tedy rozhodovací stromy pracují s příznaky 
\begin_inset Quotes gld
\end_inset


\emph on
Yes - No
\emph default

\begin_inset Quotes grd
\end_inset

.
 V praxi se moc nepoužívají, v podstatě jen na jednoduché úlohy.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Strom_graf.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Převedení obecného rozhodovacího stromu na binární rozhodovací strom.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Rozhodovaci_strom"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Účinnost klasifikace (
\emph on
classification performance
\emph default
)
\end_layout

\begin_layout Standard
Nyní se zabývejme otázkou jak testovat kvalitu klasifikátoru.
 Chceme zjistit jak moc úspěšný klasifikátor byl, tzn.
 kolik dat klasifikoval správně.
 Toto testování je nutné provádět na množině dat.
\end_layout

\begin_layout Itemize

\series bold
Test na trénovací množině: 
\series default
optimistický odhad chyby, ale je to blbost.
 Na této množině jsme klasifikátor trénovali, takže by měl fungovat dobře.
\end_layout

\begin_layout Itemize

\series bold
Test na testovací množině:
\series default
 pesimistický odhad chyby.
 U testovací množiny musíme stejně jako u množiny trénovací vědět, jak mají
 být data správně klasifikována.
 
\end_layout

\begin_layout Standard
Pokud budeme intuitivně pouze porovnávat 
\begin_inset Quotes gld
\end_inset

počet zásahů
\begin_inset Quotes grd
\end_inset

, dostaneme sice jakousi představu o kvalitě klasifikátoru, ale je to zavádějí.
 Různé chyby totiž mohou mít různou důležitost.
 Typickým příkladem je určování nemoci u pacientů.
 Pokud totiž řekneme, že pacient je nemocný, a začneme ho léčit, i když
 ve skutečnosti není, tak se dopustíme méně závažné chyby, než když nemocného
 pacienta prohlásíme za zdravého a léčit ho nebudeme.
 
\end_layout

\begin_layout Standard
Jestliže máme všechny třídy stejně zastoupeny a všechny chyby při klasifikaci
 nám vadí stejně, pak je možné kvalitu klasifikátoru charakterizovat jedním
 číslem.
 Jinou možností pro vyjádření kvality jsou tzv.
 
\emph on
confusion table
\emph default
.
 Uvažujme příklad, kdy mám 27 zvířat (8 koček, 6 psů a 13 králíků) a confusion
 table v následujícím tvaru.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Klasifikace
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kočky 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Psi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Králíci
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Skutečné třídy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kočky
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Psi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Králíci
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
Tato tabulka udává, že ze skutečného počtu 8 koček klasifikátor 3 klasifikoval
 jako psy atd.
 V případě, že jsou všechny mimo diagonální prvky přibližně stejné, můžeme
 tuto tabulku zkomprimovat do jednoho čísla, které značí úspěšnost.
 
\end_layout

\begin_layout Standard
Důvodem, proč klasifikátor nefunguje přesně, může být například špatná trénovací
 množina.
 Pokud jsou již v trénovací množině data špatně klasifikovaná, není možné
 klasifikátor natrénovat správně.
 Tedy vybrat dostatečně kvalitní trénovací množinu je velice důležité.
\end_layout

\begin_layout Section
Kombinované klasifikátory
\end_layout

\begin_layout Standard
Pokud chceme zlepšit úspěšnost klasifikace, máme několik možností jak toho
 dosáhnout.
 Můžeme zkusit změnit příznaky, nebo příznaky přidat.
 Ve druhém případě ovšem můžeme narazit na problém vysoké dimenze (tzv.
 
\emph on
curse of dimensionality
\emph default
).
 Další možností je zvolit větší a kvalitnější trénovací množinu, nebo použít
 jiný klasifikátor, případně jiný parametrický model.
\end_layout

\begin_layout Standard
Pokud ani jedna z předchozích možností nepomáhá nebo je není možné provést,
 lze použít kombinaci více nezávislých klasifikátorů 
\begin_inset Formula $\mathcal{K}_{1},\dots,\mathcal{K}_{L}$
\end_inset

.
 Protože některé fungují jen na určité příznaky.
 Otázkou je, jak zkombinovat výsledky od jednotlivých klasifikátorů.
 Nechť 
\begin_inset Formula $k$
\end_inset

-tý klasifikátor určí 
\begin_inset Formula $p_{k}\left(x\left|\omega_{i}\right.\right)$
\end_inset

.
 Jako kombinovaný klasifikátor můžeme například brát většinovou volbu.
 To je ale takové 
\begin_inset Quotes gld
\end_inset

nestatistické
\begin_inset Quotes grd
\end_inset

 řešení.
 Protože pokud je nějaký klasifikátor úplně špatný, z této volby to nepoznáme.
 Když už kombinujeme více klasifikátorů, tak chceme, aby i ten nejhorší
 z nich dosahoval co nejlepších výsledků.
 Lepší volby kombinací jsou: 
\begin_inset Formula 
\begin{align*}
p\left(x\left|\omega_{i}\right.\right) & =\max\limits _{i}\prod\limits _{k=1}^{L}p_{k}\left(x\left|\omega_{i}\right.\right), & p\left(x\left|\omega_{i}\right.\right) & =\max\limits _{i}\min\limits _{k\in\hat{L}}p_{k}\left(x\left|\omega_{i}\right.\right), & p\left(x\left|\omega_{i}\right.\right) & =\max\limits _{i}\max\limits _{k\in\hat{L}}p_{k}\left(x\left|\omega_{i}\right.\right).
\end{align*}

\end_inset

Ovšem ani pokud zvolíme jednu z předchozích možností, nemáme zaručeno, že
 kombinovaný klasifikátor bude lepší než nejlepší klasifikátor.
\end_layout

\begin_layout Chapter
Redukce dimenzionality příznakového prostoru
\end_layout

\begin_layout Standard
Důvodem snahy o redukci dimenzionality je, že často vede ke zlepšení klasifikace
 a zrychlení výpočtu.
 Nevýhodou je možná ztráta informace, a proto je nutné najít způsob, jak
 při transformaci zahodit co nejméně informace.
 Máme 
\begin_inset Formula $D$
\end_inset

-dimenzionální příznakový prostor a chceme jeho dimenzi transformací zredukovat
 na 
\begin_inset Formula $n$
\end_inset

-dimenzionální, kde 
\begin_inset Formula $n\ll D$
\end_inset

, tj.
\begin_inset Formula 
\[
\left(x_{1},x_{2},\ldots,x_{D}\right)\overset{\mathcal{T}}{\rightarrow}\left(y_{1},y_{2},\ldots,y_{n}\right).
\]

\end_inset

Rozlišujeme dva základní principy.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Feature extraction
\emph default
:
\series default
 vytváříme nový příznakový prostor a příznaky ztrácejí jejich původní význam.
 Máme transformaci 
\begin_inset Formula $\mathcal{T}:\mathbb{R}^{D}\rightarrow\mathbb{R}^{n}$
\end_inset

.
 Pro 
\begin_inset Formula $n=1$
\end_inset

 získáme například nový prostor takto 
\begin_inset Formula 
\[
y_{1}=\stackrel[k=1]{D}{\sum}x_{k}.
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
\emph on
Feature selection
\emph default
:
\series default
 vybíráme pouze podmnožinu příznaků, kterou budeme používat.
 Výhodou je, že příznaky neztrácejí význam a ty, co nechceme použít, nemusíme
 ani měřit, což vede k urychlení klasifikace.
\end_layout

\begin_layout Standard
Podle toho jaká máme data, rozlišujeme dva základní problémy redukce dimenzional
ity.
\end_layout

\begin_layout Section
Principle Component Transform (PCT)
\begin_inset CommandInset label
LatexCommand label
name "sec:PCA"

\end_inset


\end_layout

\begin_layout Standard
Uvažujme, že nedisponujeme trénovací množinou, tzn.
 máme všechna data a nemáme je roztříděná.
 Tato data mohou být silně korelovaná a korelace se chceme zbavit.
 Pokud totiž máme korelované příznaky, tak nám stačí uvažovat jeden a ostatní
 z něho poté můžeme dopočítat.
 Na tento problém se používá přístup feature extraction.
 Uvažujme 2D příznakový prostor.
 Hlavní myšlenka vychází z toho, že korelované příznaky vytváří v příznakovém
 prostoru více či méně protáhlou elipsu, v níž můžeme kratší poloosu považovat
 za šum.
 Za příznaky můžeme brát souřadnice průmětů bodů z příznakového prostoru
 do hlavní poloosy této elipsy.
 Princip metody je následující.
\end_layout

\begin_layout Enumerate
Provádíme OG transformaci příznakového prostoru, konkrétně rotaci 
\begin_inset Formula $y=\mathcal{T}x$
\end_inset

.
 Příznakový prostor rotujeme tak dlouho, dokud nejsou nové příznaky 
\begin_inset Formula $y$
\end_inset

 nekorelované, tzn.
 kovarianční matice 
\begin_inset Formula $\sum_{y}$
\end_inset

 je diagonální.
 Spočítáme vlastní čísla a vlastní vektory kovarianční matice 
\begin_inset Formula $\sum_{x}$
\end_inset

.
 Vlastní vektory příslušné k různým vlastním číslům jsou ortogonální a vlastní
 vektory příslušné jednomu vlastnímu číslu lze ortogonalizovat.
 Rotaci příznakového prostoru můžeme 
\begin_inset Quotes gld
\end_inset

seskládat
\begin_inset Quotes grd
\end_inset

 z vlastních vektorů a dostáváme vztah
\begin_inset Formula 
\[
\mathcal{T}^{T}{\textstyle \sum_{x}}\mathcal{T}={\textstyle \sum_{y}}\quad\Longrightarrow\quad y=\mathcal{T}x.
\]

\end_inset

V předchozím vztahu je místo inverze rotační matice její transpozice, ale
 protože je tato matice složená z vlastních vektorů, tak jsou tyto pojmy
 ekvivalentní.
 Nově vzniklá kovarianční matice 
\begin_inset Formula $\sum_{y}$
\end_inset

 má na diagonále rozptyly v nové souřadné soustavě.
 Důležité je zmínit, že tato transformace je vždy možná a navíc víme, jak
 sestrojit transformační matici 
\begin_inset Formula $\mathcal{T}$
\end_inset

.
 Existence reálných vlastních čísel plyne ze symetrie, reálnosti a pozitivní
 definitnosti matice 
\begin_inset Formula ${\textstyle \sum_{x}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Seřadíme příznaky podle rozptylů a vybereme si prvních 
\begin_inset Formula $n$
\end_inset

 příznaků s největšími rozptyly, které se nazývají hlavní komponenty (
\emph on
principal components
\emph default
).
 Tento výběr je možné udělat až po transformaci, protože u korelovaných
 dat nelze seřadit podle rozptylů.
 Toto jsou příznaky, které použijeme ke klasifikaci a ostatní 
\begin_inset Quotes gld
\end_inset

zahodíme
\begin_inset Quotes grd
\end_inset

, čímž zredukujeme dimenzi úlohy.
\end_layout

\begin_layout Standard
Pokud by vlastní čísla byla stejná, nepředstavují data v příznakovém prostoru
 elipsu, ale kružnici a rotací bychom nic nezměnili.
 K tomu ovšem může dojít pouze pokud 
\begin_inset Formula $\sum_{x}=k\cdot\mathbb{I}$
\end_inset

, a to znamená, že už původní příznaky jsou nekorelované.
\end_layout

\begin_layout Standard
Tato metoda ovšem není moc dobrá pro klasifikaci, protože se u ní vyskytuje
 problém se separabilitou.
 PCT totiž hodnotí vliv jednotlivých příznaků pouze na základě jejich rozptylů,
 ale ty se nemusejí shodovat s jejich diskriminační silou, viz 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:PCT"

\end_inset

.
 Lze jí tedy použít, ale je nutné si být vědom této špatné vlastnosti.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/PCT.pdf_tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ilustrace proč je PCT špatná pro klasifikační úlohy.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:PCT"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Multi-class problem
\end_layout

\begin_layout Standard
Předpokládejme, že máme trénovací množinu, tzn.
 máme data roztříděná do jednotlivých tříd.
 Lze tedy mluvit o separabilitě příznaků a můžeme vybírat příznaky, které
 chceme používat.
 Na tento problém se používá přístup feature selection.
 Metody pro redukci dimenzionality pro klasifikační úlohy musejí brát v
 úvahu diskriminační sílu (separabilitu) jednotlivých příznaků.
 Cílem je maximalizovat diskriminabilitu mezi třídami, otázkou ale je, jak
 ji měřit.
 V případě, že bychom chtěli použít Wardovo kritérium, tak nebude fungovat.
 U shlukování funguje, protože pracujeme na stejném příznakovém prostoru,
 tzn.
 máme zafixované příznaky a podle nich rozdělujeme data.
 Zde je to naopak, máme fixované třídy (trénovací množiny) a vybíráme příznaky.
\end_layout

\begin_layout Subsection
Two-class problem
\end_layout

\begin_layout Standard
Pro počet tříd 
\begin_inset Formula $N=2$
\end_inset

 a pokud jsou nekorelované a normální, se používá kritérium
\begin_inset Formula 
\[
\frac{(m_{1}-m_{2})^{2}}{(\sigma_{1}^{2}+\sigma_{2}^{2})},
\]

\end_inset

které celkem dobře funguje.
 Další používané kritérium pro měření diskriminability je 
\begin_inset Formula 
\[
\textrm{tr}\left(W^{-1}B\right),
\]

\end_inset

kde 
\begin_inset Formula $B$
\end_inset

 je between cluster matrix a 
\begin_inset Formula $W$
\end_inset

 je within cluster matrix, viz sekce 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Kriteria_kvality"

\end_inset

.
 Pokud je počet tříd 
\begin_inset Formula $N=2$
\end_inset

 a obě trénovací množiny mají stejný počet prvků, pak platí 
\begin_inset Formula 
\[
\max\textrm{tr}\left(W^{-1}B\right)\thicksim\max d_{M}=\max\left(\vec{m}_{1}-\vec{m}_{2}\right)\left(\Sigma_{1}+\Sigma_{2}\right)^{-1}\left(\vec{m}_{1}-\vec{m}_{2}\right)^{T},
\]

\end_inset

kde 
\begin_inset Formula $d_{M}$
\end_inset

 je Mahalanobisova vzdálenost.
 Tato vzdálenost ovšem neumí dobře rozlišit 
\begin_inset Formula $\vec{m}_{1}$
\end_inset

 a 
\begin_inset Formula $\vec{m}_{2}$
\end_inset

, která jsou blízko u sebe.
 Vylepšením, které více zohledňuje tvar jednotlivých tříd je Bhattacharyaova
 vzdálenost 
\begin_inset Formula 
\[
d_{B}=\frac{1}{4}d_{M}+\ln\frac{\left|\Sigma_{1}+\Sigma_{2}\right|}{2\sqrt{\left|\Sigma_{1}\right|\left|\Sigma_{2}\right|}}.
\]

\end_inset

Obě tyto vzdálenosti bývají používány po dvojicích i v případě multi-class
 problému.
 Je důležité zdůraznit, že zmíněné způsoby měření diskriminability předpokládají
 normálně rozdělené třídy.
 Normalitu je tedy třeba testovat, např.
 pomocí Pearsonova testu a pro jiné třídy není možné metody použít.
 Lze ještě užít jako aproximaci pro některé unimodální třídy.
 Dále budeme hledat algoritmus, který povede na maximalizaci zvolené míry
 diskriminability.
\end_layout

\begin_layout Subsection
Optimální metody 
\end_layout

\begin_layout Standard
Jedná se o metody používající 
\emph on
fullsearch
\emph default
 příznaků nebo jeho modifikace.
 Jejich výhodou je, že zaručují nalezení globálního optima.
 Naopak nevýhodou je velká náročnost a proto se v praxi téměř nepoužívají.
\end_layout

\begin_layout Subsubsection
Algoritmus 
\emph on
Branch & Bound
\end_layout

\begin_layout Standard
Myšlenkou algoritmu je efektivní procházení celého stromu příznaků, viz
 obr.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:branchandbound"

\end_inset

.
 Strom se odvíjí od kořene, kde je celá 
\begin_inset Formula $D$
\end_inset

-tice příznaků, k listům, ve kterých už jsou jen 
\begin_inset Formula $k$
\end_inset

-tice příznaků, 
\begin_inset Formula $k<D$
\end_inset

.
 V každé následující úrovni stromu ubude jeden příznak.
 Strom procházíme od kořene k listům a v každém uzlu spočteme kritérium
 
\begin_inset Formula $K=d_{M}\left(\left\langle k-tice\right\rangle \right)$
\end_inset

, které určuje kvalitu popisu pomocí daných příznaků.
 Protože v každé úrovni ubíráme jeden příznak, bude se hodnota kritéria
 
\begin_inset Formula $K$
\end_inset

 se zanořováním hlouběji do stromu zmenšovat.
 Při procházení stromu tedy nejdříve projdeme jednu větev až do požadované
 úrovně (tuto úroveň určíme podle toho, kolik chceme použít příznaků pro
 popis).
 V této úrovni si uložíme hodnotu kritéria 
\begin_inset Formula $V\coloneqq K$
\end_inset

 a jdeme k dalším uzlům, ve kterých testujeme zda 
\begin_inset Formula $K>V$
\end_inset

.
 Pokud to neplatí (tj.
 
\begin_inset Formula $K\leq V$
\end_inset

), můžeme zahodit celý podstrom, protože hodnota 
\begin_inset Formula $K$
\end_inset

 se bude dál jen snižovat a my se snažíme 
\begin_inset Formula $K$
\end_inset

 maximalizovat.
 Pokud se v průběhu procházení opět dostaneme až do požadované úrovně a
 platí 
\begin_inset Formula $K>V$
\end_inset

, aktualizujeme hodnotu 
\begin_inset Formula $V$
\end_inset

 a zapamatujeme si tento list jako aktuální maximum.
 Tak postupujeme dále až projdeme celý strom.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "Images/Branch_Bound.pdf_tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:branchandbound"

\end_inset

Algoritmus Branch & Bound při výběru dvou z pěti příznaků.
 Použité kritérium je ve tvaru 
\begin_inset Formula $K\left(p_{1},p_{2},\ldots,p_{k}\right)=\sum p_{i}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Suboptimální metody
\end_layout

\begin_layout Standard
Protože 
\emph on
fullsearch
\emph default
 příznaků je značně pomalý, provádí se místo něj následující heuristické
 algoritmy.
\end_layout

\begin_layout Subsubsection
Algoritmus 
\emph on
Sequential forward selection
\emph default
 (SFS)
\end_layout

\begin_layout Standard
Tento algoritmus v prvním kroku najde nejlepší příznak a k němu hledá další
 příznak, který s ním vytváří nejlepší dvojici.
 Tento postup poté opakuje.
 V 
\begin_inset Formula $k$
\end_inset

-tém kroku přidává algoritmus příznak, který s předchozí 
\begin_inset Formula $(k-1)$
\end_inset

-ticí vytváří nejlepší 
\begin_inset Formula $k$
\end_inset

-tici vzhledem k danému kritériu kvality kritériu.
 
\end_layout

\begin_layout Standard
V základním provedení má algoritmus vady, protože nelze vyhodit příznak
 a přidáváme pouze po jednom příznaku.
 Vylepšení může spočívat v tom, že přidáváme 
\begin_inset Formula $j$
\end_inset

-tice, kde v rámci 
\begin_inset Formula $j$
\end_inset

-tice probíhá 
\emph on
fullsearch
\emph default
.
 Algoritmus lze samozřejmě modifikovat místo procesu 
\emph on
forward
\emph default
 na odebírání tj.
 
\emph on
backward
\emph default
.
 Dalším rozšířením tohoto algoritmu může být tzv.
 plus 
\begin_inset Formula $l$
\end_inset

 minus 
\begin_inset Formula $s$
\end_inset

 algoritmus.
 Od originálního SFS algoritmu se liší tím, že v daném kroku lze přidat
 
\begin_inset Formula $l$
\end_inset

-tici a odebrat 
\begin_inset Formula $s$
\end_inset

-tici příznaků.
 V rozšířené verzi navíc 
\begin_inset Formula $l$
\end_inset

 a 
\begin_inset Formula $s$
\end_inset

 jsou dynamické.
\end_layout

\end_body
\end_document
